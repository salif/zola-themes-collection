<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>mo8it.com - web</title>
    <subtitle>mo8it&#x27;s personal website with a technical blog about Rust, Linux, FOSS and Self-Hosting</subtitle>
    <link rel="self" type="application/atom+xml" href="data-update/mo8it/tags/web/atom.xml"/>
    <link rel="alternate" type="text/html" href="data-update/mo8it/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-01-21T00:00:00+00:00</updated>
    <id>data-update/mo8it/tags/web/atom.xml</id>
    <entry xml:lang="en">
        <title>Killing in the name of Privacy</title>
        <published>2023-11-23T00:00:00+00:00</published>
        <updated>2023-11-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="data-update/mo8it/blog/privacy/"/>
        <id>data-update/mo8it/blog/privacy/</id>
        
        <summary type="html">&lt;p&gt;An AD blocker killed a project that I was working on for 4 months.
It was one commit adding 2 lines that killed 419 commits with more than 2000 total lines of code.&lt;&#x2F;p&gt;
&lt;p&gt;The script that powers my project was placed on the filter list &quot;EasyPrivacy&quot;.
But is the project that I designed with privacy as the first feature trying to invade your privacy?&lt;&#x2F;p&gt;
&lt;p&gt;This brings up the topic about telemetry in FOSS projects.
Is telemetry inherently bad?
Is there a way to collect telemetry without comprimising privacy?&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>SQLx integration in Axum</title>
        <published>2023-05-29T00:00:00+00:00</published>
        <updated>2023-05-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="data-update/mo8it/blog/sqlx-integration-in-axum/"/>
        <id>data-update/mo8it/blog/sqlx-integration-in-axum/</id>
        
        <summary type="html">&lt;p&gt;SQLx is an awesome crate for interacting with databases in Rust with compile time checks.
In this blog post, we will learn how to use it in an Axum backend to store and retrieve data from a database.&lt;&#x2F;p&gt;
&lt;p&gt;The example will be storing submitted contact forms from the &lt;a href=&quot;data-update&#x2F;mo8it&#x2F;blog&#x2F;getting-started-with-rust-backends&#x2F;&quot;&gt;previous post about Axum&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;During the SQLx integration, we will learn about states and returning JSON in Axum.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Getting started with Rust backends</title>
        <published>2023-04-01T00:00:00+00:00</published>
        <updated>2024-01-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="data-update/mo8it/blog/getting-started-with-rust-backends/"/>
        <id>data-update/mo8it/blog/getting-started-with-rust-backends/</id>
        
        <summary type="html">&lt;p&gt;How hard can it be to write a web backend in Rust?
We will try to answer this question through an example.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
