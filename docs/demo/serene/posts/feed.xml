<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>serene::posts</title>
	<subtitle>Demo posts page for zola-theme-serene</subtitle>
	<link rel="self" type="application/atom+xml" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/feed.xml"/>
  <link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/"/>
  
	<updated>2025-01-31T00:00:00+00:00</updated>
	
	<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/feed.xml</id>
	<entry xml:lang="en">
		<title>Example Post</title>
		<published>2025-01-31T00:00:00+00:00</published>
		<updated>2025-01-31T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example-post/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example-post/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example-post/">&lt;p&gt;Rust 1.0 is on its way! We have nailed down a concrete list of features and are hard at work on implementing them. We plan to ship the 1.0 beta around the end of the year. If all goes well, this will go on to become the 1.0 release after the beta period. After 1.0 is released, future 1.x releases will be backwards compatible, meaning that existing code will continue to compile unmodified (modulo compiler bugs, of course).&lt;&#x2F;p&gt;
&lt;p&gt;Of course, a Rust 1.0 release means something more than &quot;your code will continue to compile&quot;. Basically, it means that we think the design of Rust finally feels right. More specifically, it feels &lt;em&gt;minimal&lt;&#x2F;em&gt;. The language itself is now focused on a simple core concept, which we call ownership and borrowing (more on this later). Leveraging ownership and borrowing, we have been able to build up everything else that we have needed in libraries. This is very exciting, because any library we can write, you can write too. This really gives us confidence that Rust will not only achieve its original goals but also go beyond and be used for all kinds of things that we haven&#x27;t even envisioned.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-road-to-rust-1-0&quot;&gt;The road to Rust 1.0&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-road-to-rust-1-0&quot; aria-label=&quot;Anchor link for: the-road-to-rust-1-0&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Rust has gone through a long evolution. If you haven&#x27;t looked at Rust in a while, you may be surprised at what you see: over the last year, we&#x27;ve been radically simplifying the design. As a prominent example, Rust once featured several pointer types, indicated by various sigils: these are gone, and only the reference types (&lt;code&gt;&amp;amp;T&lt;&#x2F;code&gt;, &lt;code&gt;&amp;amp;mut T&lt;&#x2F;code&gt;) remain. We have also been able to consolidate and simplify a number of other language features, such as closures, that once sported a wide variety of options. (Some of these changes are still in progress.)&lt;&#x2F;p&gt;
&lt;p&gt;The key to all these changes has been a focus on the core concepts of &lt;em&gt;ownership and borrowing&lt;&#x2F;em&gt;. Initially, we introduced ownership as a means of transferring data safely and efficiently between tasks, but over time we have realized that the same mechanism allows us to move all sorts of things out of the language and into libraries. The resulting design is not only simpler to learn, but it is also much &quot;closer to the metal&quot; than we ever thought possible before. All Rust language constructs have a very direct mapping to machine operations, and Rust has no required runtime or external dependencies. When used in its own most minimal configuration, it is even possible to write an &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charliesome&#x2F;rustboot&quot;&gt;operating&lt;&#x2F;a&gt; &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanra&#x2F;RustOS&quot;&gt;systems&lt;&#x2F;a&gt; &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jvns&#x2F;puddle&quot;&gt;kernel&lt;&#x2F;a&gt; in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Throughout these changes, though, Rust has remained true to its goal of providing the &lt;strong&gt;safety&lt;&#x2F;strong&gt; and &lt;strong&gt;convenience&lt;&#x2F;strong&gt; of modern programming languages, while still offering the &lt;strong&gt;efficiency&lt;&#x2F;strong&gt; and &lt;strong&gt;low-level control&lt;&#x2F;strong&gt; that C and C++ offer. Basically, if you want to get your hands dirty with the bare metal machine, but you don&#x27;t want to spend hours tracking down segfaults and data races, Rust is the language for you.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re not already familiar with Rust, don&#x27;t worry. Over the next few months, we plan on issuing a regular series of blog posts exploring the language. The first few will focus on different aspects of ownership and how it can be used to achieve safe manual memory management, concurrency, and more. After that, we&#x27;ll turn to other aspects of the Rust language and ecosystem.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-left-to-do&quot;&gt;What is left to do&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-left-to-do&quot; aria-label=&quot;Anchor link for: what-is-left-to-do&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;ve made great progress, but there is still a lot to do before the release. Here is a list of the big-ticket changes we are currently working on:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Dynamically sized types:&lt;&#x2F;em&gt; This extension to the type system allows us to uniformly handle types where the size is not known at compile time, such as an array type. This enables us to support user-designed smart pointers that contain arrays or objects. Nicholas Cameron &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;commit&#x2F;7932b719ec2b65acfa8c3e74aad29346d47ee992&quot;&gt;recently landed&lt;&#x2F;a&gt; a heroic commit implementing the bulk of the work.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Unboxed closures:&lt;&#x2F;em&gt; Our new &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;blob&#x2F;master&#x2F;text&#x2F;0114-closures.md&quot;&gt;closure design&lt;&#x2F;a&gt; unifies closures and object types. Much of the spec has been implemented.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Associated types:&lt;&#x2F;em&gt; We are moving our trait system to use &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;195&quot;&gt;associated types&lt;&#x2F;a&gt;, which really help to cut down on the level of generic annotations required to write advanced generic libraries. Patrick Walton has done an initial implementation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Where clauses:&lt;&#x2F;em&gt; We are adding a flexible new form of constraints called &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;135&quot;&gt;where clauses&lt;&#x2F;a&gt;. Patrick Walton already landed support for the basic syntax, and I have implemented the remaining functionality on a branch that should be landing soon.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Multidispatch traits:&lt;&#x2F;em&gt; We are extending traits so that they can &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;195&quot;&gt;match on more than one type at a time&lt;&#x2F;a&gt;, which opens up a lot of new opportunities for more ergonomic APIs. I have prototyped this work on a branch.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Destructors:&lt;&#x2F;em&gt; We are improving our destructor semantics to not require zeroing of memory, which should improve compilation and execution times. Felix Klock has implemented the requisite analysis and is in the process of landing it.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Green threading:&lt;&#x2F;em&gt; We are removing support for green threading from the standard library and moving it out into an external package. This allows for a closer match between the Rust model and the underlying operating system, which makes for more efficient programs. Aaron Turon has &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;230&quot;&gt;written the RFC&lt;&#x2F;a&gt; and is getting started on that work now.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;At the library level, we are currently engaged in a sweep over libstd to decide what portions are stable and which are not. You can &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;stability.html&quot;&gt;monitor the progress&lt;&#x2F;a&gt; here. (Note though that many of the &#x27;unstable&#x27; items are simply things whose name will be changed slightly to conform to conventions or other minor tweaks.)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cargo-and-the-library-ecosystem&quot;&gt;Cargo and the library ecosystem&lt;a class=&quot;zola-anchor&quot; href=&quot;#cargo-and-the-library-ecosystem&quot; aria-label=&quot;Anchor link for: cargo-and-the-library-ecosystem&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Earlier I wrote that Rust 1.0 is not so much an endpoint as it is a starting point. This is very true. The goal for Rust 1.0 is to be an flexible substrate for building efficient libraries -- but libraries aren&#x27;t any good if nobody can find them or they are difficult to install.&lt;&#x2F;p&gt;
&lt;p&gt;Enter &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;&quot;&gt;Cargo, the Rust package manager&lt;&#x2F;a&gt;. Cargo has been undergoing rapid development lately and is already quite functional. By the time 1.0 is released, we plan to also have a central repository up and running, meaning that it will be simple to create and distribute Rust libraries (which we call &quot;crates&quot;). Oh, and of course Cargo and its associated server are both written in Rust.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;release-process&quot;&gt;Release process&lt;a class=&quot;zola-anchor&quot; href=&quot;#release-process&quot; aria-label=&quot;Anchor link for: release-process&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Rust releases have been following a train schedule for a long time and we don&#x27;t plan on changing that. Once we start having stable releases, however, we&#x27;ll also build up a bit more infrastructure. Our plan is to adopt the &quot;channel&quot; system used by many other projects such as &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;www.mozilla.org&#x2F;en-US&#x2F;firefox&#x2F;channel&#x2F;&quot;&gt;Firefox&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;www.chromium.org&#x2F;getting-involved&#x2F;dev-channel&quot;&gt;Chrome&lt;&#x2F;a&gt;, and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;emberjs.com&#x2F;builds&#x2F;&quot;&gt;Ember.js&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The idea is that there are three channels: Nightly, Beta, and Stable. The Nightly channel is what you use if you want the latest and greatest: it includes unstable features and libraries that may still change in backwards incompatible ways. Every six weeks, we cut a new branch and call it Beta. This branch excludes all the unstable bits, so you know that if you are using Beta or Stable, your code will continue to compile. At the same time, the existing Beta branch is promoted to the Stable release. We expect that production users will prefer to test on the Beta branch and ship with the Stable branch. Testing on Beta ensures that we get some advanced notice if we accidentally break anything you are relying on.&lt;&#x2F;p&gt;
&lt;p&gt;With regard to the 1.0 release specifically, the plan is to release the 1.0 beta and then follow this same process to transition to the official 1.0 release. However, if we find a serious flaw in the 1.0 beta, we may defer and run an additional beta period or two. After all, it&#x27;s better to wait a bit longer than wind up committed to something broken.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;looking-forward&quot;&gt;Looking forward&lt;a class=&quot;zola-anchor&quot; href=&quot;#looking-forward&quot; aria-label=&quot;Anchor link for: looking-forward&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;In many ways, Rust 1.0 is not so much an endpoint as it is a starting point. Naturally, we plan on continuing to develop Rust: we have a lot of features we want to add, many of which are already in the pipeline. But the work that&#x27;s most exciting to me is not the work that will be done by the Rust team. Rather, I expect that having a stable base will allow the Rust community and ecosystem to grow much more rapidly than it already has. I can&#x27;t wait to see what comes out of it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2014&#x2F;09&#x2F;15&#x2F;Rust-1.0.html&quot;&gt;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2014&#x2F;09&#x2F;15&#x2F;Rust-1.0.html&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Markdown</title>
		<published>2024-12-15T00:00:00+00:00</published>
		<updated>2024-12-25T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/markdown/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/markdown/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/markdown/">&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;a class=&quot;zola-anchor&quot; href=&quot;#heading&quot; aria-label=&quot;Anchor link for: heading&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;As you can see in this post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;paragraph&quot;&gt;Paragraph&lt;a class=&quot;zola-anchor&quot; href=&quot;#paragraph&quot; aria-label=&quot;Anchor link for: paragraph&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;p&gt;Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;emphasis&quot;&gt;Emphasis&lt;a class=&quot;zola-anchor&quot; href=&quot;#emphasis&quot; aria-label=&quot;Anchor link for: emphasis&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;normal text, &lt;strong&gt;bold text&lt;&#x2F;strong&gt;, &lt;em&gt;ltalic text&lt;&#x2F;em&gt;, &lt;em&gt;&lt;strong&gt;bold and ltalic text&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;blockquote&quot;&gt;Blockquote&lt;a class=&quot;zola-anchor&quot; href=&quot;#blockquote&quot; aria-label=&quot;Anchor link for: blockquote&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;list&quot;&gt;List&lt;a class=&quot;zola-anchor&quot; href=&quot;#list&quot; aria-label=&quot;Anchor link for: list&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;unordered:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Second item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Third item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;ordered:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First item&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Indented item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Indented item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Second item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Third item&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;link&quot;&gt;Link&lt;a class=&quot;zola-anchor&quot; href=&quot;#link&quot; aria-label=&quot;Anchor link for: link&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;There is a &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;example.com&quot;&gt;link&lt;&#x2F;a&gt; and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;example.com&quot;&gt;another link to example.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;table&quot;&gt;Table&lt;a class=&quot;zola-anchor&quot; href=&quot;#table&quot; aria-label=&quot;Anchor link for: table&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Syntax&lt;&#x2F;th&gt;&lt;th&gt;Description&lt;&#x2F;th&gt;&lt;th&gt;Test Text&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Header&lt;&#x2F;td&gt;&lt;td&gt;Title&lt;&#x2F;td&gt;&lt;td&gt;Here&#x27;s this&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Paragraph&lt;&#x2F;td&gt;&lt;td&gt;Text&lt;&#x2F;td&gt;&lt;td&gt;And more&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;with alignment:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;Syntax&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;Description&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: right&quot;&gt;Test Text&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;Header&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Title&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;Here&#x27;s this&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;Paragraph&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Text&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;And more&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;footnote&quot;&gt;Footnote&lt;a class=&quot;zola-anchor&quot; href=&quot;#footnote&quot; aria-label=&quot;Anchor link for: footnote&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; words consectetur&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; adipisicing elit.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;strikethrough&quot;&gt;Strikethrough&lt;a class=&quot;zola-anchor&quot; href=&quot;#strikethrough&quot; aria-label=&quot;Anchor link for: strikethrough&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;del&gt;The world is flat.&lt;&#x2F;del&gt; We now know that the world is round.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;horizontal-rule&quot;&gt;Horizontal Rule&lt;a class=&quot;zola-anchor&quot; href=&quot;#horizontal-rule&quot; aria-label=&quot;Anchor link for: horizontal-rule&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;hr &#x2F;&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;1&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;1&lt;&#x2F;sup&gt;
&lt;p&gt;First footnote.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;2&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;2&lt;&#x2F;sup&gt;
&lt;p&gt;Here&#x27;s the second footnote.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Image</title>
		<published>2024-11-02T00:00:00+00:00</published>
		<updated>2024-11-02T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/image/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/image/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/image/">&lt;p&gt;Image can zoom in and out, try click it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;normal-image&quot;&gt;Normal image&lt;a class=&quot;zola-anchor&quot; href=&quot;#normal-image&quot; aria-label=&quot;Anchor link for: normal-image&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;typical-app.webp&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;with-caption&quot;&gt;With caption&lt;a class=&quot;zola-anchor&quot; href=&quot;#with-caption&quot; aria-label=&quot;Anchor link for: with-caption&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;figure&gt;
    &lt;img 
        src=&quot;&amp;#x2F;assets&amp;#x2F;typical-app.webp&quot; 
         alt=&quot;alt text&quot;
        
        
    &gt;
    
    &lt;figcaption&gt;typical app arch&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
&lt;h2 id=&quot;via-link&quot;&gt;&#x27;via&#x27; link&lt;a class=&quot;zola-anchor&quot; href=&quot;#via-link&quot; aria-label=&quot;Anchor link for: via-link&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;figure&gt;
    &lt;img 
        src=&quot;&amp;#x2F;assets&amp;#x2F;typical-app.webp&quot; 
         alt=&quot;some alt text&quot;
        
        
    &gt;
    
    &lt;figcaption&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;tyrchen&amp;#x2F;rust-training&quot;&gt;via&lt;&#x2F;a&gt;&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Code</title>
		<published>2024-09-26T00:00:00+00:00</published>
		<updated>2024-09-26T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/code/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/code/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/code/">&lt;h2 id=&quot;inline-code&quot;&gt;Inline code&lt;a class=&quot;zola-anchor&quot; href=&quot;#inline-code&quot; aria-label=&quot;Anchor link for: inline-code&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;inline &lt;code&gt;code&lt;&#x2F;code&gt; and more &lt;code&gt;inline code&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;block-code&quot;&gt;Block code&lt;a class=&quot;zola-anchor&quot; href=&quot;#block-code&quot; aria-label=&quot;Anchor link for: block-code&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;diff&quot; class=&quot;language-diff z-code&quot;&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-header z-from-file&quot;&gt;&lt;span class=&quot;z-meta z-header z-from-file z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-from-file z-diff&quot;&gt;---&lt;&#x2F;span&gt; &#x2F;path&#x2F;to&#x2F;original	timestamp
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-header z-to-file&quot;&gt;&lt;span class=&quot;z-meta z-header z-to-file z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-to-file z-diff&quot;&gt;+++&lt;&#x2F;span&gt; &#x2F;path&#x2F;to&#x2F;new	timestamp
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-range z-unified&quot;&gt;&lt;span class=&quot;z-meta z-range z-unified z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-toc-list z-line-number z-diff&quot;&gt;-1,3 +1,9&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;This is an important
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;notice! It should
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;therefore be located at
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;the beginning of this
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;document!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; This part of the
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; document has stayed the
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; same from version to
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-range z-unified&quot;&gt;&lt;span class=&quot;z-meta z-range z-unified z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-toc-list z-line-number z-diff&quot;&gt;-8,13 +14,8&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; compress the size of the
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; changes.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;This paragraph contains
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;text that is outdated.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;It will be deleted in the
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;near future.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; It is important to spell
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;check this dokument. On
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;check this document. On
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; the other hand, a
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; misspelled word isn&amp;#39;t
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; the end of the world.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-range z-unified&quot;&gt;&lt;span class=&quot;z-meta z-range z-unified z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-toc-list z-line-number z-diff&quot;&gt;-22,3 +23,7&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; this paragraph needs to
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; be changed. Things can
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt; be added after it.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;This paragraph contains
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;important new additions
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;to this document.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;git&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; submodule add&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt; latest https:&#x2F;&#x2F;github.com&#x2F;isunjn&#x2F;serene.git themes&#x2F;serene&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;line-number&quot;&gt;Line number&lt;a class=&quot;zola-anchor&quot; href=&quot;#line-number&quot; aria-label=&quot;Anchor link for: line-number&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-linenos data-lang=&quot;rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-linenos data-lang=&quot;rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;93&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;94&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;95&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;96&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;97&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;98&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;99&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;101&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;102&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;highlight&quot;&gt;Highlight&lt;a class=&quot;zola-anchor&quot; href=&quot;#highlight&quot; aria-label=&quot;Anchor link for: highlight&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-linenos data-lang=&quot;rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;2&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;3&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;4&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;5&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;9&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;filename&quot;&gt;Filename&lt;a class=&quot;zola-anchor&quot; href=&quot;#filename&quot; aria-label=&quot;Anchor link for: filename&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;rs&quot; data-name=&quot;src&#x2F;main.rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot; data-name=&quot;src&#x2F;main.rs&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-linenos data-lang=&quot;rs&quot; data-name=&quot;src&#x2F;main.rs&quot; class=&quot;language-rs z-code&quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot; data-name=&quot;src&#x2F;main.rs&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; x &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;3&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;&lt;mark&gt;4&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;mark&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;i &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;mark&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; five &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; six &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;five&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; none &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;plus_one&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;None&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Callouts</title>
		<published>2024-08-17T00:00:00+00:00</published>
		<updated>2024-08-17T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/callouts/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/callouts/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/callouts/">
&lt;blockquote class=&quot;callout note has-title&quot;&gt;
  
  
  &lt;p class=&quot;title&quot;&gt;
    &lt;span class=&quot;icon&quot;&gt;
      &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

    &lt;&#x2F;span&gt;
    &lt;strong&gt;Note&lt;&#x2F;strong&gt;
  &lt;&#x2F;p&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout tip has-title&quot;&gt;
  
  
  &lt;p class=&quot;title&quot;&gt;
    &lt;span class=&quot;icon&quot;&gt;
      &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M9.97308 18H11V13H13V18H14.0269C14.1589 16.7984 14.7721 15.8065 15.7676 14.7226C15.8797 14.6006 16.5988 13.8564 16.6841 13.7501C17.5318 12.6931 18 11.385 18 10C18 6.68629 15.3137 4 12 4C8.68629 4 6 6.68629 6 10C6 11.3843 6.46774 12.6917 7.31462 13.7484C7.40004 13.855 8.12081 14.6012 8.23154 14.7218C9.22766 15.8064 9.84103 16.7984 9.97308 18ZM10 20V21H14V20H10ZM5.75395 14.9992C4.65645 13.6297 4 11.8915 4 10C4 5.58172 7.58172 2 12 2C16.4183 2 20 5.58172 20 10C20 11.8925 19.3428 13.6315 18.2443 15.0014C17.624 15.7748 16 17 16 18.5V21C16 22.1046 15.1046 23 14 23H10C8.89543 23 8 22.1046 8 21V18.5C8 17 6.37458 15.7736 5.75395 14.9992Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

    &lt;&#x2F;span&gt;
    &lt;strong&gt;Tip&lt;&#x2F;strong&gt;
  &lt;&#x2F;p&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout important has-title&quot;&gt;
  
  
  &lt;p class=&quot;title&quot;&gt;
    &lt;span class=&quot;icon&quot;&gt;
      &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 15H13V17H11V15ZM11 7H13V13H11V7Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

    &lt;&#x2F;span&gt;
    &lt;strong&gt;Important&lt;&#x2F;strong&gt;
  &lt;&#x2F;p&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout warning has-title&quot;&gt;
  
  
  &lt;p class=&quot;title&quot;&gt;
    &lt;span class=&quot;icon&quot;&gt;
      &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12.865 3.00017L22.3912 19.5002C22.6674 19.9785 22.5035 20.5901 22.0252 20.8662C21.8732 20.954 21.7008 21.0002 21.5252 21.0002H2.47266C1.92037 21.0002 1.47266 20.5525 1.47266 20.0002C1.47266 19.8246 1.51886 19.6522 1.60663 19.5002L11.1329 3.00017C11.4091 2.52187 12.0206 2.358 12.4989 2.63414C12.651 2.72191 12.7772 2.84815 12.865 3.00017ZM4.20471 19.0002H19.7932L11.9989 5.50017L4.20471 19.0002ZM10.9989 16.0002H12.9989V18.0002H10.9989V16.0002ZM10.9989 9.00017H12.9989V14.0002H10.9989V9.00017Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

    &lt;&#x2F;span&gt;
    &lt;strong&gt;Warning&lt;&#x2F;strong&gt;
  &lt;&#x2F;p&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout caution has-title&quot;&gt;
  
  
  &lt;p class=&quot;title&quot;&gt;
    &lt;span class=&quot;icon&quot;&gt;
      &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M4.00098 20V14C4.00098 9.58172 7.5827 6 12.001 6C16.4193 6 20.001 9.58172 20.001 14V20H21.001V22H3.00098V20H4.00098ZM6.00098 20H18.001V14C18.001 10.6863 15.3147 8 12.001 8C8.68727 8 6.00098 10.6863 6.00098 14V20ZM11.001 2H13.001V5H11.001V2ZM19.7792 4.80761L21.1934 6.22183L19.0721 8.34315L17.6578 6.92893L19.7792 4.80761ZM2.80859 6.22183L4.22281 4.80761L6.34413 6.92893L4.92991 8.34315L2.80859 6.22183ZM7.00098 14C7.00098 11.2386 9.23956 9 12.001 9V11C10.3441 11 9.00098 12.3431 9.00098 14H7.00098Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

    &lt;&#x2F;span&gt;
    &lt;strong&gt;Caution&lt;&#x2F;strong&gt;
  &lt;&#x2F;p&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;

&lt;hr &#x2F;&gt;

&lt;blockquote class=&quot;callout note no-title&quot;&gt;
  
  
  &lt;div class=&quot;icon&quot;&gt;
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout tip no-title&quot;&gt;
  
  
  &lt;div class=&quot;icon&quot;&gt;
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M9.97308 18H11V13H13V18H14.0269C14.1589 16.7984 14.7721 15.8065 15.7676 14.7226C15.8797 14.6006 16.5988 13.8564 16.6841 13.7501C17.5318 12.6931 18 11.385 18 10C18 6.68629 15.3137 4 12 4C8.68629 4 6 6.68629 6 10C6 11.3843 6.46774 12.6917 7.31462 13.7484C7.40004 13.855 8.12081 14.6012 8.23154 14.7218C9.22766 15.8064 9.84103 16.7984 9.97308 18ZM10 20V21H14V20H10ZM5.75395 14.9992C4.65645 13.6297 4 11.8915 4 10C4 5.58172 7.58172 2 12 2C16.4183 2 20 5.58172 20 10C20 11.8925 19.3428 13.6315 18.2443 15.0014C17.624 15.7748 16 17 16 18.5V21C16 22.1046 15.1046 23 14 23H10C8.89543 23 8 22.1046 8 21V18.5C8 17 6.37458 15.7736 5.75395 14.9992Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout important no-title&quot;&gt;
  
  
  &lt;div class=&quot;icon&quot;&gt;
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 15H13V17H11V15ZM11 7H13V13H11V7Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout warning no-title&quot;&gt;
  
  
  &lt;div class=&quot;icon&quot;&gt;
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M12.865 3.00017L22.3912 19.5002C22.6674 19.9785 22.5035 20.5901 22.0252 20.8662C21.8732 20.954 21.7008 21.0002 21.5252 21.0002H2.47266C1.92037 21.0002 1.47266 20.5525 1.47266 20.0002C1.47266 19.8246 1.51886 19.6522 1.60663 19.5002L11.1329 3.00017C11.4091 2.52187 12.0206 2.358 12.4989 2.63414C12.651 2.72191 12.7772 2.84815 12.865 3.00017ZM4.20471 19.0002H19.7932L11.9989 5.50017L4.20471 19.0002ZM10.9989 16.0002H12.9989V18.0002H10.9989V16.0002ZM10.9989 9.00017H12.9989V14.0002H10.9989V9.00017Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;


&lt;blockquote class=&quot;callout caution no-title&quot;&gt;
  
  
  &lt;div class=&quot;icon&quot;&gt;
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M4.00098 20V14C4.00098 9.58172 7.5827 6 12.001 6C16.4193 6 20.001 9.58172 20.001 14V20H21.001V22H3.00098V20H4.00098ZM6.00098 20H18.001V14C18.001 10.6863 15.3147 8 12.001 8C8.68727 8 6.00098 10.6863 6.00098 14V20ZM11.001 2H13.001V5H11.001V2ZM19.7792 4.80761L21.1934 6.22183L19.0721 8.34315L17.6578 6.92893L19.7792 4.80761ZM2.80859 6.22183L4.22281 4.80761L6.34413 6.92893L4.92991 8.34315L2.80859 6.22183ZM7.00098 14C7.00098 11.2386 9.23956 9 12.001 9V11C10.3441 11 9.00098 12.3431 9.00098 14H7.00098Z&quot; fill=&quot;currentColor&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;

</content>
	</entry>
	<entry xml:lang="en">
		<title>Special Quote</title>
		<published>2024-08-16T00:00:00+00:00</published>
		<updated>2024-08-16T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/quote/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/quote/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/quote/">&lt;blockquote class=&quot;quote&quot;&gt;
  
  &lt;div class=&quot;icon&quot; style=&quot;display: none;&quot;&gt;&lt;svg fill=&quot;currentColor&quot; xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot;  width=&quot;10&quot; height=&quot;10&quot; viewBox=&quot;796 698 200 200&quot;&gt;
&lt;g&gt;
	&lt;path d=&quot;M885.208,749.739v-40.948C836.019,708.791,796,748.81,796,798v89.209h89.208V798h-48.26
		C836.948,771.39,858.598,749.739,885.208,749.739z&quot;&#x2F;&gt;
	&lt;path d=&quot;M996,749.739v-40.948c-49.19,0-89.209,40.019-89.209,89.209v89.209H996V798h-48.26
		C947.74,771.39,969.39,749.739,996,749.739z&quot;&#x2F;&gt;
&lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;em&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;&lt;blockquote class=&quot;quote&quot;&gt;
  
  &lt;div class=&quot;icon&quot; style=&quot;display: none;&quot;&gt;&lt;svg fill=&quot;currentColor&quot; xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot;  width=&quot;10&quot; height=&quot;10&quot; viewBox=&quot;796 698 200 200&quot;&gt;
&lt;g&gt;
	&lt;path d=&quot;M885.208,749.739v-40.948C836.019,708.791,796,748.81,796,798v89.209h89.208V798h-48.26
		C836.948,771.39,858.598,749.739,885.208,749.739z&quot;&#x2F;&gt;
	&lt;path d=&quot;M996,749.739v-40.948c-49.19,0-89.209,40.019-89.209,89.209v89.209H996V798h-48.26
		C947.74,771.39,969.39,749.739,996,749.739z&quot;&#x2F;&gt;
&lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;em&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
  
  &lt;div class=&quot;from&quot;&gt;
    &lt;p&gt;— &lt;em&gt;Lorem Ipsum&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;&lt;blockquote class=&quot;quote&quot;&gt;
  
  &lt;div class=&quot;icon&quot; style=&quot;display: none;&quot;&gt;&lt;svg fill=&quot;currentColor&quot; xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot;  width=&quot;10&quot; height=&quot;10&quot; viewBox=&quot;796 698 200 200&quot;&gt;
&lt;g&gt;
	&lt;path d=&quot;M885.208,749.739v-40.948C836.019,708.791,796,748.81,796,798v89.209h89.208V798h-48.26
		C836.948,771.39,858.598,749.739,885.208,749.739z&quot;&#x2F;&gt;
	&lt;path d=&quot;M996,749.739v-40.948c-49.19,0-89.209,40.019-89.209,89.209v89.209H996V798h-48.26
		C947.74,771.39,969.39,749.739,996,749.739z&quot;&#x2F;&gt;
&lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
  
  &lt;div class=&quot;from&quot;&gt;
    &lt;p&gt;— Lorem Ipsum&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;&lt;blockquote class=&quot;quote&quot;&gt;
  
  &lt;div class=&quot;icon&quot; style=&quot;display: none;&quot;&gt;&lt;svg fill=&quot;currentColor&quot; xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot;  width=&quot;10&quot; height=&quot;10&quot; viewBox=&quot;796 698 200 200&quot;&gt;
&lt;g&gt;
	&lt;path d=&quot;M885.208,749.739v-40.948C836.019,708.791,796,748.81,796,798v89.209h89.208V798h-48.26
		C836.948,771.39,858.598,749.739,885.208,749.739z&quot;&#x2F;&gt;
	&lt;path d=&quot;M996,749.739v-40.948c-49.19,0-89.209,40.019-89.209,89.209v89.209H996V798h-48.26
		C947.74,771.39,969.39,749.739,996,749.739z&quot;&#x2F;&gt;
&lt;&#x2F;g&gt;
&lt;&#x2F;svg&gt;
&lt;&#x2F;div&gt;
  &lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;em&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa! Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
  
  &lt;div class=&quot;from&quot;&gt;
    &lt;p&gt;— &lt;em&gt;Lorem Ipsum&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;

  &lt;&#x2F;div&gt;
  
&lt;&#x2F;blockquote&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Detail</title>
		<published>2024-08-14T00:00:00+00:00</published>
		<updated>2024-08-14T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/detail/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/detail/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/detail/">&lt;details &gt;
  &lt;summary&gt;&lt;span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit.&lt;&#x2F;span&gt;&lt;&#x2F;summary&gt;
  &lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et!  Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et!  Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;

&lt;&#x2F;details&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Math (KaTex)</title>
		<published>2024-07-15T00:00:00+00:00</published>
		<updated>2024-07-15T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/math/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/math/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/math/">&lt;p&gt;&lt;em&gt;Powered by &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;katex.org&#x2F;&quot;&gt;KaTeX&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;The equation $Q = rho A v + C$
defines the glacial flow rate.&lt;&#x2F;p&gt;
&lt;p&gt;$ 7.32 beta +
sum_(i=0)^nabla Q_i &#x2F; 2 $&lt;&#x2F;p&gt;
&lt;p&gt;$ Q = rho A v + &quot;time offset&quot; $&lt;&#x2F;p&gt;
&lt;p&gt;$ 7.32 beta +
sum_(i=0)^nabla
(Q_i (a_i - epsilon)) &#x2F; 2 $&lt;&#x2F;p&gt;
&lt;p&gt;$ v := vec(x_1, x_2, x_3) $&lt;&#x2F;p&gt;
&lt;p&gt;$ a arrow.squiggly b $&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;$$
f(x) = \int_{-\infty}^\infin \hat f(\xi) e^{2 \pi i \xi x}\ d\xi
$$&lt;&#x2F;p&gt;
&lt;p&gt;When $ a \ne 0 $, there are two solutions to $ (ax^2 + bx + c = 0) $ and they are
$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a} $$&lt;&#x2F;p&gt;
&lt;p&gt;The Cauchy-Schwarz Inequality&lt;&#x2F;p&gt;
&lt;p&gt;$$\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)$$&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Chart (Mermaid)</title>
		<published>2024-06-03T00:00:00+00:00</published>
		<updated>2024-06-03T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/chart/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/chart/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/chart/">&lt;p&gt;&lt;em&gt;Powered by &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;mermaid.js.org&quot;&gt;Mermaid&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
  sequenceDiagram
    participant web as Web Browser
    participant blog as Blog Service
    participant account as Account Service
    participant mail as Mail Service
    participant db as Storage

    Note over web,db: The user must be logged in to submit blog posts
    web-&amp;gt;&amp;gt;+account: Logs in using credentials
    account-&amp;gt;&amp;gt;db: Query stored accounts
    db-&amp;gt;&amp;gt;account: Respond with query result

    alt Credentials not found
        account-&amp;gt;&amp;gt;web: Invalid credentials
    else Credentials found
        account-&amp;gt;&amp;gt;-web: Successfully logged in

        Note over web,db: When the user is authenticated, they can now submit new posts
        web-&amp;gt;&amp;gt;+blog: Submit new post
        blog-&amp;gt;&amp;gt;db: Store post data

        par Notifications
            blog--)mail: Send mail to blog subscribers
            blog--)db: Store in-site notifications
        and Response
            blog--&amp;gt;&amp;gt;-web: Successfully posted
        end
    end
&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
  graph LR
    A[Square Rect] -- Link text --&amp;gt; B((Circle))
    A --&amp;gt; C(Round Rect)
    B --&amp;gt; D{Rhombus}
    C --&amp;gt; D
&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
  %%{init: { &amp;#x27;logLevel&amp;#x27;: &amp;#x27;debug&amp;#x27;, &amp;#x27;theme&amp;#x27;: &amp;#x27;base&amp;#x27;, &amp;#x27;gitGraph&amp;#x27;: {&amp;#x27;rotateCommitLabel&amp;#x27;: false}} }%%
gitGraph
  commit id: &amp;quot;feat(api): ...&amp;quot;
  commit id: &amp;quot;a&amp;quot;
  commit id: &amp;quot;b&amp;quot;
  commit id: &amp;quot;fix(client): .extra long label..&amp;quot;
  branch c2
  commit id: &amp;quot;feat(modules): ...&amp;quot;
  commit id: &amp;quot;test(client): ...&amp;quot;
  checkout main
  commit id: &amp;quot;fix(api): ...&amp;quot;
  commit id: &amp;quot;ci: ...&amp;quot;
  branch b1
  commit
  branch b2
  commit
&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
  quadrantChart
    title Reach and engagement of campaigns
    x-axis Low Reach --&amp;gt; High Reach
    y-axis Low Engagement --&amp;gt; High Engagement
    quadrant-1 We should expand
    quadrant-2 Need to promote
    quadrant-3 Re-evaluate
    quadrant-4 May be improved
    Campaign A: [0.3, 0.6]
    Campaign B: [0.45, 0.23]
    Campaign C: [0.57, 0.69]
    Campaign D: [0.78, 0.34]
    Campaign E: [0.40, 0.34]
    Campaign F: [0.35, 0.78]
&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Comment (Giscus)</title>
		<published>2023-07-15T00:00:00+00:00</published>
		<updated>2023-07-15T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/comment/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/comment/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/comment/">&lt;p&gt;&lt;em&gt;Powered by &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;giscus.app&quot;&gt;Giscus&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Emoji Reaction</title>
		<published>2023-07-15T00:00:00+00:00</published>
		<updated>2023-07-15T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/reaction/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/reaction/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/reaction/">&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, nisi saepe dolor unde iusto dolibero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Outdate Alert</title>
		<published>2022-08-21T00:00:00+00:00</published>
		<updated>2022-08-21T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/outdate-alert/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/outdate-alert/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/outdate-alert/">&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, nisi saepe dolor unde iusto dolibero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
&lt;p&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium, nisi saepe dolor unde iusto dolore nam, vero optio consequuntur repudiandae et! Atque libero expedita laudantium cupiditate, sit explicabo sequi ipsa!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Featured Mark</title>
		<published>2022-02-21T00:00:00+00:00</published>
		<updated>2022-02-21T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/featured/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/featured/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/featured/">&lt;p&gt;&lt;code&gt;featured = true&lt;&#x2F;code&gt;: show a &lt;code&gt;*&lt;&#x2F;code&gt; mark in front of the post title&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Scaling Git’s Garbage Collection - GitHub Blog</title>
		<published>2021-09-15T00:00:00+00:00</published>
		<updated>2021-09-15T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example5/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example5/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example5/">&lt;p&gt;At GitHub, we store a lot of Git data: more than 18.6 petabytes of it, to be precise. That’s more than six times the size of the Library of Congress’s digital collections&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;. Most of that data comes from the contents of your repositories: your READMEs, source files, tests, licenses, and so on.&lt;&#x2F;p&gt;
&lt;p&gt;But some of that data is just junk: some bit of your repository that is no longer important. It could be a file that you force-pushed over, or the contents of a branch you deleted without merging. In general, this slice of repository data is anything that isn’t contained in at least one of your repository’s branches or tags. Normally, we don’t remove any unreachable data from repositories. But occasionally we do, usually to remove sensitive data, like passwords or SSH keys from your repository’s history.&lt;&#x2F;p&gt;
&lt;p&gt;The process for permanently removing unreachable objects from a repository’s history has a history of causing problems within GitHub, especially in busy repositories or ones with lots of objects. In this post, we’ll talk about what those problems were, why we had them, the tools we built to address them, and some interesting ways we’ve built on top of them. All of this work was contributed upstream to the open-source Git project. Let’s dive in.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;object-reachability&quot;&gt;Object reachability&lt;a class=&quot;zola-anchor&quot; href=&quot;#object-reachability&quot; aria-label=&quot;Anchor link for: object-reachability&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;In this post, we’re going to talk a lot about “reachable” and “unreachable” objects. You may have heard these terms before, but perhaps only casually. Since we’re going to use them a lot, it will help to have more concrete definitions of the two. An object is &lt;em&gt;reachable&lt;&#x2F;em&gt; when there is at least one branch or tag along which you can reach the object in question. An object is “reached” by crawling through history—from commits to their parents, commits to their root trees, and trees to their sub-trees and blobs. An object is &lt;em&gt;unreachable&lt;&#x2F;em&gt; when no such branch or tag exists.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection2.png?w=1024&amp;amp;resize=1024%2C493&quot; alt=&quot;Sample object graph showing commits, with arrows connecting them to their parents. A few commits have boxes that are connected to them, which represent the tips of branches and tags.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here, we’re looking at a sample object graph. For simplicity, I’m only showing commits (identified here as circles). Arrows point from commits to their parent(s). A few commits have boxes that are connected to them, which represent the tips of branches and tags.&lt;&#x2F;p&gt;
&lt;p&gt;The parts of the graph that are colored blue are reachable, and the red parts are considered unreachable. You’ll find that if you start at any branch or tag, and follow its arrows, that all commits along that path are considered reachable. Note that unreachable commits which have reachable ones as parents (in our diagram above, anytime an arrow points from a red commit to a blue one) are still considered unreachable, since they are not contained within any branch or tag.&lt;&#x2F;p&gt;
&lt;p&gt;Unreachable objects can also appear in clusters that are totally disconnected from the main object graph, as indicated by the two lone red commits towards the right-hand side of the image.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pruning-unreachable-objects&quot;&gt;Pruning unreachable objects&lt;a class=&quot;zola-anchor&quot; href=&quot;#pruning-unreachable-objects&quot; aria-label=&quot;Anchor link for: pruning-unreachable-objects&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Normally, unreachable objects stick around in your repository until they are either automatically or manually cleaned up. If you’ve ever seen the message, “Auto packing the repository for optimum performance,” in your terminal, Git is doing this for you in the background. You can also trigger &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Garbage_collection_(computer_science)&quot;&gt;garbage collection&lt;&#x2F;a&gt; manually by running:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ git gc --prune=&amp;lt;date&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That tells Git to trigger a garbage collection and remove unreachable objects. But observant readers might notice the optional &lt;code&gt;&amp;lt;date&amp;gt;&lt;&#x2F;code&gt; parameter to the &lt;code&gt;--prune&lt;&#x2F;code&gt; flag. What is that? The short answer is that Git allows you to restrict which objects get permanently deleted based on the last time they were written. But to fully explain, we first need to talk a little bit about a race condition that can occur when removing objects from a Git repository.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;object-deletion-raciness&quot;&gt;Object deletion raciness&lt;a class=&quot;zola-anchor&quot; href=&quot;#object-deletion-raciness&quot; aria-label=&quot;Anchor link for: object-deletion-raciness&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Normally, deleting an unreachable object from a Git repository should not be a notable event. Since the object is unreachable, it’s not part of any branch or tag, and so deleting it doesn’t change the repository’s reachable state. In other words, removing an unreachable object from a repository should be as simple as:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Repacking the repository to remove any copies of the object in question (and recomputing any deltas that are based on that object).&lt;&#x2F;li&gt;
&lt;li&gt;Removing any loose copies of the object that happen to exist.&lt;&#x2F;li&gt;
&lt;li&gt;Updating any additional indexes (like the &lt;code&gt;multi-pack index&lt;&#x2F;code&gt;, or &lt;code&gt;commit-graph&lt;&#x2F;code&gt;) that depend on the (now stale) packs that were removed.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The racy behavior occurs when a repository receives one or more pushes during this process. The main culprit is that the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;protocol-v2&quot;&gt;server advertises its objects&lt;&#x2F;a&gt; at a different point in time from processing the objects that the client sent based on that advertisement.&lt;&#x2F;p&gt;
&lt;p&gt;Consider what happens if Git decides (as part of running a &lt;code&gt;git gc&lt;&#x2F;code&gt; operation) that it wants to delete some unreachable object &lt;code&gt;C&lt;&#x2F;code&gt;. If &lt;code&gt;C&lt;&#x2F;code&gt; becomes reachable by some background reference update (e.g., an incoming push that creates a new branch pointing at &lt;code&gt;C&lt;&#x2F;code&gt;), it will then be advertised to any incoming pushes. If one of these pushes happens before &lt;code&gt;C&lt;&#x2F;code&gt; is actually removed, then the repository can end up in a corrupt state. Since the pusher will assume &lt;code&gt;C&lt;&#x2F;code&gt; is reachable (since it was part of the object advertisement), it is allowed to include objects that either reference or depend on &lt;code&gt;C&lt;&#x2F;code&gt;, without sending &lt;code&gt;C&lt;&#x2F;code&gt; itself. If &lt;code&gt;C&lt;&#x2F;code&gt; is then deleted while other reachable parts of the repository depend on it, then the repository will be left in a corrupt state.&lt;&#x2F;p&gt;
&lt;p&gt;Suppose the server receives that push before proceeding to delete &lt;code&gt;C&lt;&#x2F;code&gt;. Then, any objects from the incoming push that are related to it would be immediately corrupt. Reachable parts of the repository that reference &lt;code&gt;C&lt;&#x2F;code&gt; are no longer &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Closure_(mathematics)&quot;&gt;closed&lt;&#x2F;a&gt;&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; over reachability since &lt;code&gt;C&lt;&#x2F;code&gt; is missing. And any objects that are stored as a delta against &lt;code&gt;C&lt;&#x2F;code&gt; can no longer be inflated for the same reason.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection3.png?w=1024&amp;amp;resize=1024%2C438&quot; alt=&quot;Figure demonstrating that one side (responsible for garbage collecting the repository) decides that a certain object is unreachable, while another side makes that object reachable and accepts an incoming push based on that object—before the original side ultimately deletes that (now-reachable) object—leaving the repository in a corrupt state.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In case that was confusing, the above figure should help clear things up. The general idea is that one side (responsible for garbage collecting the repository) decides that a certain object is unreachable, while another side makes that object reachable and accepts an incoming push based on that object—before the original side ultimately deletes that (now-reachable) object—leaving the repository in a corrupt state.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mitigating-object-deletion-raciness&quot;&gt;Mitigating object deletion raciness&lt;a class=&quot;zola-anchor&quot; href=&quot;#mitigating-object-deletion-raciness&quot; aria-label=&quot;Anchor link for: mitigating-object-deletion-raciness&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Git does not completely prevent this race from happening. Instead, it works around the race by gradually expiring unreachable objects based on the last time they were written. This explains the mysterious &lt;code&gt;--prune=&amp;lt;date&amp;gt;&lt;&#x2F;code&gt; option from a few sections ago: when garbage collecting a repository, only unreachable objects which haven’t been written since &lt;code&gt;&amp;lt;date&amp;gt;&lt;&#x2F;code&gt; are removed. Anything else (that is, the set of objects that have been written at least once since &lt;code&gt;&amp;lt;date&amp;gt;&lt;&#x2F;code&gt;) are left around.&lt;&#x2F;p&gt;
&lt;p&gt;The idea is that objects which have been written recently are more likely to become reachable again in the future, and would thus be more likely to be susceptible to the kind of race we talked about above if they were to be pruned. Objects which haven’t been written recently, on the other hand, are proportionally less likely to become reachable again, and so they are safe (or, at least, safer) to remove.&lt;&#x2F;p&gt;
&lt;p&gt;This idea isn’t foolproof, and it is certainly possible to run into the race we talked about earlier. We’ll discuss one such scenario towards the end of this post (along with the way we worked around it). But in practice, this strategy is simple and effective, preventing most instances of potential repository corruption.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;storing-loose-unreachable-objects&quot;&gt;Storing loose unreachable objects&lt;a class=&quot;zola-anchor&quot; href=&quot;#storing-loose-unreachable-objects&quot; aria-label=&quot;Anchor link for: storing-loose-unreachable-objects&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;But one question remains: how does Git keep track of the age of unreachable objects which haven’t yet aged out of the repository?&lt;&#x2F;p&gt;
&lt;p&gt;The answer, though simple, is at the heart of the problem we’re trying to solve here. Unreachable objects which have been written too recently to be removed from the repository are stored as loose objects, the individual object files stored in &lt;code&gt;.git&#x2F;objects&lt;&#x2F;code&gt;. Storing these unreachable objects individually means that we can rely on their &lt;code&gt;stat()&lt;&#x2F;code&gt; modification time (hereafter, &lt;code&gt;mtime&lt;&#x2F;code&gt;) to tell us how recently they were written.&lt;&#x2F;p&gt;
&lt;p&gt;But this leads to an unfortunate problem: if a repository has many unreachable objects, and a large number of them were written recently, they must all be stored individually as loose objects. This is undesirable for a number of reasons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Pairs of unreachable objects that share a vast majority of their contents must be stored separately, and can’t benefit from the kind of deduplication offered by &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;2022-08-29-gits-database-internals-i-packed-object-store&#x2F;&quot;&gt;packfiles&lt;&#x2F;a&gt;. This can cause your repository to take up much more space than it otherwise would.&lt;&#x2F;li&gt;
&lt;li&gt;Having too many files (especially too many in a single directory) can lead to performance problems, including exhausting your system’s available &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Inode&quot;&gt;inodes&lt;&#x2F;a&gt; in the extreme case, leaving you unable to create new files, even if there may be space available for them.&lt;&#x2F;li&gt;
&lt;li&gt;Any Git operation which has to scan through all loose objects (for example, &lt;code&gt;git repack -d&lt;&#x2F;code&gt;, which creates a new pack containing just your repository’s unpacked objects) will slow down as there are more files to process.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It’s tempting to want to store all of a repository’s unreachable objects into a single pack. But there’s a problem there, too. Since all of the objects in a single pack share the same &lt;code&gt;mtime&lt;&#x2F;code&gt; (the &lt;code&gt;mtime&lt;&#x2F;code&gt; of the &lt;code&gt;*.pack&lt;&#x2F;code&gt; file itself), rewriting any single unreachable object has the effect of updating the &lt;code&gt;mtime&lt;&#x2F;code&gt;s of all of a repository’s unreachable objects. This is because Git optimizes out object writes for packed objects by simply updating the &lt;code&gt;mtime&lt;&#x2F;code&gt; of any pack(s) which contain that object. This makes it nearly impossible to expire any objects out of the repository permanently.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cruft-packs&quot;&gt;Cruft packs&lt;a class=&quot;zola-anchor&quot; href=&quot;#cruft-packs&quot; aria-label=&quot;Anchor link for: cruft-packs&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;To solve this problem, we turned to a &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;lore.kernel.org&#x2F;git&#x2F;20120611160824.GB12773@sigill.intra.peff.net&#x2F;&quot;&gt;long-discussed idea&lt;&#x2F;a&gt; on the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;lore.kernel.org&#x2F;git&quot;&gt;Git mailing list&lt;&#x2F;a&gt;: cruft packs. The idea is simple: store an auxiliary list of &lt;code&gt;mtime&lt;&#x2F;code&gt; data alongside a pack containing just unreachable objects. To garbage collect a repository, Git places the unreachable objects in a pack. That pack is designated as a “cruft pack” because Git also writes the &lt;code&gt;mtime&lt;&#x2F;code&gt; data corresponding to each object in a separate file alongside that pack. This makes it possible to update the &lt;code&gt;mtime&lt;&#x2F;code&gt; of a single unreachable object without changing the &lt;code&gt;mtime&lt;&#x2F;code&gt;s of any other unreachable object.&lt;&#x2F;p&gt;
&lt;p&gt;To give you a sense of what this looks like in practice, here’s a small example:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection1.png?w=1024&amp;amp;resize=1024%2C485&quot; alt=&quot;a pack of Git objects (represented by rectangles of different colors)&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The above figure shows a pack of Git objects (represented by rectangles of different colors), its pack index, and the new &lt;code&gt;.mtimes&lt;&#x2F;code&gt; file. Together, these three files make up what Git calls a “&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;cruft-packs&#x2F;2.37.0&quot;&gt;cruft pack&lt;&#x2F;a&gt;,” and it’s what allows Git to store unreachable objects together, without needing a single file for each object.&lt;&#x2F;p&gt;
&lt;p&gt;So, how do they work? Git uses the cruft pack to store a collection of object &lt;code&gt;mtime&lt;&#x2F;code&gt;s together in an array stored in the &lt;code&gt;*.mtimes&lt;&#x2F;code&gt; file. In order to discover the &lt;code&gt;mtime&lt;&#x2F;code&gt; for an individual object in a pack, Git first does a &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Binary_search_algorithm&quot;&gt;binary search&lt;&#x2F;a&gt; on the pack’s index to discover that object’s &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lexicographic_order&quot;&gt;lexicographic index&lt;&#x2F;a&gt;. Git can then use that offset to read a 4-byte, unsigned integer in the &lt;code&gt;.mtimes&lt;&#x2F;code&gt; file. The &lt;code&gt;.mtimes&lt;&#x2F;code&gt; file contains a table of integers (one for each object in the associated &lt;code&gt;*.pack&lt;&#x2F;code&gt; file), each representing an &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Epoch_(computing)&quot;&gt;epoch timestamp&lt;&#x2F;a&gt; containing that object’s &lt;code&gt;mtime&lt;&#x2F;code&gt;. In other words, the &lt;code&gt;*.mtimes&lt;&#x2F;code&gt; file has a table of numbers, where each number represents an individual object’s &lt;code&gt;mtime&lt;&#x2F;code&gt;, encoded as a number of seconds since the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unix_epoch&quot;&gt;Unix epoch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Crucially, this makes it possible to store all of a repository’s unreachable objects together in a single pack, without having to store them as individual loose objects, bypassing all of the drawbacks we discussed in the last section. Moreover, it allows Git to update the &lt;code&gt;mtime&lt;&#x2F;code&gt; of a single unreachable object, without inadvertently triggering the same update across all unreachable objects.&lt;&#x2F;p&gt;
&lt;p&gt;Since Git doesn’t portably support updating a file in place, updating an object’s &lt;code&gt;mtime&lt;&#x2F;code&gt; (a process which Git calls “freshening”) takes place by writing a separate copy of that object out as a loose file. Of course, if we had to freshen all objects in a cruft pack, we would end up in a situation no better than before. But such updates tend to be unlikely in practice, and so writing individual copies of a small handful of unreachable objects ends up being a reasonable trade off most of the time.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;generating-cruft-packs&quot;&gt;Generating cruft packs&lt;a class=&quot;zola-anchor&quot; href=&quot;#generating-cruft-packs&quot; aria-label=&quot;Anchor link for: generating-cruft-packs&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Now that we have introduced the concept of cruft packs, the question remains: how does Git generate them?&lt;&#x2F;p&gt;
&lt;p&gt;Despite being called &lt;code&gt;git gc&lt;&#x2F;code&gt; (short for “garbage collection”), running &lt;code&gt;git gc&lt;&#x2F;code&gt; does not always result in deleting unreachable objects. If you run &lt;code&gt;git gc --prune=never&lt;&#x2F;code&gt;, then Git will repack all reachable objects and move all unreachable objects to the cruft pack. If, however, you run &lt;code&gt;git gc --prune=1.day.ago&lt;&#x2F;code&gt;, then Git will repack all reachable objects, delete any unreachable objects that are older than one day, and repack the remaining unreachable objects into the cruft pack.&lt;&#x2F;p&gt;
&lt;p&gt;This is because of Git’s treatment of unreachable parts of the repository. While Git only relies on having a reachability closure over reachable objects, Git’s garbage collection routine tries to leave unreachable parts of the repository intact to the extent possible. That means if Git encounters some unreachable cluster of objects in your repository, it will either expire all or none of those objects, but never some subset of them.&lt;&#x2F;p&gt;
&lt;p&gt;We’ll discuss how cruft packs are generated with and without object expiration in the two sections below.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cruft-packs-without-object-expiration&quot;&gt;Cruft packs without object expiration&lt;a class=&quot;zola-anchor&quot; href=&quot;#cruft-packs-without-object-expiration&quot; aria-label=&quot;Anchor link for: cruft-packs-without-object-expiration&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;When generating a cruft pack with an object expiration of &lt;code&gt;--date=never&lt;&#x2F;code&gt;, our only goal is to collect all unreachable objects together into a single cruft pack. Broadly speaking, this occurs in three steps:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Starting at all of the branches and tags, generate a pack containing only reachable objects.&lt;&#x2F;li&gt;
&lt;li&gt;Looking at all other existing packs, enumerate the list of objects which don’t appear in the new pack of reachable objects. Create a new pack containing just these objects, which are unreachable.&lt;&#x2F;li&gt;
&lt;li&gt;Delete the existing packs.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If any of that was confusing, don’t worry: we’ll break it down here step by step. The first step to collecting a repository’s unreachable objects is to figure out the parts of it that are reachable. If you’ve ever run &lt;code&gt;git repack -A&lt;&#x2F;code&gt;, this is exactly how that command works. Git starts a reachability traversal beginning at each of the branches and tags in your repository. Then it traverses back through history by walking from commits to their parents, trees to their sub-trees, and so on, marking every object that it sees along the way as reachable.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection4.gif&quot; alt=&quot;Demonstration of how Git walks through a commit graph, from commit to parent&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here, we’re showing the same commit graph from earlier in the post. Git’s goal at this point is simply to mark every reachable object that it sees, and it’s those objects that will become the contents of a new pack containing just reachable objects. Git starts by examining each reference, and walking from a commit to its parents until it either finds a commit with no parents (indicating the beginning of history), or a commit that it has already marked as reachable.&lt;&#x2F;p&gt;
&lt;p&gt;In the above, the commit being walked is highlighted in dark blue, and any commits marked as reachable are marked in green. At each step, the commit currently being visited gets marked as reachable, and its parent(s) are visited in the next step. By repeating this process among all branches and tags, Git will mark all reachable objects in the repository.&lt;&#x2F;p&gt;
&lt;p&gt;We can then use this set of objects to produce a new pack containing all reachable objects in a repository. Next, Git needs to discover the set of objects that it didn’t mark in the previous stage. A reasonable first approach might be to store the IDs of all of a repository’s objects in a set, and then remove them one by one as we mark objects reachable along our walk.&lt;&#x2F;p&gt;
&lt;p&gt;But this approach tends to be impractical, since each object will require a minimum of 20 bytes of memory in order to insert into this set. At the time of writing, the linux.git repository contains nearly nine million objects, which would require nearly 180 MB of memory just to write out all of their object IDs.&lt;&#x2F;p&gt;
&lt;p&gt;Instead, Git looks through all of the objects in all of the existing packs, checking whether or not each is contained in the new pack of reachable objects. Any object found in an existing pack which doesn’t appear in the reachable pack is automatically included in the cruft pack.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection5.gif&quot; alt=&quot;Animation demonstrating how  Git looks through all of the objects in all of the existing packs, checking whether or not each is contained in the new pack of reachable objects.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here, we’re going one by one among all of the pre-existing packs (here, labeled as &lt;code&gt;pack-abc.pack&lt;&#x2F;code&gt;, &lt;code&gt;pack-def.pack&lt;&#x2F;code&gt;, and &lt;code&gt;pack-123.pack&lt;&#x2F;code&gt;) and inspecting their objects one at a time. We first start with object &lt;code&gt;c8&lt;&#x2F;code&gt;, looking through the reachable pack (denoted as &lt;code&gt;pack-xyz.pack&lt;&#x2F;code&gt;) to see if any of its objects match &lt;code&gt;c8&lt;&#x2F;code&gt;. Since none do, &lt;code&gt;c8&lt;&#x2F;code&gt; is marked unreachable (which we represent by filling the object with a red background).&lt;&#x2F;p&gt;
&lt;p&gt;This process is repeated for each object in each existing pack. Once this process is complete, all objects that existed in the repository before starting a garbage collection are marked either green, or red (indicating that they are either reachable, or unreachable, respectively).&lt;&#x2F;p&gt;
&lt;p&gt;Git can then use the set of unreachable objects to generate a new pack, like below:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection6-1.png?w=1024&amp;amp;resize=1024%2C380&quot; alt=&quot;A set of labeled Git packs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This pack (on the far right of the above image, denoted &lt;code&gt;pack-cruft.pack&lt;&#x2F;code&gt;) contains exactly the set of unreachable objects present in the repository at the beginning of garbage collection. By keeping track of each unreachable object’s &lt;code&gt;mtime&lt;&#x2F;code&gt; while marking existing objects, Git has enough data to write out a &lt;code&gt;*.mtimes&lt;&#x2F;code&gt; file in addition to the new pack, leaving us with a cruft pack containing just the repository’s unreachable objects.&lt;&#x2F;p&gt;
&lt;p&gt;Here, we’re eliding some technical details about keeping track of each object’s &lt;code&gt;mtime&lt;&#x2F;code&gt; along the way, for brevity and simplicity. The routine is straightforward, though: each time we discover an object, we mark its &lt;code&gt;mtime&lt;&#x2F;code&gt; based on how we discovered the object.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If an object is found in a packfile, it inherits its &lt;code&gt;mtime&lt;&#x2F;code&gt; from the packfile itself.&lt;&#x2F;li&gt;
&lt;li&gt;If an object is found as a loose object, its &lt;code&gt;mtime&lt;&#x2F;code&gt; comes from the loose object file.&lt;&#x2F;li&gt;
&lt;li&gt;And if an object is found in an existing cruft pack, its &lt;code&gt;mtime&lt;&#x2F;code&gt; comes from reading the cruft pack’s &lt;code&gt;*.mtimes&lt;&#x2F;code&gt; file at the appropriate index.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If an object is seen more than once (e.g., an unreachable object stored in a cruft pack was freshened, resulting in another loose copy of the object), the &lt;code&gt;mtime&lt;&#x2F;code&gt; which is ultimately recorded in the new cruft pack is the most recent &lt;code&gt;mtime&lt;&#x2F;code&gt; of all of the above.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cruft-packs-with-object-expiration&quot;&gt;Cruft packs with object expiration&lt;a class=&quot;zola-anchor&quot; href=&quot;#cruft-packs-with-object-expiration&quot; aria-label=&quot;Anchor link for: cruft-packs-with-object-expiration&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Generating cruft packs where some objects are going to expire out of the repository follows a similar, but slightly trickier approach than in the non-expiring case.&lt;&#x2F;p&gt;
&lt;p&gt;Doing a garbage collection with a fixed expiration is known as “pruning.” This essentially boils down to asking Git to pack the contents of a repository into two packfiles: one containing reachable objects, and another containing any unreachable objects. But, it also means that for some fixed expiration date, any unreachable objects which have an &lt;code&gt;mtime&lt;&#x2F;code&gt; older than the expiration date are removed from the repository entirely.&lt;&#x2F;p&gt;
&lt;p&gt;The difficulty in this case stems from a fact briefly mentioned earlier in this post, which is that Git attempts to prevent connected clusters of unreachable objects from leaving the repository if some, but not all, of their objects have aged out.&lt;&#x2F;p&gt;
&lt;p&gt;To make things clearer, here’s an example. Suppose that a repository has a handful of blob objects, all connected to some tree object, and all of these objects are unreachable. Assuming that they’re all old enough, then they will all expire together: no big deal. But what if the tree isn’t old enough to be expired? In this case, even though the blobs connected to it could be expired on their own, Git will keep them around since they’re connected to a tree with a sufficiently recent &lt;code&gt;mtime&lt;&#x2F;code&gt;. Git does this to preserve the repository’s reachability closure in case that tree were to become reachable again (in which case, having the tree and its blobs becomes important).&lt;&#x2F;p&gt;
&lt;p&gt;To ensure that Git preserves any unreachable objects which are reachable from recent objects Git handles this case of cruft pack generation slightly differently. At a high level, it:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Generates a candidate list of cruft objects, using the same process as outlined in the previous section.&lt;&#x2F;li&gt;
&lt;li&gt;Then, to determine the actual list of cruft objects to keep around, it performs a reachability traversal using all of the candidate cruft objects, adding any object it sees along the way to the cruft pack.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;To make things a little clearer, here’s an example:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;09&#x2F;garbagecollection7.gif&quot; alt=&quot;Animation of Git performing  a reachability traversal&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After determining the set of unreachable objects (represented above as colored red) Git does a reachability traversal from each entry point into the graph of unreachable objects. Above, commits are represented by circles, trees by rectangles, and tree entries as rows within the larger rectangles. The &lt;code&gt;mtime&lt;&#x2F;code&gt;s are written below each commit.&lt;&#x2F;p&gt;
&lt;p&gt;For now, let’s assume our expiration date is &lt;code&gt;d&lt;&#x2F;code&gt;, so any object whose &lt;code&gt;mtime&lt;&#x2F;code&gt; is greater than d must stay (despite being unreachable), and anything older than &lt;code&gt;d&lt;&#x2F;code&gt; can be pruned. Git traverses through each entry and asks, “Is this object old enough to be pruned?” When the answer is “yes” Git leaves the object alone and moves on to the next entry point. When the answer is “no,” however, (ie., Git is looking at an unreachable object whose &lt;code&gt;mtime&lt;&#x2F;code&gt; is too recent to prune), Git marks that object as “rescued” (indicated by turning it green) and then continues its traversal, marking any reachable objects as rescued.&lt;&#x2F;p&gt;
&lt;p&gt;Objects that are rescued during this pass are written to the cruft pack, preserving their existence in the repository, leaving them to either continue to age, or have their &lt;code&gt;mtime&lt;&#x2F;code&gt;s updated before the next garbage collection.&lt;&#x2F;p&gt;
&lt;p&gt;Let’s take a closer look at the example above. Git starts by looking at object &lt;code&gt;C(1,1)&lt;&#x2F;code&gt;, and notice that its &lt;code&gt;mtime&lt;&#x2F;code&gt; is &lt;code&gt;d+5&lt;&#x2F;code&gt;, meaning that (since it happens after our expiration time, &lt;code&gt;d&lt;&#x2F;code&gt;) it is too new to expire. That causes Git to start a reachability traversal beginning at &lt;code&gt;C(1,1)&lt;&#x2F;code&gt;, rescuing every object it encounters along the way. Since many objects are shared between multiple commits, rescuing an object from a more recent part of the graph often ends up marking older objects as rescued, too.&lt;&#x2F;p&gt;
&lt;p&gt;After finishing the rescuing pass focused on &lt;code&gt;C(1,1)&lt;&#x2F;code&gt;, Git moves on to look at &lt;code&gt;C(0,2)&lt;&#x2F;code&gt;. But this commit’s &lt;code&gt;mtime&lt;&#x2F;code&gt; is &lt;code&gt;d-10&lt;&#x2F;code&gt;, which is before our expiration cutoff of &lt;code&gt;d&lt;&#x2F;code&gt;, meaning that it is safe to remove. Git can skip looking at any objects reachable from this commit, since none of them will be rescued.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, Git looks at another connected cluster of the unreachable object graph, beginning at &lt;code&gt;C(3,1)&lt;&#x2F;code&gt;. Since this object has an &lt;code&gt;mtime&lt;&#x2F;code&gt; of &lt;code&gt;d+10&lt;&#x2F;code&gt;, it is too new to expire, so Git performs another reachability traversal, rescuing it and any objects reachable from it.&lt;&#x2F;p&gt;
&lt;p&gt;Notice that in the final graph state that the main cluster of commits (the one beginning with &lt;code&gt;C(0,2)&lt;&#x2F;code&gt;) is only partially rescued. In fact, only the objects necessary to retain a reachability closure over the rescued objects among that cluster are saved from being pruned. So even though, for example, commit &lt;code&gt;C(2,1)&lt;&#x2F;code&gt; has only part of its tree entries rescued, that is OK since &lt;code&gt;C(2,1)&lt;&#x2F;code&gt; itself will be pruned (hence any non-rescued tree entries connected to it are unimportant and will also be pruned).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;a class=&quot;zola-anchor&quot; href=&quot;#putting-it-all-together&quot; aria-label=&quot;Anchor link for: putting-it-all-together&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Now that Git can generate a cruft pack and perform garbage collection on a repository with or without pruning objects, it was time to put all of the pieces together and submit the patches to the open-source Git project.&lt;&#x2F;p&gt;
&lt;p&gt;Other Git sub-commands, like &lt;code&gt;repack&lt;&#x2F;code&gt;, and &lt;code&gt;gc&lt;&#x2F;code&gt; needed to learn about cruft packs, and gain command-line flags and configuration knobs in order to opt-in to the new behavior. With all of the pieces in place, you can now trigger a garbage collection by running either:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;$ &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;git&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;gc&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-lua&quot;&gt;--&lt;&#x2F;span&gt;prune=1.day.ago --cruft
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;or&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;$ &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;git&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;repack&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;d&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-lua&quot;&gt;--&lt;&#x2F;span&gt;cruft --cruft-expiration=1.day.ago
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to repack your repository into a reachable pack, and a cruft pack containing unreachable objects whose &lt;code&gt;mtime&lt;&#x2F;code&gt;s are within the past day. More details on the new command-line options and configuration can be found &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-gc&#x2F;v2.37.0#Documentation&#x2F;git-gc.txt---cruft&quot;&gt;here&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-repack&#x2F;v2.37.0#Documentation&#x2F;git-repack.txt---cruft&quot;&gt;here&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-config&#x2F;v2.37.0#Documentation&#x2F;git-config.txt-gccruftPacks&quot;&gt;here&lt;&#x2F;a&gt;, and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-config&#x2F;v2.37.0#Documentation&#x2F;git-config.txt-repackcruftWindow&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;GitHub submitted the entirety of the patches that comprise cruft packs to the open-source Git project, and the results were &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;2022-06-27-highlights-from-git-2-37&#x2F;#a-new-mechanism-for-pruning-unreachable-objects&quot;&gt;released in v2.37.0&lt;&#x2F;a&gt;. That means that you can use the same tools as what we run at GitHub on your own laptop, to run garbage collection on your own repositories.&lt;&#x2F;p&gt;
&lt;p&gt;For those curious about the details, you can read the complete thread on the mailing list archive &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;lore.kernel.org&#x2F;git&#x2F;cover.1638224692.git.me@ttaylorr.com&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cruft-packs-at-github&quot;&gt;Cruft packs at GitHub&lt;a class=&quot;zola-anchor&quot; href=&quot;#cruft-packs-at-github&quot; aria-label=&quot;Anchor link for: cruft-packs-at-github&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;After a lengthy process of testing to ensure that using cruft packs was safe to carry out across all repositories on GitHub, we deployed and enabled the feature across all repositories. We kept a close eye on repositories with large numbers of unreachable objects, since the process of breaking any deltas between reachable and unreachable objects (since the two are now stored in separate packs, and object deltas cannot cross pack boundaries) can cause the initial cruft pack generation to take a long time. A small handful of repositories with many unreachable objects needed more time to generate their very first cruft pack. In those instances, we generated their cruft packs outside of our normal repository maintenance jobs to avoid triggering any timeouts.&lt;&#x2F;p&gt;
&lt;p&gt;Now, every repository on GitHub and in GitHub Enterprise (in &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;enterprise-server@3.3&#x2F;admin&#x2F;release-notes&quot;&gt;version 3.3&lt;&#x2F;a&gt; and newer) uses cruft packs to store their unreachable objects. This has made garbage collecting repositories (especially busy ones with many unreachable objects) tractable where it often required significant human intervention before. Before cruft packs, many repositories which required clean up were simply out of our reach because of the possibility of creating an explosion of loose objects which could derail performance for all repositories stored on a fileserver. Now, garbage collecting a repository is a simple task, no matter its size or scale.&lt;&#x2F;p&gt;
&lt;p&gt;During our testing, we ran garbage collection on a handful of repositories, and got some exciting results. For repositories that regularly force-push a single commit to their main branch (leaving a majority of their objects unreachable), their on-disk size dropped significantly. The most extreme example we found during testing caused a repository which used to take 186 gigabytes to store shrink to only take 2 gigabytes of space.&lt;&#x2F;p&gt;
&lt;p&gt;On &lt;code&gt;github&#x2F;github&lt;&#x2F;code&gt;, GitHub’s main codebase, we were able to shrink the repository from around 57 gigabytes to 27 gigabytes. Even though these savings are more modest, the real payoff is in the objects we no longer have to store. Before garbage collecting, each replica of this repository had nearly 60 million objects, including years of test-merges, force-pushes, and all kinds of sources of unreachable objects. Each of these objects contributed to the I&#x2F;O cost of repacking this repository. After garbage collecting, only 11.8 million objects remained. Since each object in a repository requires around 150 bytes of memory during repacking, we save around 7 gigabytes of RAM during each maintenance routine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;limbo-repositories&quot;&gt;Limbo repositories&lt;a class=&quot;zola-anchor&quot; href=&quot;#limbo-repositories&quot; aria-label=&quot;Anchor link for: limbo-repositories&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Even though we can easily garbage collect a repository of any size, we still have to navigate the inherent raciness that we described at the beginning of this post.&lt;&#x2F;p&gt;
&lt;p&gt;At GitHub, our approach has been to make this situation easy to recover from automatically instead of preventing it entirely (which would require significant surgery to much of Git’s code). To do this, our approach is to create a “limbo” repository whenever a pruning garbage collection is done. Any objects which get expired from the main repository are stored in a separate pack in the limbo repository. Then, the process to garbage collect a repository looks something like:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Generate a cruft pack of recent unreachable objects in the main repository.&lt;&#x2F;li&gt;
&lt;li&gt;Generate a second cruft pack of expired unreachable objects, stored outside of the main repository, in the “limbo” repository.&lt;&#x2F;li&gt;
&lt;li&gt;After garbage collection has completed, run a &lt;code&gt;git fsck&lt;&#x2F;code&gt; in the main repository to detect any object corruption.&lt;&#x2F;li&gt;
&lt;li&gt;If any objects are missing, recover them by copying them over from the limbo repository.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The process for generating a cruft pack of expired unreachable objects boils down to creating another cruft pack (using exactly the same process we described earlier in this post), with two caveats:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The expiration cutoff is set to “never” since we want to keep around any objects which we did expire in the previous step.&lt;&#x2F;li&gt;
&lt;li&gt;The original cruft pack is treated as a pack containing reachable objects since we want to ignore any unreachable objects which were too recent to expire (and, thus, are stored in the cruft pack in the main repository).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We have used this idea at GitHub with great success, and now treat garbage collection as a hands-off process from start to finish. The patches to implement this approach are available as a preliminary RFC on the Git mailing list &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;lore.kernel.org&#x2F;git&#x2F;cover.1656528343.git.me@ttaylorr.com&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;thank-you&quot;&gt;Thank you&lt;a class=&quot;zola-anchor&quot; href=&quot;#thank-you&quot; aria-label=&quot;Anchor link for: thank-you&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;This work would not have been possible without generous review and collaboration from engineers from within and outside of GitHub. The Git Systems team at GitHub were great to work with while we developed and deployed cruft packs. Special thanks to &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torstenwalter&quot;&gt;Torsten Walter&lt;&#x2F;a&gt;, and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mhagger&quot;&gt;Michael Haggerty&lt;&#x2F;a&gt;, who played substantial roles in developing limbo repositories.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of GitHub, this work would not have been possible without careful review from the open-source Git community, especially &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;derrickstolee&quot;&gt;Derrick Stolee&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;peff&quot;&gt;Jeff King&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathantanmy&quot;&gt;Jonathan Tan&lt;&#x2F;a&gt;, &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrn&quot;&gt;Jonathan Nieder&lt;&#x2F;a&gt;, and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gitster&quot;&gt;Junio C Hamano&lt;&#x2F;a&gt;. In particular, Jeff King contributed significantly to the original development of many of the ideas discussed above.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;from &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;engineering&#x2F;architecture-optimization&#x2F;scaling-gits-garbage-collection&quot;&gt;github.blog&lt;&#x2F;a&gt;, by @ttaylorr&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;1&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;1&lt;&#x2F;sup&gt;
&lt;p&gt;It’s true. According to the Library of Congress themselves, their digital collection amounts to more than 3 petabytes in size [&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;blogs.loc.gov&#x2F;thesignal&#x2F;2012&#x2F;04&#x2F;a-library-of-congress-worth-of-data-its-all-in-how-you-define-it&#x2F;&quot;&gt;source&lt;&#x2F;a&gt;]. The 18.6 petabytes we store at GitHub actually overcounts by a factor of five, since we store a handful of copies of each repository. In reality, it’s hard to provide an exact number, since data is de-duplicated within a fork network, and is stored compressed on disk. Either way you slice it, it’s a lot of data: you get the point.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;2&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;2&lt;&#x2F;sup&gt;
&lt;p&gt;Meaning that for any reachable object part of some repository, any objects reachable from it are also contained in that repository.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>How to Make Wealth - Paul Graham</title>
		<published>2021-09-10T00:00:00+00:00</published>
		<updated>2021-09-10T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example1/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example1/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example1/">&lt;p&gt;If you wanted to get rich, how would you do it? I think your best bet would be to start or join a startup. That&#x27;s been a reliable way to get rich for hundreds of years. The word &quot;startup&quot; dates from the 1960s, but what happens in one is very similar to the venture-backed trading voyages of the Middle Ages.&lt;&#x2F;p&gt;
&lt;p&gt;Startups usually involve technology, so much so that the phrase &quot;high-tech startup&quot; is almost redundant. A startup is a small company that takes on a hard technical problem.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of people get rich knowing nothing more than that. You don&#x27;t have to know physics to be a good pitcher. But I think it could give you an edge to understand the underlying principles. Why do startups have to be small? Will a startup inevitably stop being a startup as it grows larger? And why do they so often work on developing new technology? Why are there so many startups selling new drugs or computer software, and none selling corn oil or laundry detergent?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-proposition&quot;&gt;The Proposition&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-proposition&quot; aria-label=&quot;Anchor link for: the-proposition&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Economically, you can think of a startup as a way to compress your whole working life into a few years. Instead of working at a low intensity for forty years, you work as hard as you possibly can for four. This pays especially well in technology, where you earn a premium for working fast.&lt;&#x2F;p&gt;
&lt;p&gt;Here is a brief sketch of the economic proposition. If you&#x27;re a good hacker in your mid twenties, you can get a job paying about $80,000 per year. So on average such a hacker must be able to do at least $80,000 worth of work per year for the company just to break even. You could probably work twice as many hours as a corporate employee, and if you focus you can probably get three times as much done in an hour. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; If a fairly good hacker is worth $80,000 a year at a big company, then a smart hacker working very hard without any corporate bullshit to slow him down should be able to do work worth about $3 million a year.&lt;&#x2F;p&gt;
&lt;p&gt;Like all back-of-the-envelope calculations, this one has a lot of wiggle room. I wouldn&#x27;t try to defend the actual numbers. But I stand by the structure of the calculation. I&#x27;m not claiming the multiplier is precisely 36, but it is certainly more than 10, and probably rarely as high as 100.&lt;&#x2F;p&gt;
&lt;p&gt;If $3 million a year seems high, remember that we&#x27;re talking about the limit case: the case where you not only have zero leisure time but indeed work so hard that you endanger your health.&lt;&#x2F;p&gt;
&lt;p&gt;Startups are not magic. They don&#x27;t change the laws of wealth creation. They just represent a point at the far end of the curve. There is a conservation law at work here: if you want to make a million dollars, you have to endure a million dollars&#x27; worth of pain. For example, one way to make a million dollars would be to work for the Post Office your whole life, and save every penny of your salary. Imagine the stress of working for the Post Office for fifty years. In a startup you compress all this stress into three or four years. You do tend to get a certain bulk discount if you buy the economy-size pain, but you can&#x27;t evade the fundamental conservation law. If starting a startup were easy, everyone would do it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;millions-not-billions&quot;&gt;Millions, not Billions&lt;a class=&quot;zola-anchor&quot; href=&quot;#millions-not-billions&quot; aria-label=&quot;Anchor link for: millions-not-billions&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If $3 million a year seems high to some people, it will seem low to others. Three &lt;em&gt;million?&lt;&#x2F;em&gt; How do I get to be a billionaire, like Bill Gates?&lt;&#x2F;p&gt;
&lt;p&gt;So let&#x27;s get Bill Gates out of the way right now. It&#x27;s not a good idea to use famous rich people as examples, because the press only write about the very richest, and these tend to be outliers. Bill Gates is a smart, determined, and hardworking man, but you need more than that to make as much money as he has. You also need to be very lucky.&lt;&#x2F;p&gt;
&lt;p&gt;There is a large random factor in the success of any company. So the guys you end up reading about in the papers are the ones who are very smart, totally dedicated, &lt;em&gt;and&lt;&#x2F;em&gt; win the lottery. Certainly Bill is smart and dedicated, but Microsoft also happens to have been the beneficiary of one of the most spectacular blunders in the history of business: the licensing deal for DOS. No doubt Bill did everything he could to steer IBM into making that blunder, and he has done an excellent job of exploiting it, but if there had been one person with a brain on IBM&#x27;s side, Microsoft&#x27;s future would have been very different. Microsoft at that stage had little leverage over IBM. They were effectively a component supplier. If IBM had required an exclusive license, as they should have, Microsoft would still have signed the deal. It would still have meant a lot of money for them, and IBM could easily have gotten an operating system elsewhere.&lt;&#x2F;p&gt;
&lt;p&gt;Instead IBM ended up using all its power in the market to give Microsoft control of the PC standard. From that point, all Microsoft had to do was execute. They never had to bet the company on a bold decision. All they had to do was play hardball with licensees and copy more innovative products reasonably promptly.&lt;&#x2F;p&gt;
&lt;p&gt;If IBM hadn&#x27;t made this mistake, Microsoft would still have been a successful company, but it could not have grown so big so fast. Bill Gates would be rich, but he&#x27;d be somewhere near the bottom of the Forbes 400 with the other guys his age.&lt;&#x2F;p&gt;
&lt;p&gt;There are a lot of ways to get rich, and this essay is about only one of them. This essay is about how to make money by creating wealth and getting paid for it. There are plenty of other ways to get money, including chance, speculation, marriage, inheritance, theft, extortion, fraud, monopoly, graft, lobbying, counterfeiting, and prospecting. Most of the greatest fortunes have probably involved several of these.&lt;&#x2F;p&gt;
&lt;p&gt;The advantage of creating wealth, as a way to get rich, is not just that it&#x27;s more legitimate (many of the other methods are now illegal) but that it&#x27;s more &lt;em&gt;straightforward.&lt;&#x2F;em&gt; You just have to do something people want.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;money-is-not-wealth&quot;&gt;Money Is Not Wealth&lt;a class=&quot;zola-anchor&quot; href=&quot;#money-is-not-wealth&quot; aria-label=&quot;Anchor link for: money-is-not-wealth&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If you want to create wealth, it will help to understand what it is. Wealth is not the same thing as money. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#3&quot;&gt;2&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; Wealth is as old as human history. Far older, in fact; ants have wealth. Money is a comparatively recent invention.&lt;&#x2F;p&gt;
&lt;p&gt;Wealth is the fundamental thing. Wealth is stuff we want: food, clothes, houses, cars, gadgets, travel to interesting places, and so on. You can have wealth without having money. If you had a magic machine that could on command make you a car or cook you dinner or do your laundry, or do anything else you wanted, you wouldn&#x27;t need money. Whereas if you were in the middle of Antarctica, where there is nothing to buy, it wouldn&#x27;t matter how much money you had.&lt;&#x2F;p&gt;
&lt;p&gt;Wealth is what you want, not money. But if wealth is the important thing, why does everyone talk about making money? It is a kind of shorthand: money is a way of moving wealth, and in practice they are usually interchangeable. But they are not the same thing, and unless you plan to get rich by counterfeiting, talking about &lt;em&gt;making money&lt;&#x2F;em&gt; can make it harder to understand how to make money.&lt;&#x2F;p&gt;
&lt;p&gt;Money is a side effect of specialization. In a specialized society, most of the things you need, you can&#x27;t make for yourself. If you want a potato or a pencil or a place to live, you have to get it from someone else.&lt;&#x2F;p&gt;
&lt;p&gt;How do you get the person who grows the potatoes to give you some? By giving him something he wants in return. But you can&#x27;t get very far by trading things directly with the people who need them. If you make violins, and none of the local farmers wants one, how will you eat?&lt;&#x2F;p&gt;
&lt;p&gt;The solution societies find, as they get more specialized, is to make the trade into a two-step process. Instead of trading violins directly for potatoes, you trade violins for, say, silver, which you can then trade again for anything else you need. The intermediate stuff-- the &lt;em&gt;medium of exchange&lt;&#x2F;em&gt;-- can be anything that&#x27;s rare and portable. Historically metals have been the most common, but recently we&#x27;ve been using a medium of exchange, called the &lt;em&gt;dollar&lt;&#x2F;em&gt;, that doesn&#x27;t physically exist. It works as a medium of exchange, however, because its rarity is guaranteed by the U.S. Government.&lt;&#x2F;p&gt;
&lt;p&gt;The advantage of a medium of exchange is that it makes trade work. The disadvantage is that it tends to obscure what trade really means. People think that what a business does is make money. But money is just the intermediate stage-- just a shorthand-- for whatever people want. What most businesses really do is make wealth. They do something people want. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#4&quot;&gt;3&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-pie-fallacy&quot;&gt;The Pie Fallacy&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-pie-fallacy&quot; aria-label=&quot;Anchor link for: the-pie-fallacy&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;A surprising number of people retain from childhood the idea that there is a fixed amount of wealth in the world. There is, in any normal family, a fixed amount of &lt;em&gt;money&lt;&#x2F;em&gt; at any moment. But that&#x27;s not the same thing.&lt;&#x2F;p&gt;
&lt;p&gt;When wealth is talked about in this context, it is often described as a pie. &quot;You can&#x27;t make the pie larger,&quot; say politicians. When you&#x27;re talking about the amount of money in one family&#x27;s bank account, or the amount available to a government from one year&#x27;s tax revenue, this is true. If one person gets more, someone else has to get less.&lt;&#x2F;p&gt;
&lt;p&gt;I can remember believing, as a child, that if a few rich people had all the money, it left less for everyone else. Many people seem to continue to believe something like this well into adulthood. This fallacy is usually there in the background when you hear someone talking about how x percent of the population have y percent of the wealth. If you plan to start a startup, then whether you realize it or not, you&#x27;re planning to disprove the Pie Fallacy.&lt;&#x2F;p&gt;
&lt;p&gt;What leads people astray here is the abstraction of money. Money is not wealth. It&#x27;s just something we use to move wealth around. So although there may be, in certain specific moments (like your family, this month) a fixed amount of money available to trade with other people for things you want, there is not a fixed amount of wealth in the world. &lt;em&gt;You can make more wealth.&lt;&#x2F;em&gt; Wealth has been getting created and destroyed (but on balance, created) for all of human history.&lt;&#x2F;p&gt;
&lt;p&gt;Suppose you own a beat-up old car. Instead of sitting on your butt next summer, you could spend the time restoring your car to pristine condition. In doing so you create wealth. The world is-- and you specifically are-- one pristine old car the richer. And not just in some metaphorical way. If you sell your car, you&#x27;ll get more for it.&lt;&#x2F;p&gt;
&lt;p&gt;In restoring your old car you have made yourself richer. You haven&#x27;t made anyone else poorer. So there is obviously not a fixed pie. And in fact, when you look at it this way, you wonder why anyone would think there was. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#5&quot;&gt;4&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;]&lt;&#x2F;p&gt;
&lt;p&gt;Kids know, without knowing they know, that they can create wealth. If you need to give someone a present and don&#x27;t have any money, you make one. But kids are so bad at making things that they consider home-made presents to be a distinct, inferior, sort of thing to store-bought ones-- a mere expression of the proverbial thought that counts. And indeed, the lumpy ashtrays we made for our parents did not have much of a resale market.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;craftsmen&quot;&gt;Craftsmen&lt;a class=&quot;zola-anchor&quot; href=&quot;#craftsmen&quot; aria-label=&quot;Anchor link for: craftsmen&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;The people most likely to grasp that wealth can be created are the ones who are good at making things, the craftsmen. Their hand-made objects become store-bought ones. But with the rise of industrialization there are fewer and fewer craftsmen. One of the biggest remaining groups is computer programmers.&lt;&#x2F;p&gt;
&lt;p&gt;A programmer can sit down in front of a computer and &lt;em&gt;create wealth&lt;&#x2F;em&gt;. A good piece of software is, in itself, a valuable thing. There is no manufacturing to confuse the issue. Those characters you type are a complete, finished product. If someone sat down and wrote a web browser that didn&#x27;t suck (a fine idea, by the way), the world would be that much richer. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#5b&quot;&gt;5&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Everyone in a company works together to create wealth, in the sense of making more things people want. Many of the employees (e.g. the people in the mailroom or the personnel department) work at one remove from the actual making of stuff. Not the programmers. They literally think the product, one line at a time. And so it&#x27;s clearer to programmers that wealth is something that&#x27;s made, rather than being distributed, like slices of a pie, by some imaginary Daddy.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also obvious to programmers that there are huge variations in the rate at which wealth is created. At Viaweb we had one programmer who was a sort of monster of productivity. I remember watching what he did one long day and estimating that he had added several hundred thousand dollars to the market value of the company. A great programmer, on a roll, could create a million dollars worth of wealth in a couple weeks. A mediocre programmer over the same period will generate zero or even negative wealth (e.g. by introducing bugs).&lt;&#x2F;p&gt;
&lt;p&gt;This is why so many of the best programmers are libertarians. In our world, you sink or swim, and there are no excuses. When those far removed from the creation of wealth-- undergraduates, reporters, politicians-- hear that the richest 5% of the people have half the total wealth, they tend to think &lt;em&gt;injustice!&lt;&#x2F;em&gt; An experienced programmer would be more likely to think &lt;em&gt;is that all?&lt;&#x2F;em&gt; The top 5% of programmers probably write 99% of the good software.&lt;&#x2F;p&gt;
&lt;p&gt;Wealth can be created without being sold. Scientists, till recently at least, effectively donated the wealth they created. We are all richer for knowing about penicillin, because we&#x27;re less likely to die from infections. Wealth is whatever people want, and not dying is certainly something we want. Hackers often donate their work by writing open source software that anyone can use for free. I am much the richer for the operating system FreeBSD, which I&#x27;m running on the computer I&#x27;m using now, and so is Yahoo, which runs it on all their servers.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-a-job-is&quot;&gt;What a Job Is&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-a-job-is&quot; aria-label=&quot;Anchor link for: what-a-job-is&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;In industrialized countries, people belong to one institution or another at least until their twenties. After all those years you get used to the idea of belonging to a group of people who all get up in the morning, go to some set of buildings, and do things that they do not, ordinarily, enjoy doing. Belonging to such a group becomes part of your identity: name, age, role, institution. If you have to introduce yourself, or someone else describes you, it will be as something like, John Smith, age 10, a student at such and such elementary school, or John Smith, age 20, a student at such and such college.&lt;&#x2F;p&gt;
&lt;p&gt;When John Smith finishes school he is expected to get a job. And what getting a job seems to mean is joining another institution. Superficially it&#x27;s a lot like college. You pick the companies you want to work for and apply to join them. If one likes you, you become a member of this new group. You get up in the morning and go to a new set of buildings, and do things that you do not, ordinarily, enjoy doing. There are a few differences: life is not as much fun, and you get paid, instead of paying, as you did in college. But the similarities feel greater than the differences. John Smith is now John Smith, 22, a software developer at such and such corporation.&lt;&#x2F;p&gt;
&lt;p&gt;In fact John Smith&#x27;s life has changed more than he realizes. Socially, a company looks much like college, but the deeper you go into the underlying reality, the more different it gets.&lt;&#x2F;p&gt;
&lt;p&gt;What a company does, and has to do if it wants to continue to exist, is earn money. And the way most companies make money is by creating wealth. Companies can be so specialized that this similarity is concealed, but it is not only manufacturing companies that create wealth. A big component of wealth is location. Remember that magic machine that could make you cars and cook you dinner and so on? It would not be so useful if it delivered your dinner to a random location in central Asia. If wealth means what people want, companies that move things also create wealth. Ditto for many other kinds of companies that don&#x27;t make anything physical. Nearly all companies exist to do something people want.&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s what you do, as well, when you go to work for a company. But here there is another layer that tends to obscure the underlying reality. In a company, the work you do is averaged together with a lot of other people&#x27;s. You may not even be aware you&#x27;re doing something people want. Your contribution may be indirect. But the company as a whole must be giving people something they want, or they won&#x27;t make any money. And if they are paying you x dollars a year, then on average you must be contributing at least x dollars a year worth of work, or the company will be spending more than it makes, and will go out of business.&lt;&#x2F;p&gt;
&lt;p&gt;Someone graduating from college thinks, and is told, that he needs to get a job, as if the important thing were becoming a member of an institution. A more direct way to put it would be: you need to start doing something people want. You don&#x27;t need to join a company to do that. All a company is is a group of people working together to do something people want. It&#x27;s doing something people want that matters, not joining the group. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#6&quot;&gt;6&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For most people the best plan probably is to go to work for some existing company. But it is a good idea to understand what&#x27;s happening when you do this. A job means doing something people want, averaged together with everyone else in that company.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;working-harder&quot;&gt;Working Harder&lt;a class=&quot;zola-anchor&quot; href=&quot;#working-harder&quot; aria-label=&quot;Anchor link for: working-harder&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;That averaging gets to be a problem. I think the single biggest problem afflicting large companies is the difficulty of assigning a value to each person&#x27;s work. For the most part they punt. In a big company you get paid a fairly predictable salary for working fairly hard. You&#x27;re expected not to be obviously incompetent or lazy, but you&#x27;re not expected to devote your whole life to your work.&lt;&#x2F;p&gt;
&lt;p&gt;It turns out, though, that there are economies of scale in how much of your life you devote to your work. In the right kind of business, someone who really devoted himself to work could generate ten or even a hundred times as much wealth as an average employee. A programmer, for example, instead of chugging along maintaining and updating an existing piece of software, could write a whole new piece of software, and with it create a new source of revenue.&lt;&#x2F;p&gt;
&lt;p&gt;Companies are not set up to reward people who want to do this. You can&#x27;t go to your boss and say, I&#x27;d like to start working ten times as hard, so will you please pay me ten times as much? For one thing, the official fiction is that you are already working as hard as you can. But a more serious problem is that the company has no way of measuring the value of your work.&lt;&#x2F;p&gt;
&lt;p&gt;Salesmen are an exception. It&#x27;s easy to measure how much revenue they generate, and they&#x27;re usually paid a percentage of it. If a salesman wants to work harder, he can just start doing it, and he will automatically get paid proportionally more.&lt;&#x2F;p&gt;
&lt;p&gt;There is one other job besides sales where big companies can hire first-rate people: in the top management jobs. And for the same reason: their performance can be measured. The top managers are held responsible for the performance of the entire company. Because an ordinary employee&#x27;s performance can&#x27;t usually be measured, he is not expected to do more than put in a solid effort. Whereas top management, like salespeople, have to actually come up with the numbers. The CEO of a company that tanks cannot plead that he put in a solid effort. If the company does badly, he&#x27;s done badly.&lt;&#x2F;p&gt;
&lt;p&gt;A company that could pay all its employees so straightforwardly would be enormously successful. Many employees would work harder if they could get paid for it. More importantly, such a company would attract people who wanted to work especially hard. It would crush its competitors.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, companies can&#x27;t pay everyone like salesmen. Salesmen work alone. Most employees&#x27; work is tangled together. Suppose a company makes some kind of consumer gadget. The engineers build a reliable gadget with all kinds of new features; the industrial designers design a beautiful case for it; and then the marketing people convince everyone that it&#x27;s something they&#x27;ve got to have. How do you know how much of the gadget&#x27;s sales are due to each group&#x27;s efforts? Or, for that matter, how much is due to the creators of past gadgets that gave the company a reputation for quality? There&#x27;s no way to untangle all their contributions. Even if you could read the minds of the consumers, you&#x27;d find these factors were all blurred together.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to go faster, it&#x27;s a problem to have your work tangled together with a large number of other people&#x27;s. In a large group, your performance is not separately measurable-- and the rest of the group slows you down.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;measurement-and-leverage&quot;&gt;Measurement and Leverage&lt;a class=&quot;zola-anchor&quot; href=&quot;#measurement-and-leverage&quot; aria-label=&quot;Anchor link for: measurement-and-leverage&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;To get rich you need to get yourself in a situation with two things, measurement and leverage. You need to be in a position where your performance can be measured, or there is no way to get paid more by doing more. And you have to have leverage, in the sense that the decisions you make have a big effect.&lt;&#x2F;p&gt;
&lt;p&gt;Measurement alone is not enough. An example of a job with measurement but not leverage is doing piecework in a sweatshop. Your performance is measured and you get paid accordingly, but you have no scope for decisions. The only decision you get to make is how fast you work, and that can probably only increase your earnings by a factor of two or three.&lt;&#x2F;p&gt;
&lt;p&gt;An example of a job with both measurement and leverage would be lead actor in a movie. Your performance can be measured in the gross of the movie. And you have leverage in the sense that your performance can make or break it.&lt;&#x2F;p&gt;
&lt;p&gt;CEOs also have both measurement and leverage. They&#x27;re measured, in that the performance of the company is their performance. And they have leverage in that their decisions set the whole company moving in one direction or another.&lt;&#x2F;p&gt;
&lt;p&gt;I think everyone who gets rich by their own efforts will be found to be in a situation with measurement and leverage. Everyone I can think of does: CEOs, movie stars, hedge fund managers, professional athletes. A good hint to the presence of leverage is the possibility of failure. Upside must be balanced by downside, so if there is big potential for gain there must also be a terrifying possibility of loss. CEOs, stars, fund managers, and athletes all live with the sword hanging over their heads; the moment they start to suck, they&#x27;re out. If you&#x27;re in a job that feels safe, you are not going to get rich, because if there is no danger there is almost certainly no leverage.&lt;&#x2F;p&gt;
&lt;p&gt;But you don&#x27;t have to become a CEO or a movie star to be in a situation with measurement and leverage. All you need to do is be part of a small group working on a hard problem.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;smallness-measurement&quot;&gt;Smallness = Measurement&lt;a class=&quot;zola-anchor&quot; href=&quot;#smallness-measurement&quot; aria-label=&quot;Anchor link for: smallness-measurement&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If you can&#x27;t measure the value of the work done by individual employees, you can get close. You can measure the value of the work done by small groups.&lt;&#x2F;p&gt;
&lt;p&gt;One level at which you can accurately measure the revenue generated by employees is at the level of the whole company. When the company is small, you are thereby fairly close to measuring the contributions of individual employees. A viable startup might only have ten employees, which puts you within a factor of ten of measuring individual effort.&lt;&#x2F;p&gt;
&lt;p&gt;Starting or joining a startup is thus as close as most people can get to saying to one&#x27;s boss, I want to work ten times as hard, so please pay me ten times as much. There are two differences: you&#x27;re not saying it to your boss, but directly to the customers (for whom your boss is only a proxy after all), and you&#x27;re not doing it individually, but along with a small group of other ambitious people.&lt;&#x2F;p&gt;
&lt;p&gt;It will, ordinarily, be a group. Except in a few unusual kinds of work, like acting or writing books, you can&#x27;t be a company of one person. And the people you work with had better be good, because it&#x27;s their work that yours is going to be averaged with.&lt;&#x2F;p&gt;
&lt;p&gt;A big company is like a giant galley driven by a thousand rowers. Two things keep the speed of the galley down. One is that individual rowers don&#x27;t see any result from working harder. The other is that, in a group of a thousand people, the average rower is likely to be pretty average.&lt;&#x2F;p&gt;
&lt;p&gt;If you took ten people at random out of the big galley and put them in a boat by themselves, they could probably go faster. They would have both carrot and stick to motivate them. An energetic rower would be encouraged by the thought that he could have a visible effect on the speed of the boat. And if someone was lazy, the others would be more likely to notice and complain.&lt;&#x2F;p&gt;
&lt;p&gt;But the real advantage of the ten-man boat shows when you take the ten &lt;em&gt;best&lt;&#x2F;em&gt; rowers out of the big galley and put them in a boat together. They will have all the extra motivation that comes from being in a small group. But more importantly, by selecting that small a group you can get the best rowers. Each one will be in the top 1%. It&#x27;s a much better deal for them to average their work together with a small group of their peers than to average it with everyone.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s the real point of startups. Ideally, you are getting together with a group of other people who also want to work a lot harder, and get paid a lot more, than they would in a big company. And because startups tend to get founded by self-selecting groups of ambitious people who already know one another (at least by reputation), the level of measurement is more precise than you get from smallness alone. A startup is not merely ten people, but ten people like you.&lt;&#x2F;p&gt;
&lt;p&gt;Steve Jobs once said that the success or failure of a startup depends on the first ten employees. I agree. If anything, it&#x27;s more like the first five. Being small is not, in itself, what makes startups kick butt, but rather that small groups can be select. You don&#x27;t want small in the sense of a village, but small in the sense of an all-star team.&lt;&#x2F;p&gt;
&lt;p&gt;The larger a group, the closer its average member will be to the average for the population as a whole. So all other things being equal, a very able person in a big company is probably getting a bad deal, because his performance is dragged down by the overall lower performance of the others. Of course, all other things often are not equal: the able person may not care about money, or may prefer the stability of a large company. But a very able person who does care about money will ordinarily do better to go off and work with a small group of peers.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;technology-leverage&quot;&gt;Technology = Leverage&lt;a class=&quot;zola-anchor&quot; href=&quot;#technology-leverage&quot; aria-label=&quot;Anchor link for: technology-leverage&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Startups offer anyone a way to be in a situation with measurement and leverage. They allow measurement because they&#x27;re small, and they offer leverage because they make money by inventing new technology.&lt;&#x2F;p&gt;
&lt;p&gt;What is technology? It&#x27;s &lt;em&gt;technique&lt;&#x2F;em&gt;. It&#x27;s the way we all do things. And when you discover a new way to do things, its value is multiplied by all the people who use it. It is the proverbial fishing rod, rather than the fish. That&#x27;s the difference between a startup and a restaurant or a barber shop. You fry eggs or cut hair one customer at a time. Whereas if you solve a technical problem that a lot of people care about, you help everyone who uses your solution. That&#x27;s leverage.&lt;&#x2F;p&gt;
&lt;p&gt;If you look at history, it seems that most people who got rich by creating wealth did it by developing new technology. You just can&#x27;t fry eggs or cut hair fast enough. What made the Florentines rich in 1200 was the discovery of new techniques for making the high-tech product of the time, fine woven cloth. What made the Dutch rich in 1600 was the discovery of shipbuilding and navigation techniques that enabled them to dominate the seas of the Far East.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately there is a natural fit between smallness and solving hard problems. The leading edge of technology moves fast. Technology that&#x27;s valuable today could be worthless in a couple years. Small companies are more at home in this world, because they don&#x27;t have layers of bureaucracy to slow them down. Also, technical advances tend to come from unorthodox approaches, and small companies are less constrained by convention.&lt;&#x2F;p&gt;
&lt;p&gt;Big companies can develop technology. They just can&#x27;t do it quickly. Their size makes them slow and prevents them from rewarding employees for the extraordinary effort required. So in practice big companies only get to develop technology in fields where large capital requirements prevent startups from competing with them, like microprocessors, power plants, or passenger aircraft. And even in those fields they depend heavily on startups for components and ideas.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s obvious that biotech or software startups exist to solve hard technical problems, but I think it will also be found to be true in businesses that don&#x27;t seem to be about technology. McDonald&#x27;s, for example, grew big by designing a system, the McDonald&#x27;s franchise, that could then be reproduced at will all over the face of the earth. A McDonald&#x27;s franchise is controlled by rules so precise that it is practically a piece of software. Write once, run everywhere. Ditto for Wal-Mart. Sam Walton got rich not by being a retailer, but by designing a new kind of store.&lt;&#x2F;p&gt;
&lt;p&gt;Use difficulty as a guide not just in selecting the overall aim of your company, but also at decision points along the way. At Viaweb one of our rules of thumb was &lt;em&gt;run upstairs.&lt;&#x2F;em&gt; Suppose you are a little, nimble guy being chased by a big, fat, bully. You open a door and find yourself in a staircase. Do you go up or down? I say up. The bully can probably run downstairs as fast as you can. Going upstairs his bulk will be more of a disadvantage. Running upstairs is hard for you but even harder for him.&lt;&#x2F;p&gt;
&lt;p&gt;What this meant in practice was that we deliberately sought hard problems. If there were two features we could add to our software, both equally valuable in proportion to their difficulty, we&#x27;d always take the harder one. Not just because it was more valuable, but &lt;em&gt;because it was harder.&lt;&#x2F;em&gt; We delighted in forcing bigger, slower competitors to follow us over difficult ground. Like guerillas, startups prefer the difficult terrain of the mountains, where the troops of the central government can&#x27;t follow. I can remember times when we were just exhausted after wrestling all day with some horrible technical problem. And I&#x27;d be delighted, because something that was hard for us would be impossible for our competitors.&lt;&#x2F;p&gt;
&lt;p&gt;This is not just a good way to run a startup. It&#x27;s what a startup is. Venture capitalists know about this and have a phrase for it: &lt;em&gt;barriers to entry.&lt;&#x2F;em&gt; If you go to a VC with a new idea and ask him to invest in it, one of the first things he&#x27;ll ask is, how hard would this be for someone else to develop? That is, how much difficult ground have you put between yourself and potential pursuers? &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#7&quot;&gt;7&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; And you had better have a convincing explanation of why your technology would be hard to duplicate. Otherwise as soon as some big company becomes aware of it, they&#x27;ll make their own, and with their brand name, capital, and distribution clout, they&#x27;ll take away your market overnight. You&#x27;d be like guerillas caught in the open field by regular army forces.&lt;&#x2F;p&gt;
&lt;p&gt;One way to put up barriers to entry is through patents. But patents may not provide much protection. Competitors commonly find ways to work around a patent. And if they can&#x27;t, they may simply violate it and invite you to sue them. A big company is not afraid to be sued; it&#x27;s an everyday thing for them. They&#x27;ll make sure that suing them is expensive and takes a long time. Ever heard of Philo Farnsworth? He invented television. The reason you&#x27;ve never heard of him is that his company was not the one to make money from it. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#8&quot;&gt;8&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; The company that did was RCA, and Farnsworth&#x27;s reward for his efforts was a decade of patent litigation.&lt;&#x2F;p&gt;
&lt;p&gt;Here, as so often, the best defense is a good offense. If you can develop technology that&#x27;s simply too hard for competitors to duplicate, you don&#x27;t need to rely on other defenses. Start by picking a hard problem, and then at every decision point, take the harder choice. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#9&quot;&gt;9&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-catch-es&quot;&gt;The Catch(es)&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-catch-es&quot; aria-label=&quot;Anchor link for: the-catch-es&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If it were simply a matter of working harder than an ordinary employee and getting paid proportionately, it would obviously be a good deal to start a startup. Up to a point it would be more fun. I don&#x27;t think many people like the slow pace of big companies, the interminable meetings, the water-cooler conversations, the clueless middle managers, and so on.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately there are a couple catches. One is that you can&#x27;t choose the point on the curve that you want to inhabit. You can&#x27;t decide, for example, that you&#x27;d like to work just two or three times as hard, and get paid that much more. When you&#x27;re running a startup, your competitors decide how hard you work. And they pretty much all make the same decision: as hard as you possibly can.&lt;&#x2F;p&gt;
&lt;p&gt;The other catch is that the payoff is only on average proportionate to your productivity. There is, as I said before, a large random multiplier in the success of any company. So in practice the deal is not that you&#x27;re 30 times as productive and get paid 30 times as much. It is that you&#x27;re 30 times as productive, and get paid between zero and a thousand times as much. If the mean is 30x, the median is probably zero. Most startups tank, and not just the dogfood portals we all heard about during the Internet Bubble. It&#x27;s common for a startup to be developing a genuinely good product, take slightly too long to do it, run out of money, and have to shut down.&lt;&#x2F;p&gt;
&lt;p&gt;A startup is like a mosquito. A bear can absorb a hit and a crab is armored against one, but a mosquito is designed for one thing: to score. No energy is wasted on defense. The defense of mosquitos, as a species, is that there are a lot of them, but this is little consolation to the individual mosquito.&lt;&#x2F;p&gt;
&lt;p&gt;Startups, like mosquitos, tend to be an all-or-nothing proposition. And you don&#x27;t generally know which of the two you&#x27;re going to get till the last minute. Viaweb came close to tanking several times. Our trajectory was like a sine wave. Fortunately we got bought at the top of the cycle, but it was damned close. While we were visiting Yahoo in California to talk about selling the company to them, we had to borrow a conference room to reassure an investor who was about to back out of a new round of funding that we needed to stay alive.&lt;&#x2F;p&gt;
&lt;p&gt;The all-or-nothing aspect of startups was not something we wanted. Viaweb&#x27;s hackers were all extremely risk-averse. If there had been some way just to work super hard and get paid for it, without having a lottery mixed in, we would have been delighted. We would have much preferred a 100% chance of $1 million to a 20% chance of $10 million, even though theoretically the second is worth twice as much. Unfortunately, there is not currently any space in the business world where you can get the first deal.&lt;&#x2F;p&gt;
&lt;p&gt;The closest you can get is by selling your startup in the early stages, giving up upside (and risk) for a smaller but guaranteed payoff. We had a chance to do this, and stupidly, as we then thought, let it slip by. After that we became comically eager to sell. For the next year or so, if anyone expressed the slightest curiosity about Viaweb we would try to sell them the company. But there were no takers, so we had to keep going.&lt;&#x2F;p&gt;
&lt;p&gt;It would have been a bargain to buy us at an early stage, but companies doing acquisitions are not looking for bargains. A company big enough to acquire startups will be big enough to be fairly conservative, and within the company the people in charge of acquisitions will be among the more conservative, because they are likely to be business school types who joined the company late. They would rather overpay for a safe choice. So it is easier to sell an established startup, even at a large premium, than an early-stage one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;get-users&quot;&gt;Get Users&lt;a class=&quot;zola-anchor&quot; href=&quot;#get-users&quot; aria-label=&quot;Anchor link for: get-users&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;I think it&#x27;s a good idea to get bought, if you can. Running a business is different from growing one. It is just as well to let a big company take over once you reach cruising altitude. It&#x27;s also financially wiser, because selling allows you to diversify. What would you think of a financial advisor who put all his client&#x27;s assets into one volatile stock?&lt;&#x2F;p&gt;
&lt;p&gt;How do you get bought? Mostly by doing the same things you&#x27;d do if you didn&#x27;t intend to sell the company. Being profitable, for example. But getting bought is also an art in its own right, and one that we spent a lot of time trying to master.&lt;&#x2F;p&gt;
&lt;p&gt;Potential buyers will always delay if they can. The hard part about getting bought is getting them to act. For most people, the most powerful motivator is not the hope of gain, but the fear of loss. For potential acquirers, the most powerful motivator is the prospect that one of their competitors will buy you. This, as we found, causes CEOs to take red-eyes. The second biggest is the worry that, if they don&#x27;t buy you now, you&#x27;ll continue to grow rapidly and will cost more to acquire later, or even become a competitor.&lt;&#x2F;p&gt;
&lt;p&gt;In both cases, what it all comes down to is users. You&#x27;d think that a company about to buy you would do a lot of research and decide for themselves how valuable your technology was. Not at all. What they go by is the number of users you have.&lt;&#x2F;p&gt;
&lt;p&gt;In effect, acquirers assume the customers know who has the best technology. And this is not as stupid as it sounds. Users are the only real proof that you&#x27;ve created wealth. Wealth is what people want, and if people aren&#x27;t using your software, maybe it&#x27;s not just because you&#x27;re bad at marketing. Maybe it&#x27;s because you haven&#x27;t made what they want.&lt;&#x2F;p&gt;
&lt;p&gt;Venture capitalists have a list of danger signs to watch out for. Near the top is the company run by techno-weenies who are obsessed with solving interesting technical problems, instead of making users happy. In a startup, you&#x27;re not just trying to solve problems. You&#x27;re trying to solve problems &lt;em&gt;that users care about.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So I think you should make users the test, just as acquirers do. Treat a startup as an optimization problem in which performance is measured by number of users. As anyone who has tried to optimize software knows, the key is measurement. When you try to guess where your program is slow, and what would make it faster, you almost always guess wrong.&lt;&#x2F;p&gt;
&lt;p&gt;Number of users may not be the perfect test, but it will be very close. It&#x27;s what acquirers care about. It&#x27;s what revenues depend on. It&#x27;s what makes competitors unhappy. It&#x27;s what impresses reporters, and potential new users. Certainly it&#x27;s a better test than your a priori notions of what problems are important to solve, no matter how technically adept you are.&lt;&#x2F;p&gt;
&lt;p&gt;Among other things, treating a startup as an optimization problem will help you avoid another pitfall that VCs worry about, and rightly-- taking a long time to develop a product. Now we can recognize this as something hackers already know to avoid: premature optimization. Get a version 1.0 out there as soon as you can. Until you have some users to measure, you&#x27;re optimizing based on guesses.&lt;&#x2F;p&gt;
&lt;p&gt;The ball you need to keep your eye on here is the underlying principle that wealth is what people want. If you plan to get rich by creating wealth, you have to know what people want. So few businesses really pay attention to making customers happy. How often do you walk into a store, or call a company on the phone, with a feeling of dread in the back of your mind? When you hear &quot;your call is important to us, please stay on the line,&quot; do you think, oh good, now everything will be all right?&lt;&#x2F;p&gt;
&lt;p&gt;A restaurant can afford to serve the occasional burnt dinner. But in technology, you cook one thing and that&#x27;s what everyone eats. So any difference between what people want and what you deliver is multiplied. You please or annoy customers wholesale. The closer you can get to what they want, the more wealth you generate.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wealth-and-power&quot;&gt;Wealth and Power&lt;a class=&quot;zola-anchor&quot; href=&quot;#wealth-and-power&quot; aria-label=&quot;Anchor link for: wealth-and-power&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Making wealth is not the only way to get rich. For most of human history it has not even been the most common. Until a few centuries ago, the main sources of wealth were mines, slaves and serfs, land, and cattle, and the only ways to acquire these rapidly were by inheritance, marriage, conquest, or confiscation. Naturally wealth had a bad reputation.&lt;&#x2F;p&gt;
&lt;p&gt;Two things changed. The first was the rule of law. For most of the world&#x27;s history, if you did somehow accumulate a fortune, the ruler or his henchmen would find a way to steal it. But in medieval Europe something new happened. A new class of merchants and manufacturers began to collect in towns. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#10&quot;&gt;10&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; Together they were able to withstand the local feudal lord. So for the first time in our history, the bullies stopped stealing the nerds&#x27; lunch money. This was naturally a great incentive, and possibly indeed the main cause of the second big change, industrialization.&lt;&#x2F;p&gt;
&lt;p&gt;A great deal has been written about the causes of the Industrial Revolution. But surely a necessary, if not sufficient, condition was that people who made fortunes be able to enjoy them in peace. &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#11&quot;&gt;11&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; One piece of evidence is what happened to countries that tried to return to the old model, like the Soviet Union, and to a lesser extent Britain under the labor governments of the 1960s and early 1970s. Take away the incentive of wealth, and technical innovation grinds to a halt.&lt;&#x2F;p&gt;
&lt;p&gt;Remember what a startup is, economically: a way of saying, I want to work faster. Instead of accumulating money slowly by being paid a regular wage for fifty years, I want to get it over with as soon as possible. So governments that forbid you to accumulate wealth are in effect decreeing that you work slowly. They&#x27;re willing to let you earn $3 million over fifty years, but they&#x27;re not willing to let you work so hard that you can do it in two. They are like the corporate boss that you can&#x27;t go to and say, I want to work ten times as hard, so please pay me ten times a much. Except this is not a boss you can escape by starting your own company.&lt;&#x2F;p&gt;
&lt;p&gt;The problem with working slowly is not just that technical innovation happens slowly. It&#x27;s that it tends not to happen at all. It&#x27;s only when you&#x27;re deliberately looking for hard problems, as a way to use speed to the greatest advantage, that you take on this kind of project. Developing new technology is a pain in the ass. It is, as Edison said, one percent inspiration and ninety-nine percent perspiration. Without the incentive of wealth, no one wants to do it. Engineers will work on sexy projects like fighter planes and moon rockets for ordinary salaries, but more mundane technologies like light bulbs or semiconductors have to be developed by entrepreneurs.&lt;&#x2F;p&gt;
&lt;p&gt;Startups are not just something that happened in Silicon Valley in the last couple decades. Since it became possible to get rich by creating wealth, everyone who has done it has used essentially the same recipe: measurement and leverage, where measurement comes from working with a small group, and leverage from developing new techniques. The recipe was the same in Florence in 1200 as it is in Santa Clara today.&lt;&#x2F;p&gt;
&lt;p&gt;Understanding this may help to answer an important question: why Europe grew so powerful. Was it something about the geography of Europe? Was it that Europeans are somehow racially superior? Was it their religion? The answer (or at least the proximate cause) may be that the Europeans rode on the crest of a powerful new idea: allowing those who made a lot of money to keep it.&lt;&#x2F;p&gt;
&lt;p&gt;Once you&#x27;re allowed to do that, people who want to get rich can do it by generating wealth instead of stealing it. The resulting technological growth translates not only into wealth but into military power. The theory that led to the stealth plane was developed by a Soviet mathematician. But because the Soviet Union didn&#x27;t have a computer industry, it remained for them a theory; they didn&#x27;t have hardware capable of executing the calculations fast enough to design an actual airplane.&lt;&#x2F;p&gt;
&lt;p&gt;In that respect the Cold War teaches the same lesson as World War II and, for that matter, most wars in recent history. Don&#x27;t let a ruling class of warriors and politicians squash the entrepreneurs. The same recipe that makes individuals rich makes countries powerful. Let the nerds keep their lunch money, and you rule the world.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;a class=&quot;zola-anchor&quot; href=&quot;#notes&quot; aria-label=&quot;Anchor link for: notes&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;1&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;1&lt;&#x2F;sup&gt;
&lt;p&gt;One valuable thing you tend to get only in startups is &lt;em&gt;uninterruptability&lt;&#x2F;em&gt;. Different kinds of work have different time quanta. Someone proofreading a manuscript could probably be interrupted every fifteen minutes with little loss of productivity. But the time quantum for hacking is very long: it might take an hour just to load a problem into your head. So the cost of having someone from personnel call you about a form you forgot to fill out can be huge.&lt;&#x2F;p&gt;
&lt;p&gt;This is why hackers give you such a baleful stare as they turn from their screen to answer your question. Inside their heads a giant house of cards is tottering.&lt;&#x2F;p&gt;
&lt;p&gt;The mere possibility of being interrupted deters hackers from starting hard projects. This is why they tend to work late at night, and why it&#x27;s next to impossible to write great software in a cubicle (except late at night).&lt;&#x2F;p&gt;
&lt;p&gt;One great advantage of startups is that they don&#x27;t yet have any of the people who interrupt you. There is no personnel department, and thus no form nor anyone to call you about it.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;2&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;12&lt;&#x2F;sup&gt;
&lt;p&gt;Faced with the idea that people working for startups might be 20 or 30 times as productive as those working for large companies, executives at large companies will naturally wonder, how could I get the people working for me to do that? The answer is simple: pay them to.&lt;&#x2F;p&gt;
&lt;p&gt;Internally most companies are run like Communist states. If you believe in free markets, why not turn your company into one?&lt;&#x2F;p&gt;
&lt;p&gt;Hypothesis: A company will be maximally profitable when each employee is paid in proportion to the wealth they generate.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;3&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;2&lt;&#x2F;sup&gt;
&lt;p&gt;Until recently even governments sometimes didn&#x27;t grasp the distinction between money and wealth. Adam Smith (&lt;em&gt;Wealth of Nations&lt;&#x2F;em&gt;, v:i) mentions several that tried to preserve their &quot;wealth&quot; by forbidding the export of gold or silver. But having more of the medium of exchange would not make a country richer; if you have more money chasing the same amount of material wealth, the only result is higher prices.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;4&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;3&lt;&#x2F;sup&gt;
&lt;p&gt;There are many senses of the word &quot;wealth,&quot; not all of them material. I&#x27;m not trying to make a deep philosophical point here about which is the true kind. I&#x27;m writing about one specific, rather technical sense of the word &quot;wealth.&quot; What people will give you money for. This is an interesting sort of wealth to study, because it is the kind that prevents you from starving. And what people will give you money for depends on them, not you.&lt;&#x2F;p&gt;
&lt;p&gt;When you&#x27;re starting a business, it&#x27;s easy to slide into thinking that customers want what you do. During the Internet Bubble I talked to a woman who, because she liked the outdoors, was starting an &quot;outdoor portal.&quot; You know what kind of business you should start if you like the outdoors? One to recover data from crashed hard disks.&lt;&#x2F;p&gt;
&lt;p&gt;What&#x27;s the connection? None at all. Which is precisely my point. If you want to create wealth (in the narrow technical sense of not starving) then you should be especially skeptical about any plan that centers on things you like doing. That is where your idea of what&#x27;s valuable is least likely to coincide with other people&#x27;s.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;5&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;4&lt;&#x2F;sup&gt;
&lt;p&gt;In the average car restoration you probably do make everyone else microscopically poorer, by doing a small amount of damage to the environment. While environmental costs should be taken into account, they don&#x27;t make wealth a zero-sum game. For example, if you repair a machine that&#x27;s broken because a part has come unscrewed, you create wealth with no environmental cost.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;5b&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;5&lt;&#x2F;sup&gt;
&lt;p&gt;This essay was written before Firefox.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;6&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;6&lt;&#x2F;sup&gt;
&lt;p&gt;Many people feel confused and depressed in their early twenties. Life seemed so much more fun in college. Well, of course it was. Don&#x27;t be fooled by the surface similarities. You&#x27;ve gone from guest to servant. It&#x27;s possible to have fun in this new world. Among other things, you now get to go behind the doors that say &quot;authorized personnel only.&quot; But the change is a shock at first, and all the worse if you&#x27;re not consciously aware of it.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;7&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;7&lt;&#x2F;sup&gt;
&lt;p&gt;When VCs asked us how long it would take another startup to duplicate our software, we used to reply that they probably wouldn&#x27;t be able to at all. I think this made us seem naive, or liars.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;8&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;8&lt;&#x2F;sup&gt;
&lt;p&gt;Few technologies have one clear inventor. So as a rule, if you know the &quot;inventor&quot; of something (the telephone, the assembly line, the airplane, the light bulb, the transistor) it is because their company made money from it, and the company&#x27;s PR people worked hard to spread the story. If you don&#x27;t know who invented something (the automobile, the television, the computer, the jet engine, the laser), it&#x27;s because other companies made all the money.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;9&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;9&lt;&#x2F;sup&gt;
&lt;p&gt;This is a good plan for life in general. If you have two choices, choose the harder. If you&#x27;re trying to decide whether to go out running or sit home and watch TV, go running. Probably the reason this trick works so well is that when you have two choices and one is harder, the only reason you&#x27;re even considering the other is laziness. You know in the back of your mind what&#x27;s the right thing to do, and this trick merely forces you to acknowledge it.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;10&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;10&lt;&#x2F;sup&gt;
&lt;p&gt;It is probably no accident that the middle class first appeared in northern Italy and the low countries, where there were no strong central governments. These two regions were the richest of their time and became the twin centers from which Renaissance civilization radiated. If they no longer play that role, it is because other places, like the United States, have been truer to the principles they discovered.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;11&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;11&lt;&#x2F;sup&gt;
&lt;p&gt;It may indeed be a sufficient condition. But if so, why didn&#x27;t the Industrial Revolution happen earlier? Two possible (and not incompatible) answers: (a) It did. The Industrial Revolution was one in a series. (b) Because in medieval towns, monopolies and guild regulations initially slowed the development of new means of production.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>我与地坛 - 史铁生</title>
		<published>2021-08-19T00:00:00+00:00</published>
		<updated>2021-08-19T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example3/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example3/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example3/">&lt;h2 id=&quot;yi&quot;&gt;一&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi&quot; aria-label=&quot;Anchor link for: yi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;我在好几篇小说中都提到过一座废弃的古园，实际就是地坛。许多年前旅游业还没有开展，园子荒芜冷落得如同一片野地，很少被人记起。&lt;&#x2F;p&gt;
&lt;p&gt;地坛离我家很近。或者说我家离地坛很近。总之，只好认为这是缘分。地坛在我出生前四百多年就座落在那儿了，而自从我的祖母年轻时带着我父亲来到北京，就一直住在离它不远的地方——五十多年间搬过几次家，可搬来搬去总是在它周围，而且是越搬离它越近了。我常觉得这中间有着宿命的味道：仿佛这古园就是为了等我，而历尽沧桑在那儿等待了四百多年。&lt;&#x2F;p&gt;
&lt;p&gt;它等待我出生，然后又等待我活到最狂妄的年龄上忽地残废了双腿。四百多年里，它一面剥蚀了古殿檐头浮夸的琉璃，淡褪了门壁上炫耀的朱红，坍圮了一段段高墙又散落了玉砌雕栏，祭坛四周的老柏树愈见苍幽，到处的野草荒藤也都茂盛得自在坦荡。这时候想必我是该来了。十五年前的一个下午，我摇着轮椅进入园中，它为一个失魂落魄的人把一切都准备好了。那时，太阳循着亘古不变的路途正越来越大，也越红。在满园弥漫的沉静光芒中，一个人更容易看到时间，并看见自己的身影。&lt;&#x2F;p&gt;
&lt;p&gt;自从那个下午我无意中进了这园子，就再没长久地离开过它。我一下子就理解了它的意图。正如我在一篇小说中所说的：“在人口密聚的城市里，有这样一个宁静的去处，像是上帝的苦心安排。”&lt;&#x2F;p&gt;
&lt;p&gt;两条腿残废后的最初几年，我找不到工作，找不到去路，忽然间几乎什么都找不到了，我就摇了轮椅总是到它那儿去，仅为着那儿是可以逃避一个世界的另一个世界。我在那篇小说中写道：“没处可去我便一天到晚耗在这园子里。跟上班下班一样，别人去上班我就摇了轮椅到这儿来。园子无人看管，上下班时间有些抄近路的人们从园中穿过，园子里活跃一阵，过后便沉寂下来。”“园墙在金晃晃的空气中斜切下一溜荫凉，我把轮椅开进去，把椅背放倒，坐着或是躺着，看书或者想事，撅一杈树枝左右拍打，驱赶那些和我一样不明白为什么要来这世上的小昆虫。”“蜂儿如一朵小雾稳稳地停在半空；蚂蚁摇头晃脑捋着触须，猛然间想透了什么，转身疾行而去；瓢虫爬得不耐烦了，累了祈祷一回便支开翅膀，忽悠一下升空了；树干上留着一只蝉蜕，寂寞如一间空屋；露水在草叶上滚动、聚集，压弯了草叶轰然坠地摔开万道金光。”“满园子都是草木竞相生长弄出的响动，窸窸窣窣窸窸窣窣片刻不息。”这都是真实的记录，园子荒芜但并不衰败。&lt;&#x2F;p&gt;
&lt;p&gt;除去几座殿堂我无法进去，除去那座祭坛我不能上去而只能从各个角度张望它，地坛的每一棵树下我都去过，差不多它的每一米草地上都有过我的车轮印。无论是什么季节，什么天气，什么时间，我都在这园子里呆过。有时候呆一会儿就回家，有时候就呆到满地上都亮起月光。记不清都是在它的哪些角落里了。我一连几小时专心致志地想关于死的事，也以同样的耐心和方式想过我为什么要出生。这样想了好几年，最后事情终于弄明白了：一个人，出生了，这就不再是一个可以辩论的问题，而只是上帝交给他的一个事实；上帝在交给我们这件事实的时候，已经顺便保证了它的结果，所以死是一件不必急于求成的事，死是一个必然会降临的节日。这样想过之后我安心多了，眼前的一切不再那么可怕。比如你起早熬夜准备考试的时候，忽然想起有一个长长的假期在前面等待你，你会不会觉得轻松一点？并且庆幸并且感激这样的安排？
剩下的就是怎样活的问题了，这却不是在某一个瞬间就能完全想透的、不是一次性能够解决的事，怕是活多久就要想它多久了，就像是伴你终生的魔鬼或恋人。所以，十五年了，我还是总得到那古园里去，去它的老树下或荒草边或颓墙旁，去默坐，去呆想，去推开耳边的嘈杂理一理纷乱的思绪，去窥看自己的心魂。十五年中，这古园的形体被不能理解它的人肆意雕琢，幸好有些东西是任谁也不能改变它的。譬如祭坛石门中的落日，寂静的光辉平铺的一刻，地上的每一个坎坷都被映照得灿烂；譬如在园中最为落寞的时间，一群雨燕便出来高歌，把天地都叫喊得苍凉；譬如冬天雪地上孩子的脚印，总让人猜想他们是谁，曾在哪儿做过些什么，然后又都到哪儿去了；譬如那些苍黑的古柏，你忧郁的时候它们镇静地站在那儿，你欣喜的时候它们依然镇静地站在那儿，它们没日没夜地站在那儿从你没有出生一直站到这个世界上又没了你的时候；譬如暴雨骤临园中，激起一阵阵灼烈而清纯的草木和泥土的气味，让人想起无数个夏天的事件；譬如秋风忽至，再有一场早霜，落叶或飘摇歌舞或坦然安卧，满园中播散着熨帖而微苦的味道。味道是最说不清楚的。味道不能写只能闻，要你身临其境去闻才能明了。味道甚至是难于记忆的，只有你又闻到它你才能记起它的全部情感和意蕴。所以我常常要到那园子里去。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;er&quot;&gt;二&lt;a class=&quot;zola-anchor&quot; href=&quot;#er&quot; aria-label=&quot;Anchor link for: er&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;我才想到，当年我总是独自跑到地坛去，曾经给母亲出了一个怎样的难题。&lt;&#x2F;p&gt;
&lt;p&gt;她不是那种光会疼爱儿子而不懂得理解儿子的母亲。她知道我心里的苦闷，知道不该阻止我出去走走，知道我要是老呆在家里结果会更糟，但她又担心我一个人在那荒僻的园子里整天都想些什么。我那时脾气坏到极点，经常是发了疯一样地离开家，从那园子里回来又中了魔似的什么话都不说。母亲知道有些事不宜问，便犹犹豫豫地想问而终于不敢问，因为她自己心里也没有答案。她料想我不会愿意她跟我一同去，所以她从未这样要求过，她知道得给我一点独处的时间，得有这样一段过程。她只是不知道这过程得要多久，和这过程的尽头究竟是什么。每次我要动身时，她便无言地帮我准备，帮助我上了轮椅车，看着我摇车拐出小院；这以后她会怎样，当年我不曾想过。&lt;&#x2F;p&gt;
&lt;p&gt;有一回我摇车出了小院；想起一件什么事又返身回来，看见母亲仍站在原地，还是送我走时的姿势，望着我拐出小院去的那处墙角，对我的回来竟一时没有反应。待她再次送我出门的时候，她说：“出去活动活动，去地坛看看书，我说这挺好。”许多年以后我才渐渐听出，母亲这话实际上是自我安慰，是暗自的祷告，是给我的提示，是恳求与嘱咐。只是在她猝然去世之后，我才有余暇设想。当我不在家里的那些漫长的时间，她是怎样心神不定坐卧难宁，兼着痛苦与惊恐与一个母亲最低限度的祈求。我可以断定，以她的聪慧和坚忍，在那些空落的白天后的黑夜，在那不眠的黑夜后的白天，她思来想去最后准是对自己说：“反正我不能不让他出去，未来的日子是他自己的，如果他真的要在那园子里出了什么事，这苦难也只好我来承担。”在那段日子里--那是好几年长的一段日子，我想我一定使母亲作过了最坏的准备了，但她从来没有对我说过：“你为我想想”。事实上我也真的没为她想过。那时她的儿子，还太年轻，还来不及为母亲想，他被命运击昏了头，一心以为自己是世上最不幸的一个，不知道儿子的不幸在母亲那儿总是要加倍的。她有一个长到二十岁上忽然截瘫了的儿子，这是她唯一的儿子；她情愿截瘫的是自己而不是儿子，可这事无法代替；她想，只要儿子能活下去哪怕自己去死呢也行，可她又确信一个人不能仅仅是活着，儿子得有一条路走向自己的幸福；而这条路呢，没有谁能保证她的儿子终于能找到。——这样一个母亲，注定是活得最苦的母亲。&lt;&#x2F;p&gt;
&lt;p&gt;有一次与一个作家朋友聊天，我问他学写作的最初动机是什么？他想了一会说：“为我母亲。为了让她骄傲。”我心里一惊，良久无言。回想自己最初写小说的动机，虽不似这位朋友的那般单纯，但如他一样的愿望我也有，且一经细想，发现这愿望也在全部动机中占了很大比重。这位朋友说：“我的动机太低俗了吧？”我光是摇头，心想低俗并不见得低俗，只怕是这愿望过于天真了。他又说：“我那时真就是想出名，出了名让别人羡慕我母亲。”我想，他比我坦率。我想，他又比我幸福，因为他的母亲还活着。而且我想，他的母亲也比我的母亲运气好，他的母亲没有一个双腿残废的儿子，否则事情就不这么简单。&lt;&#x2F;p&gt;
&lt;p&gt;在我的头一篇小说发表的时候，在我的小说第一次获奖的那些日子里，我真是多么希望我的母亲还活着。我便又不能在家里呆了，又整天整天独自跑到地坛去，心里是没头没尾的沉郁和哀怨，走遍整个园子却怎么也想不通：母亲为什么就不能再多活两年？为什么在她儿子就快要碰撞开一条路的时候，她却忽然熬不住了？莫非她来此世上只是为了替儿子担忧，却不该分享我的一点点快乐？她匆匆离我去时才只有四十九呀！有那么一会，我甚至对世界对上帝充满了仇恨和厌恶。后来我在一篇题为“合欢树”的文章中写道：“我坐在小公园安静的树林里，闭上眼睛，想，上帝为什么早早地召母亲回去呢？很久很久，迷迷糊糊的我听见了回答：‘她心里太苦了，上帝看她受不住了，就召她回去。’我似乎得了一点安慰，睁开眼睛，看见风正从树林里穿过。”小公园，指的也是地坛。&lt;&#x2F;p&gt;
&lt;p&gt;只是到了这时候，纷纭的往事才在我眼前幻现得清晰，母亲的苦难与伟大才在我心中渗透得深彻。上帝的考虑，也许是对的。&lt;&#x2F;p&gt;
&lt;p&gt;摇着轮椅在园中慢慢走，又是雾罩的清晨，又是骄阳高悬的白昼，我只想着一件事：母亲已经不在了。在老柏树旁停下，在草地上在颓墙边停下，又是处处虫鸣的午后，又是鸟儿归巢的傍晚，我心里只默念着一句话：可是母亲已经不在了。把椅背放倒，躺下，似睡非睡挨到日没，坐起来，心神恍惚，呆呆地直坐到古祭坛上落满黑暗然后再渐渐浮起月光，心里才有点明白，母亲不能再来这园中找我了。&lt;&#x2F;p&gt;
&lt;p&gt;曾有过好多回，我在这园子里呆得太久了，母亲就来找我。她来找我又不想让我发觉，只要见我还好好地在这园子里，她就悄悄转身回去，我看见过几次她的背影。我也看见过几回她四处张望的情景，她视力不好，端着眼镜像在寻找海上的一条船，她没看见我时我已经看见她了，待我看见她也看见我了我就不去看她，过一会我再抬头看她就又看见她缓缓离去的背影。我单是无法知道有多少回她没有找到我。有一回我坐在矮树丛中，树丛很密，我看见她没有找到我；她一个人在园子里走，走过我的身旁，走过我经常呆的一些地方，步履茫然又急迫。我不知道她已经找了多久还要找多久，我不知道为什么我决意不喊她--但这绝不是小时候的捉迷藏，这也许是出于长大了的男孩子的倔强或羞涩？但这倔只留给我痛悔，丝毫也没有骄傲。我真想告诫所有长大了的男孩子，千万不要跟母亲来这套倔强，羞涩就更不必，我已经懂了可我已经来不及了。&lt;&#x2F;p&gt;
&lt;p&gt;儿子想使母亲骄傲，这心情毕竟是太真实了，以致使“想出名”这一声名狼藉的念头也多少改变了一点形象。这是个复杂的问题，且不去管它了罢。随着小说获奖的激动逐日暗淡，我开始相信，至少有一点我是想错了：我用纸笔在报刊上碰撞开的一条路，并不就是母亲盼望我找到的那条路。年年月月我都到这园子里来，年年月月我都要想，母亲盼望我找到的那条路到底是什么。母亲生前没给我留下过什么隽永的哲言，或要我恪守的教诲，只是在她去世之后，她艰难的命运，坚忍的意志和毫不张扬的爱，随光阴流转，在我的印象中愈加鲜明深刻。&lt;&#x2F;p&gt;
&lt;p&gt;有一年，十月的风又翻动起安详的落叶，我在园中读书，听见两个散步的老人说：“没想到这园子有这么大。”我放下书，想，这么大一座园子，要在其中找到她的儿子，母亲走过了多少焦灼的路。多年来我头一次意识到，这园中不单是处处都有过我的车辙，有过我的车辙的地方也都有过母亲的脚印。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;san&quot;&gt;三&lt;a class=&quot;zola-anchor&quot; href=&quot;#san&quot; aria-label=&quot;Anchor link for: san&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;如果以一天中的时间来对应四季，当然春天是早晨，夏天是中午，秋天是黄昏，冬天是夜晚。如果以乐器来对应四季，我想春天应该是小号，夏天是定音鼓，秋天是大提琴，冬天是圆号和长笛。要是以这园子里的声响来对应四季呢？那么，春天是祭坛上空漂浮着的鸽子的哨音，夏天是冗长的蝉歌和杨树叶子哗啦啦地对蝉歌的取笑，秋天是古殿檐头的风铃响，冬天是啄木鸟随意而空旷的啄木声。以园中的景物对应四季，春天是一径时而苍白时而黑润的小路，时而明朗时而阴晦的天上摇荡着串串杨花；夏天是一条条耀眼而灼人的石凳，或阴凉而爬满了青苔的石阶，阶下有果皮，阶上有半张被坐皱的报纸；秋天是一座青铜的大钟，在园子的西北角上曾丢弃着一座很大的铜钟，铜钟与这园子一般年纪，浑身挂满绿锈，文字已不清晰；冬天，是林中空地上几只羽毛蓬松的老麻雀。以心绪对应四季呢？春天是卧病的季节，否则人们不易发觉春天的残忍与渴望；夏天，情人们应该在这个季节里失恋，不然就似乎对不起爱情；秋天是从外面买一棵盆花回家的时候，把花搁在阔别了的家中，并且打开窗户把阳光也放进屋里，慢慢回忆慢慢整理一些发过霉的东西；冬天伴着火炉和书，一遍遍坚定不死的决心，写一些并不发出的信。还可以用艺术形式对应四季，这样春天就是一幅画，夏天是一部长篇小说，秋天是一首短歌或诗，冬天是一群雕塑。以梦呢？以梦对应四季呢？春天是树尖上的呼喊，夏天是呼喊中的细雨，秋天是细雨中的土地，冬天是干净的土地上的一只孤零的烟斗。&lt;&#x2F;p&gt;
&lt;p&gt;因为这园子，我常感恩于自己的命运。&lt;&#x2F;p&gt;
&lt;p&gt;我甚至就能清楚地看见，一旦有一天我不得不长久地离开它，我会怎样想念它，我会怎样想念它并且梦见它，我会怎样因为不敢想念它而梦也梦不到它。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;si&quot;&gt;四&lt;a class=&quot;zola-anchor&quot; href=&quot;#si&quot; aria-label=&quot;Anchor link for: si&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;让我想想，十五年中坚持到这园子来的人都是谁呢？好像只剩了我和一对老人。&lt;&#x2F;p&gt;
&lt;p&gt;十五年前，这对老人还只能算是中年夫妇，我则货真价实还是个青年。他们总是在薄暮时分来园中散步，我不大弄得清他们是从哪边的园门进来，一般来说他们是逆时针绕这园子走。男人个子很高，肩宽腿长，走起路来目不斜视，胯以上直至脖颈挺直不动；他的妻子攀了他一条胳膊走，也不能使他的上身稍有松懈。女人个子却矮，也不算漂亮，我无端地相信她必出身于家道中衰的名门富族；她攀在丈夫胳膊上像个娇弱的孩子，她向四周观望似总含着恐惧，她轻声与丈夫谈话，见有人走近就立刻怯怯地收住话头。我有时因为他们而想起冉阿让与柯赛特，但这想法并不巩固，他们一望即知是老夫老妻。两个人的穿着都算得上考究，但由于时代的演进，他们的服饰又可以称为古朴了。他们和我一样，到这园子里来几乎是风雨无阻，不过他们比我守时。我什么时间都可能来，他们则一定是在暮色初临的时候。刮风时他们穿了米色风衣，下雨时他们打了黑色的雨伞，夏天他们的衬衫是白色的裤子是黑色的或米色的，冬天他们的呢子大衣又都是黑色的，想必他们只喜欢这三种颜色。他们逆时针绕这园子一周，然后离去。他们走过我身旁时只有男人的脚步响，女人像是贴在高大的丈夫身上跟着漂移。我相信他们一定对我有印象，但是我们没有说过话，我们互相都没有想要接近的表示。十五年中，他们或许注意到一个小伙子进入了中年，我则看着一对令人羡慕的中年情侣不觉中成了两个老人。&lt;&#x2F;p&gt;
&lt;p&gt;曾有过一个热爱唱歌的小伙子，他也是每天都到这园中来，来唱歌，唱了好多年，后来不见了。他的年纪与我相仿，他多半是早晨来，唱半小时或整整唱一个上午，估计在另外的时间里他还得上班。我们经常在祭坛东侧的小路上相遇，我知道他是到东南角的高墙下去唱歌，他一定猜想我去东北角的树林里做什么。我找到我的地方，抽几口烟，便听见他谨慎地整理歌喉了。他反反复复唱那么几首歌。文化革命没过去的时候，他唱“蓝蓝的天上白云飘，白云下面马儿跑……”我老也记不住这歌的名字。文革后，他唱《货郎与小姐》中那首最为流传的咏叹调。“卖布--卖布嘞，卖布--卖布嘞！”我记得这开头的一句他唱得很有声势，在早晨清澈的空气中，货郎跑遍园中的每一个角落去恭维小姐。“我交了好运气，我交了好运气，我为幸福唱歌曲……”然后他就一遍一遍地唱，不让货郎的激情稍减。依我听来，他的技术不算精到，在关键的地方常出差错，但他的嗓子是相当不坏的，而且唱一个上午也听不出一点疲惫。太阳也不疲惫，把大树的影子缩小成一团，把疏忽大意的蚯蚓晒干在小路上，将近中午，我们又在祭坛东侧相遇，他看一看我，我看一看他，他往北去，我往南去。日子久了，我感到我们都有结识的愿望，但似乎都不知如何开口，于是互相注视一下终又都移开目光擦身而过；这样的次数一多，便更不知如何开口了。终于有一天——一个丝毫没有特点的日子，我们互相点了一下头。他说：“你好。”我说：“你好。”他说：“回去啦？”我说：“是，你呢？”他说：“我也该回去了。”我们都放慢脚步（其实我是放慢车速），想再多说几句，但仍然是不知从何说起，这样我们就都走过了对方，又都扭转身子面向对方。他说：“那就再见吧。”我说：“好，再见。”便互相笑笑各走各的路了。但是我们没有再见，那以后，园中再没了他的歌声，我才想到，那天他或许是有意与我道别的，也许他考上了哪家专业文工团或歌舞团了吧？真希望他如他歌里所唱的那样，交了好运气。&lt;&#x2F;p&gt;
&lt;p&gt;还有一些人，我还能想起一些常到这园子里来的人。有一个老头，算得一个真正的饮者；他在腰间挂一个扁瓷瓶，瓶里当然装满了酒，常来这园中消磨午后的时光。他在园中四处游逛，如果你不注意你会以为园中有好几个这样的老头，等你看过了他卓尔不群的饮酒情状，你就会相信这是个独一无二的老头。他的衣着过分随便，走路的姿态也不慎重，走上五六十米路便选定一处地方，一只脚踏在石凳上或土埂上或树墩上，解下腰间的酒瓶，解酒瓶的当儿迷起眼睛把一百八十度视角内的景物细细看一遭，然后以迅雷不及掩耳之势倒一大口酒入肚，把酒瓶摇一摇再挂向腰间，平心静气地想一会什么，便走下一个五六十米去。还有一个捕鸟的汉子，那岁月园中人少，鸟却多，他在西北角的树丛中拉一张网，鸟撞在上面，羽毛戗在网眼里便不能自拔。他单等一种过去很多而现非常罕见的鸟，其它的鸟撞在网上他就把它们摘下来放掉，他说已经有好多年没等到那种罕见的鸟，他说他再等一年看看到底还有没有那种鸟，结果他又等了好多年。早晨和傍晚，在这园子里可以看见一个中年女工程师；早晨她从北向南穿过这园子去上班，傍晚她从南向北穿过这园子回家。事实上我并不了解她的职业或者学历，但我以为她必是学理工的知识分子，别样的人很难有她那般的素朴并优雅。当她在园子穿行的时刻，四周的树林也仿佛更加幽静，清淡的日光中竟似有悠远的琴声，比如说是那曲《献给艾丽丝》才好。我没有见过她的丈夫，没有见过那个幸运的男人是什么样子，我想象过却想象不出，后来忽然懂了想象不出才好，那个男人最好不要出现。她走出北门回家去。我竟有点担心，担心她会落入厨房，不过，也许她在厨房里劳作的情景更有另外的美吧，当然不能再是《献给艾丽丝》，是个什么曲子呢？还有一个人，是我的朋友，他是个最有天赋的长跑家，但他被埋没了。他因为在文革中出言不慎而坐了几年牢，出来后好不容易找了个拉板车的工作，样样待遇都不能与别人平等，苦闷极了便练习长跑。那时他总来这园子里跑，我用手表为他计时。他每跑一圈向我招下手，我就记下一个时间。每次他要环绕这园子跑二十圈，大约两万米。他盼望以他的长跑成绩来获得政治上真正的解放，他以为记者的镜头和文字可以帮他做到这一点。第一年他在春节环城赛上跑了第十五名，他看见前十名的照片都挂在了长安街的新闻橱窗里，于是有了信心。第二年他跑了第四名，可是新闻橱窗里只挂了前三名的照片，他没灰心。第三年他跑了第七名，橱窗里挂前六名的照片，他有点怨自己。第四年他跑了第三名，橱窗里却只挂了第一名的照片。第五年他跑了第一名——他几乎绝望了，橱窗里只有一幅环城赛群众场面的照片。那些年我们俩常一起在这园子里呆到天黑，开怀痛骂，骂完沉默着回家，分手时再互相叮嘱：先别去死，再试着活一活看。他已经不跑了，年岁太大了，跑不了那么快了。最后一次参加环城赛，他以三十八岁之龄又得了第一名并破了纪录，有一位专业队的教练对他说：“我要是十年前发现你就好了。”他苦笑一下什么也没说，只在傍晚又来这园中找到我，把这事平静地向我叙说一遍。不见他已有好几年了，他和妻子和儿子住在很远的地方。&lt;&#x2F;p&gt;
&lt;p&gt;这些人都不到园子里来了，园子里差不多完全换了一批新人。十五年前的旧人，就剩我和那对老夫老妻了。有那么一段时间，这老夫老妻中的一个也忽然不来，薄暮时分唯男人独自来散步，步态也明显迟缓了许多，我悬心了很久，怕是那女人出了什么事。幸好过了一个冬天那女人又来了，两个人仍是逆时针绕着园子走，一长一短两个身影恰似钟表的两支指针；女人的头发白了许多，但依旧攀着丈夫的胳膊走得像个孩子。“攀”这个字用得不恰当了，或许可以用“搀”吧，不知有没有兼具这两个意思的字。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wu&quot;&gt;五&lt;a class=&quot;zola-anchor&quot; href=&quot;#wu&quot; aria-label=&quot;Anchor link for: wu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;我也没有忘记一个孩子——一个漂亮而不幸的小姑娘。十五年前的那个下午，我第一次到这园子里来就看见了她，那时她大约三岁，蹲在斋宫西边的小路上捡树上掉落的“小灯笼”。那儿有几棵大栾树，春天开一簇簇细小而稠密的黄花，花落了便结出无数如同三片叶子合抱的小灯笼，小灯笼先是绿色，继尔转白，再变黄，成熟了掉落得满地都是。小灯笼精巧得令人爱惜，成年人也不免捡了一个还要捡一个。小姑娘咿咿呀呀地跟自己说着话，一边捡小灯笼；她的嗓音很好，不是她那个年龄所常有的那般尖细，而是很圆润甚或是厚重，也许是因为那个下午园子里太安静了。我奇怪这么小的孩子怎么一个人跑来这园子里？我问她住在哪儿？她随便指一下，就喊她的哥哥，沿墙根一带的茂草之中便站起一个七八岁的男孩，朝我望望，看我不像坏人便对他的妹妹说：“我在这儿呢”，又伏下身去，他在捉什么虫子。他捉到螳螂，蚂蚱，知了和蜻蜓，来取悦他的妹妹。有那么两三年，我经常在那几棵大栾树下见到他们，兄妹俩总是在一起玩，玩得和睦融洽，都渐渐长大了些。之后有很多年没见到他们。我想他们都在学校里吧，小姑娘也到了上学的年龄，必是告别了孩提时光，没有很多机会来这儿玩了。这事很正常，没理由太搁在心上，若不是有一年我又在园中见到他们，肯定就会慢慢把他们忘记。&lt;&#x2F;p&gt;
&lt;p&gt;那是个礼拜日的上午。那是个晴朗而令人心碎的上午，时隔多年，我竟发现那个漂亮的小姑娘原来是个弱智的孩子。我摇着车到那几棵大栾树下去，恰又是遍地落满了小灯笼的季节；当时我正为一篇小说的结尾所苦，既不知为什么要给它那样一个结尾，又不知何以忽然不想让它有那样一个结尾，于是从家里跑出来，想依靠着园中的镇静，看看是否应该把那篇小说放弃。我刚刚把车停下，就见前面不远处有几个人在戏耍一个少女，作出怪样子来吓她，又喊又笑地追逐她拦截她，少女在几棵大树间惊惶地东跑西躲，却不松手揪卷在怀里的裙裾，两条腿袒露着也似毫无察觉。我看出少女的智力是有些缺陷，却还没看出她是谁。我正要驱车上前为少女解围，就见远处飞快地骑车来了个小伙子，于是那几个戏耍少女的家伙望风而逃。小伙子把自行车支在少女近旁，怒目望着那几个四散逃窜的家伙，一声不吭喘着粗气。脸色如暴雨前的天空一样一会比一会苍白。这时我认出了他们，小伙子和少女就是当年那对小兄妹。我几乎是在心里惊叫了一声，或者是哀号。世上的事常常使上帝的居心变得可疑。小伙子向他的妹妹走去。少女松开了手，裙裾随之垂落了下来，很多很多她捡的小灯笼便洒落了一地，铺散在她脚下。她仍然算得漂亮，但双眸迟滞没有光彩。她呆呆地望那群跑散的家伙，望着极目之处的空寂，凭她的智力绝不可能把这个世界想明白吧？大树下，破碎的阳光星星点点，风把遍地的小灯笼吹得滚动，仿佛暗哑地响着无数小铃铛。哥哥把妹妹扶上自行车后座，带着她无言地回家去了。&lt;&#x2F;p&gt;
&lt;p&gt;无言是对的。要是上帝把漂亮和弱智这两样东西都给了这个小姑娘，就只有无言和回家去是对的。&lt;&#x2F;p&gt;
&lt;p&gt;谁又能把这世界想个明白呢？世上的很多事是不堪说的。你可以抱怨上帝何以要降诸多苦难给这人间，你也可以为消灭种种苦难而奋斗，并为此享有崇高与骄傲，但只要你再多想一步你就会坠入深深的迷茫了：假如世界上没有了苦难，世界还能够存在么？要是没有愚钝，机智还有什么光荣呢？要是没了丑陋，漂亮又怎么维系自己的幸运？要是没有了恶劣和卑下，善良与高尚又将如何界定自己又如何成为美德呢？要是没有了残疾，健全会否因其司空见惯而变得腻烦和乏味呢？我常梦想着在人间彻底消灭残疾，但可以相信，那时将由患病者代替残疾人去承担同样的苦难。如果能够把疾病也全数消灭，那么这份苦难又将由（比如说）像貌丑陋的人去承担了。就算我们连丑陋，连愚昧和卑鄙和一切我们所不喜欢的事物和行为，也都可以统统消灭掉，所有的人都一味健康、漂亮、聪慧、高尚，结果会怎样呢？怕是人间的剧目就全要收场了，一个失去差别的世界将是一条死水，是一块没有感觉没有肥力的沙漠。&lt;&#x2F;p&gt;
&lt;p&gt;看来差别永远是要有的。看来就只好接受苦难——人类的全部剧目需要它，存在的本身需要它。看来上帝又一次对了。&lt;&#x2F;p&gt;
&lt;p&gt;于是就有一个最令人绝望的结论等在这里：由谁去充任那些苦难的角色？又有谁去体现这世间的幸福，骄傲和快乐？只好听凭偶然，是没有道理好讲的。&lt;&#x2F;p&gt;
&lt;p&gt;就命运而言，休论公道。&lt;&#x2F;p&gt;
&lt;p&gt;那么，一切不幸命运的救赎之路在哪里呢？设若智慧的悟性可以引领我们去找到救赎之路，难道所有的人都能够获得这样的智慧和悟性吗？&lt;&#x2F;p&gt;
&lt;p&gt;我常以为是丑女造就了美人。我常以为是愚氓举出了智者。我常以为是懦夫衬照了英雄。我常以为是众生度化了佛祖。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;liu&quot;&gt;六&lt;a class=&quot;zola-anchor&quot; href=&quot;#liu&quot; aria-label=&quot;Anchor link for: liu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;设若有一位园神，他一定早已注意到了，这么多年我在这园里坐着，有时候是轻松快乐的，有时候是沉郁苦闷的，有时候优哉游哉，有时候恓惶落寞，有时候平静而且自信，有时候又软弱，又迷茫。其实总共只有三个问题交替着来骚扰我，来陪伴我。第一个是要不要去死？第二个是为什么活？第三个，我干嘛要写作？&lt;&#x2F;p&gt;
&lt;p&gt;让我看看，它们迄今都是怎样编织在一起的吧。&lt;&#x2F;p&gt;
&lt;p&gt;你说，你看穿了死是一件无需乎着急去做的事，是一件无论怎样耽搁也不会错过的事，便决定活下去试试？是的，至少这是很关键的因素。为什么要活下去试试呢？好像仅仅是因为不甘心，机会难得，不试白不试，腿反正是完了，一切仿佛都要完了，但死神很守信用，试一试不会额外再有什么损失。说不定倒有额外的好处呢是不是？我说过，这一来我轻松多了，自由多了。为什么要写作呢？作家是两个被人看重的字，这谁都知道。为了让那个躲在园子深处坐轮椅的人，有朝一日在别人眼里也稍微有点光彩，在众人眼里也能有个位置，哪怕那时再去死呢也就多少说得过去了，开始的时候就是这样想，这不用保密，这些已经不用保密了。&lt;&#x2F;p&gt;
&lt;p&gt;我带着本子和笔，到园中找一个最不为人打扰的角落，偷偷地写。那个爱唱歌的小伙子在不远的地方一直唱。要是有人走过来，我就把本子合上把笔叼在嘴里。我怕写不成反落得尴尬。我很要面子。可是你写成了，而且发表了。人家说我写的还不坏，他们甚至说：真没想到你写得这么好。我心说你们没想到的事还多着呢。我确实有整整一宿高兴得没合眼。我很想让那个唱歌的小伙子知道，因为他的歌也毕竟是唱得不错。我告诉我的长跑家朋友的时候，那个中年女工程师正优雅地在园中穿行；长跑家很激动，他说好吧，我玩命跑，你玩命写。这一来你中了魔了，整天都在想哪一件事可以写，哪一个人可以让你写成小说。是中了魔了，我走到哪儿想到哪儿，在人山人海里只寻找小说，要是有一种小说试剂就好了，见人就滴两滴看他是不是一篇小说，要是有一种小说显影液就好了，把它泼满全世界看看都是哪儿有小说，中了魔了，那时我完全是为了写作活着。结果你又发表了几篇，并且出了一点小名，可这时你越来越感到恐慌。我忽然觉得自己活得像个人质，刚刚有点像个人了却又过了头，像个人质，被一个什么阴谋抓了来当人质，不定哪天被处决，不定哪天就完蛋。你担心要不了多久你就会文思枯竭，那样你就又完了。凭什么我总能写出小说来呢？凭什么那些适合作小说的生活素材就总能送到一个截瘫者跟前来呢？人家满世界跑都有枯竭的危险，而我坐在这园子里凭什么可以一篇接一篇地写呢？你又想到死了。我想见好就收吧。当一名人质实在是太累了太紧张了，太朝不保夕了。我为写作而活下来，要是写作到底不是我应该干的事，我想我再活下去是不是太冒傻气了？你这么想着你却还在绞尽脑汁地想写。我好歹又拧出点水来，从一条快要晒干的毛巾上。恐慌日甚一日，随时可能完蛋的感觉比完蛋本身可怕多了，所谓怕贼偷就怕贼惦记，我想人不如死了好，不如不出生的好，不如压根儿没有这个世界的好。可你并没有去死。我又想到那是一件不必着急的事。可是不必着急的事并不证明是一件必要拖延的事呀？你总是决定活下来，这说明什么？是的，我还是想活。人为什么活着？因为人想活着，说到底是这么回事，人真正的名字叫作：欲望。可我不怕死，有时候我真的不怕死。有时候，——说对了。不怕死和想去死是两回事，有时候不怕死的人是有的，一生下来就不怕死的人是没有的。我有时候倒是怕活。可是怕活不等于不想活呀？可我为什么还想活呢？因为你还想得到点什么、你觉得你还是可以得到点什么的，比如说爱情，比如说，价值之类，人真正的名字叫欲望。这不对吗？我不该得到点什么吗？没说不该。可我为什么活得恐慌，就像个人质？后来你明白了，你明白你错了，活着不是为了写作，而写作是为了活着。你明白了这一点是在一个挺滑稽的时刻。那天你又说你不如死了好，你的一个朋友劝你：你不能死，你还得写呢，还有好多好作品等着你去写呢。这时候你忽然明白了，你说：只是因为我活着，我才不得不写作。或者说只是因为你还想活下去，你才不得不写作。是的，这样说过之后我竟然不那么恐慌了。就像你看穿了死之后所得的那份轻松？一个人质报复一场阴谋的最有效的办法是把自己杀死。我看出我得先把我杀死在市场上，那样我就不用参加抢购题材的风潮了。你还写吗？还写。你真的不得不写吗？人都忍不住要为生存找一些牢靠的理由。你不担心你会枯竭了？我不知道，不过我想，活着的问题在死前是完不了的。&lt;&#x2F;p&gt;
&lt;p&gt;这下好了，您不再恐慌了不再是个人质了，您自由了。算了吧你，我怎么可能自由呢？别忘了人真正的名字是：欲望。所以您得知道，消灭恐慌的最有效的办法就是消灭欲望。可是我还知道，消灭人性的最有效的办法也是消灭欲望。那么，是消灭欲望同时也消灭恐慌呢？还是保留欲望同时也保留人生？&lt;&#x2F;p&gt;
&lt;p&gt;我在这园子里坐着，我听见园神告诉我，每一个有激情的演员都难免是一个人质。每一个懂得欣赏的观众都巧妙地粉碎了一场阴谋。每一个乏味的演员都是因为他老以为这戏剧与自己无关。每一个倒霉的观众都是因为他总是坐得离舞台太近了。&lt;&#x2F;p&gt;
&lt;p&gt;我在这园子里坐着，园神成年累月地对我说：孩子，这不是别的，这是你的罪孽和福祉。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi&quot;&gt;七&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi&quot; aria-label=&quot;Anchor link for: qi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;要是有些事我没说，地坛，你别以为是我忘了，我什么也没忘，但是有些事只适合收藏。不能说，也不能想，却又不能忘。它们不能变成语言，它们无法变成语言，一旦变成语言就不再是它们了。它们是一片朦胧的温馨与寂寥，是一片成熟的希望与绝望，它们的领地只有两处：心与坟墓。比如说邮票，有些是用于寄信的，有些仅仅是为了收藏。&lt;&#x2F;p&gt;
&lt;p&gt;如今我摇着车在这园子里慢慢走，常常有一种感觉，觉得我一个人跑出来已经玩得太久了。有一天我整理我的旧像册，一张十几年前我在这园子里照的照片——那个年轻人坐在轮椅上，背后是一棵老柏树，再远处就是那座古祭坛。我便到园子里去找那棵树。我按着照片上的背景找很快就找到了它，按着照片上它枝干的形状找，肯定那就是它。但是它已经死了，而且在它身上缠绕着一条碗口粗的藤萝。有一天我在这园子碰见一个老太太，她说：“哟，你还在这儿哪？”她问我：“你母亲还好吗？”“您是谁？”“你不记得我，我可记得你。有一回你母亲来这儿找你，她问我您看没看见一个摇轮椅的孩子？……”我忽然觉得，我一个人跑到这世界上来真是玩得太久了。有一天夜晚，我独自坐在祭坛边的路灯下看书，忽然从那漆黑的祭坛里传出一阵阵唢呐声；四周都是参天古树，方形祭坛占地几百平米空旷坦荡独对苍天，我看不见那个吹唢呐的人，唯唢呐声在星光寥寥的夜空里低吟高唱，时而悲怆时而欢快，时而缠绵时而苍凉，或许这几个词都不足以形容它，我清清醒醒地听出它响在过去，一直在响，回旋飘转亘古不散。&lt;&#x2F;p&gt;
&lt;p&gt;必有一天，我会听见喊我回去。&lt;&#x2F;p&gt;
&lt;p&gt;那时您可以想象一个孩子，他玩累了可他还没玩够呢。心里好些新奇的念头甚至等不及到明天。也可以想象是一个老人，无可置疑地走向他的安息地，走得任劳任怨。还可以想象一对热恋中的情人，互相一次次说“我一刻也不想离开你”，又互相一次次说“时间已经不早了”。时间不早了可我一刻也不想离开你，一刻也不想离开你可时间毕竟是不早了。&lt;&#x2F;p&gt;
&lt;p&gt;我说不好我想不想回去。我说不好是想还是不想，还是无所谓。我说不好我是像那个孩子，还是像那个老人，还是像一个热恋中的情人。很可能是这样：我同时是他们三个。我来的时候是个孩子，他有那么多孩子气的念头所以才哭着喊着闹着要来；他一来一见到这个世界便立刻成了不要命的情人；而对一个情人来说，不管多么漫长的时光也是稍纵即逝，那时他便明白，每一步每一步，其实一步步都是走在回去的路上。当牵牛花初开的时节，葬礼的号角就已吹响。&lt;&#x2F;p&gt;
&lt;p&gt;但是太阳，他每时每刻都是夕阳也都是旭日。当他熄灭着走下山去收尽苍凉残照之际，正是他在另一面燃烧着爬上山巅布散烈烈朝辉之时。那一天，我也将沉静着走下山去，扶着我的拐杖。有一天，在某一处山洼里，势必会跑上来一个欢蹦的孩子，抱着他的玩具。&lt;&#x2F;p&gt;
&lt;p&gt;当然，那不是我。&lt;&#x2F;p&gt;
&lt;p&gt;但是，那不是我吗？&lt;&#x2F;p&gt;
&lt;p&gt;宇宙以其不息的欲望将一个歌舞炼为永恒。这欲望有怎样一个人间的姓名，大可忽略不计。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>故鄉 - 魯迅</title>
		<published>2021-08-14T00:00:00+00:00</published>
		<updated>2021-08-14T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example4/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example4/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example4/">&lt;p&gt;我冒了嚴寒，回到相隔二千餘里，別了二十餘年的故鄉去。&lt;&#x2F;p&gt;
&lt;p&gt;時候既然是深冬；漸近故鄉時，天氣又陰晦了，冷風吹進船艙中，嗚嗚的響，從蓬隙向外一望，蒼黃的天底下，遠近橫著幾個蕭索的荒村，沒有一些活氣。我的心禁不住悲涼起來了。&lt;&#x2F;p&gt;
&lt;p&gt;阿！這不是我二十年來時時記得的故鄉？&lt;&#x2F;p&gt;
&lt;p&gt;我所記得的故鄉全不如此。我的故鄉好得多了。但要我記起他的美麗，說出他的佳處來，卻又沒有影像，沒有言辭了。仿佛也就如此。於是我自己解釋說：故鄉本也如此，——雖然沒有進步，也未必有如我所感的悲涼，這只是我自己心情的改變罷了，因為我這次回鄉，本沒有什麼好心緒。&lt;&#x2F;p&gt;
&lt;p&gt;我這次是專為了別他而來的。我們多年聚族而居的老屋，已經公同賣給別姓了，交屋的期限，只在本年，所以必須趕在正月初一以前，永別了熟識的老屋，而且遠離了熟識的故鄉，搬家到我在謀食的異地去。&lt;&#x2F;p&gt;
&lt;p&gt;第二日清早晨我到了我家的門口了。瓦楞上許多枯草的斷莖當風抖著，正在說明這老屋難免易主的原因。幾房的本家大約已經搬走了，所以很寂靜。我到了自家的房外，我的母親早已迎著出來了，接著便飛出了八歲的侄兒宏兒。&lt;&#x2F;p&gt;
&lt;p&gt;我的母親很高興，但也藏著許多淒涼的神情，教我坐下，歇息，喝茶，且不談搬家的事。宏兒沒有見過我，遠遠的對面站著只是看。&lt;&#x2F;p&gt;
&lt;p&gt;但我們終於談到搬家的事。我說外間的寓所已經租定了，又買了幾件傢具，此外須將家裡所有的木器賣去，再去增添。母親也說好，而且行李也略已齊集，木器不便搬運的，也小半賣去了，只是收不起錢來。&lt;&#x2F;p&gt;
&lt;p&gt;「你休息一兩天，去拜望親戚本家一回，我們便可以走了。」母親說。&lt;&#x2F;p&gt;
&lt;p&gt;「是的。」&lt;&#x2F;p&gt;
&lt;p&gt;「還有閏土，他每到我家來時，總問起你，很想見你一回面。我已經將你到家的大約日期通知他，他也許就要來了。」&lt;&#x2F;p&gt;
&lt;p&gt;這時候，我的腦裡忽然閃出一幅神異的圖畫來：深藍的天空中掛著一輪金黃的圓月，下面是海邊的沙地，都種著一望無際的碧綠的西瓜，其間有一個十一二歲的少年，項帶銀圈，手捏一柄鋼叉，向一匹猹盡力的刺去，那猹卻將身一扭，反從他的胯下逃走了。&lt;&#x2F;p&gt;
&lt;p&gt;這少年便是閏土。我認識他時，也不過十多歲，離現在將有三十年了；那時我的父親還在世，家景也好，我正是一個少爺。那一年，我家是一件大祭祀的值年。這祭祀，說是三十多年才能輪到一回，所以很鄭重；正月裡供祖像，供品很多，祭器很講究，拜的人也很多，祭器也很要防偷去。我家只有一個忙月（我們這裡給人做工的分三種：整年給一定人家做工的叫長工；按日給人做工的叫短工；自己也種地，只在過年過節以及收租時候來給一定人家做工的稱忙月），忙不過來，他便對父親說，可以叫他的兒子閏土來管祭器的。&lt;&#x2F;p&gt;
&lt;p&gt;我的父親允許了；我也很高興，因為我早聽到閏土這名字，而且知道他和我仿佛年紀，閏月生的，五行缺土，所以他的父親叫他閏土。他是能裝弶捉小鳥雀的。&lt;&#x2F;p&gt;
&lt;p&gt;我於是日日盼望新年，新年到，閏土也就到了。好容易到了年末，有一日，母親告訴我，閏土來了，我便飛跑的去看。他正在廚房裡，紫色的圓臉，頭戴一頂小氈帽，頸上套一個明晃晃的銀項圈，這可見他的父親十分愛他，怕他死去，所以在神佛面前許下願心，用圈子將他套住了。他見人很怕羞，只是不怕我，沒有旁人的時候，便和我說話，於是不到半日，我們便熟識了。&lt;&#x2F;p&gt;
&lt;p&gt;我們那時候不知道談些什麼，只記得閏土很高興，說是上城之後，見了許多沒有見過的東西。&lt;&#x2F;p&gt;
&lt;p&gt;第二日，我便要他捕鳥。他說：&lt;&#x2F;p&gt;
&lt;p&gt;“這不能。須大雪下了才好。我們沙地上，下了雪，我掃出一塊空地來，用短棒支起一個大竹匾，撒下秕穀，看鳥雀來吃時，我遠遠地將縛在棒上的繩子只一拉，那鳥雀就罩在竹匾下了。什麼都有：稻雞，角雞，鵓鴣，藍背……”&lt;&#x2F;p&gt;
&lt;p&gt;我於是又很盼望下雪。&lt;&#x2F;p&gt;
&lt;p&gt;閏土又對我說：&lt;&#x2F;p&gt;
&lt;p&gt;“現在太冷，你夏天到我們這裡來。我們日裡到海邊撿貝殼去，紅的綠的都有，鬼見怕也有，觀音手也有。晚上我和爹管西瓜去，你也去。”&lt;&#x2F;p&gt;
&lt;p&gt;“管賊麽？”&lt;&#x2F;p&gt;
&lt;p&gt;“不是。走路的人口渴了摘一個瓜吃，我們這裡是不算偷的。要管的是獾豬，刺蝟，猹。月亮底下，你聽，啦啦的響了，猹在咬瓜了。你便捏了胡叉，輕輕地走去……”&lt;&#x2F;p&gt;
&lt;p&gt;我那時並不知道這所謂猹的是怎麼一件東西——便是現在也沒有知道——只是無端的覺得狀如小狗而很兇猛。&lt;&#x2F;p&gt;
&lt;p&gt;“他不咬人麽？”&lt;&#x2F;p&gt;
&lt;p&gt;“有胡叉呢。走到了，看見猹了，你便刺。這畜生很伶俐，倒向你奔來，反從胯下竄了。他的皮毛是油一般的滑……”&lt;&#x2F;p&gt;
&lt;p&gt;我素不知道天下有這許多新鮮事：海邊有如許五色的貝殼；西瓜有這樣危險的經歷，我先前單知道他在水果店裡出賣罷了。&lt;&#x2F;p&gt;
&lt;p&gt;“我們沙地裡，潮汛要來的時候，就有許多跳魚兒只是跳，都有青蛙似的兩個腳……”&lt;&#x2F;p&gt;
&lt;p&gt;阿！閏土的心裡有無窮無盡的希奇的事，都是我往常的朋友所不知道的。他們不知道一些事，閏土在海邊時，他們都和我一樣只看見院子裡高牆上的四角的天空。&lt;&#x2F;p&gt;
&lt;p&gt;可惜正月過去了，閏土須回家裡去，我急得大哭，他也躲到廚房裡，哭著不肯出門，但終於被他父親帶走了。他後來還托他的父親帶給我一包貝殼和幾支很好看的鳥毛，我也曾送他一兩次東西，但從此沒有再見面。&lt;&#x2F;p&gt;
&lt;p&gt;現在我的母親提起了他，我這兒時的記憶，忽而全都閃電似的蘇生過來，似乎看到了我的美麗的故鄉了。我應聲說：&lt;&#x2F;p&gt;
&lt;p&gt;“這好極！他，——怎樣？……”&lt;&#x2F;p&gt;
&lt;p&gt;“他？……他景況也很不如意……”母親說著，便向房外看，“這些人又來了。說是買木器，順手也就隨便拿走的，我得去看看。”&lt;&#x2F;p&gt;
&lt;p&gt;母親站起身，出去了。門外有幾個女人的聲音。我便招宏兒走近面前，和他閑話：問他可會寫字，可願意出門。&lt;&#x2F;p&gt;
&lt;p&gt;“我們坐火車去麽？”&lt;&#x2F;p&gt;
&lt;p&gt;“我們坐火車去。”&lt;&#x2F;p&gt;
&lt;p&gt;“船呢？”&lt;&#x2F;p&gt;
&lt;p&gt;“先坐船，……”&lt;&#x2F;p&gt;
&lt;p&gt;“哈！這模樣了！鬍子這麼長了！”一種尖利的怪聲突然大叫起來。&lt;&#x2F;p&gt;
&lt;p&gt;我吃了一嚇，趕忙抬起頭，卻見一個凸顴骨、薄嘴唇、五十歲上下的女人站在我面前，兩手搭在髀間，沒有繫裙，張著兩腳，正像一個畫圖儀器裡細腳伶仃的圓規。&lt;&#x2F;p&gt;
&lt;p&gt;我愕然了。&lt;&#x2F;p&gt;
&lt;p&gt;“不認識了麽？我還抱過你咧！”&lt;&#x2F;p&gt;
&lt;p&gt;我愈加愕然了。幸而我的母親也就進來，從旁說：&lt;&#x2F;p&gt;
&lt;p&gt;“他多年出門，統忘卻了。你該記得罷，”便向著我說，“這是斜對門的楊二嫂，……開豆腐店的。”&lt;&#x2F;p&gt;
&lt;p&gt;哦，我記得了。我孩子時候，在斜對門的豆腐店裡確乎終日坐著一個楊二嫂，人都叫伊“豆腐西施”。但是擦著白粉，顴骨沒有這麼高，嘴唇也沒有這麼薄，而且終日坐著，我也從沒有見過這圓規式的姿勢。那時人說：因為伊，這豆腐店的買賣非常好。但這大約因為年齡的關係，我卻並未蒙著一毫感化，所以竟完全忘卻了。然而圓規很不平，顯出鄙夷的神色，仿佛嗤笑法國人不知道拿破侖，美國人不知道華盛頓似的，冷笑說：&lt;&#x2F;p&gt;
&lt;p&gt;“忘了？這真是貴人眼高……”&lt;&#x2F;p&gt;
&lt;p&gt;“那有這事……我……”我惶恐著，站起來說。&lt;&#x2F;p&gt;
&lt;p&gt;“那麼，我對你說。迅哥兒，你闊了，搬動又笨重，你還要什麼這些破爛木器，讓我拿去罷。我們小戶人家，用得著。”&lt;&#x2F;p&gt;
&lt;p&gt;“我並沒有闊哩。我須賣了這些，再去……”&lt;&#x2F;p&gt;
&lt;p&gt;“阿呀呀，你放了道台了，還說不闊？你現在有三房姨太太；出門便是八抬的大轎，還說不闊？嚇，什麼都瞞不過我。”&lt;&#x2F;p&gt;
&lt;p&gt;我知道無話可說了，便閉了口，默默的站著。&lt;&#x2F;p&gt;
&lt;p&gt;“阿呀阿呀，真是愈有錢，便愈是一毫不肯放鬆，愈是一毫不肯放鬆，便愈有錢……”圓規一面憤憤的迴轉身，一面絮絮的說，慢慢向外走，順便將我母親的一副手套塞在褲腰裡，出去了。&lt;&#x2F;p&gt;
&lt;p&gt;此後又有近處的本家和親戚來訪問我。我一面應酬，偷空便收拾些行李，這樣的過了三四天。&lt;&#x2F;p&gt;
&lt;p&gt;一日是天氣很冷的午後，我吃過午飯，坐著喝茶，覺得外面有人進來了，便回頭去看。我看時，不由的非常出驚，慌忙站起身，迎著走去。&lt;&#x2F;p&gt;
&lt;p&gt;這來的便是閏土。雖然我一見便知道是閏土，但又不是我這記憶上的閏土了。他身材增加了一倍；先前的紫色的圓臉，已經變作灰黃，而且加上了很深的皺紋；眼睛也像他父親一樣，周圍都腫得通紅，這我知道，在海邊種地的人，終日吹著海風，大抵是這樣的。他頭上是一頂破氈帽，身上只一件極薄的棉衣，渾身瑟索著；手裡提著一個紙包和一支長煙管，那手也不是我所記得的紅活圓實的手，卻又粗又笨而且開裂，像是松樹皮了。&lt;&#x2F;p&gt;
&lt;p&gt;我這時很興奮，但不知道怎麼說才好，只是說：&lt;&#x2F;p&gt;
&lt;p&gt;“阿！閏土哥，——你來了？……”&lt;&#x2F;p&gt;
&lt;p&gt;我接著便有許多話，想要連珠一般湧出：角雞，跳魚兒，貝殼，猹，……但又總覺得被什麼擋著似的，單在腦裡面迴旋，吐不出口外去。&lt;&#x2F;p&gt;
&lt;p&gt;他站住了，臉上現出歡喜和淒涼的神情；動著嘴唇，卻沒有作聲。他的態度終於恭敬起來了，分明的叫道：&lt;&#x2F;p&gt;
&lt;p&gt;“老爺！……”&lt;&#x2F;p&gt;
&lt;p&gt;我似乎打了一個寒噤；我就知道，我們之間已經隔了一層可悲的厚障壁了。我也說不出話。&lt;&#x2F;p&gt;
&lt;p&gt;他回過頭去說，“水生，給老爺磕頭。”便拖出躲在背後的孩子來，這正是一個廿年前的閏土，只是黃瘦些，頸子上沒有銀圈罷了。“這是第五個孩子，沒有見過世面，躲躲閃閃……”&lt;&#x2F;p&gt;
&lt;p&gt;母親和宏兒下樓來了，他們大約也聽到了聲音。&lt;&#x2F;p&gt;
&lt;p&gt;“老太太。信是早收到了。我實在喜歡的不得了，知道老爺回來……”閏土說。&lt;&#x2F;p&gt;
&lt;p&gt;“阿，你怎的這樣客氣起來。你們先前不是哥弟稱呼麽？還是照舊：迅哥兒。”母親高興的說。&lt;&#x2F;p&gt;
&lt;p&gt;“阿呀，老太太真是……這成什麼規矩。那時是孩子，不懂事……”閏土說著，又叫水生上來打拱，那孩子卻害羞，緊緊的只貼在他背後。&lt;&#x2F;p&gt;
&lt;p&gt;“他就是水生？第五個？都是生人，怕生也難怪的；還是宏兒和他去走走。”母親說。&lt;&#x2F;p&gt;
&lt;p&gt;宏兒聽得這話，便來招水生，水生卻鬆鬆爽爽同他一路出去了。母親叫閏土坐，他遲疑了一回，終於就了坐，將長煙管靠在桌旁，遞過紙包來，說：&lt;&#x2F;p&gt;
&lt;p&gt;“冬天沒有什麼東西了。這一點乾青豆倒是自家曬在那裡的，請老爺……”&lt;&#x2F;p&gt;
&lt;p&gt;我問問他的景況。他只是搖頭。&lt;&#x2F;p&gt;
&lt;p&gt;“非常難。第六個孩子也會幫忙了，卻總是吃不夠……又不太平……什麼地方都要錢，沒有規定……收成又壞。種出東西來，挑去賣，總要捐幾回錢，折了本；不去賣，又只能爛掉……”&lt;&#x2F;p&gt;
&lt;p&gt;他只是搖頭；臉上雖然刻著許多皺紋，卻全然不動，仿佛石像一般。他大約只是覺得苦，卻又形容不出，沉默了片時，便拿起煙管來默默的吸煙了。&lt;&#x2F;p&gt;
&lt;p&gt;母親問他，知道他的家裡事務忙，明天便得回去；又沒有吃過午飯，便叫他自己到廚下炒飯吃去。&lt;&#x2F;p&gt;
&lt;p&gt;他出去了；母親和我都嘆息他的景況：多子，饑荒，苛稅，兵，匪，官，紳，都苦得他像一個木偶人了。母親對我說，凡是不必搬走的東西，盡可以送他，可以聽他自己去揀擇。&lt;&#x2F;p&gt;
&lt;p&gt;下午，他揀好了幾件東西：兩條長桌，四個椅子，一副香爐和燭臺，一桿抬秤。他又要所有的草灰（我們這裡煮飯是燒稻草的，那灰，可以做沙地的肥料），待我們啟程的時候，他用船來載去。&lt;&#x2F;p&gt;
&lt;p&gt;夜間，我們又談些閑天，都是無關緊要的話；第二天早晨，他就領了水生回去了。&lt;&#x2F;p&gt;
&lt;p&gt;又過了九日，是我們啟程的日期。閏土早晨便到了，水生沒有同來，卻只帶著一個五歲的女兒管船隻。我們終日很忙碌，再沒有談天的工夫。來客也不少，有送行的，有拿東西的，有送行兼拿東西的。待到傍晚我們上船的時候，這老屋裡的所有破舊大小粗細東西，已經一掃而空了。&lt;&#x2F;p&gt;
&lt;p&gt;我們的船向前走，兩岸的青山在黃昏中，都裝成了深黛顏色，連著退向船後梢去。&lt;&#x2F;p&gt;
&lt;p&gt;宏兒和我靠著船窗，同看外面模糊的風景，他忽然問道：&lt;&#x2F;p&gt;
&lt;p&gt;“大伯！我們什麼時候回來？”&lt;&#x2F;p&gt;
&lt;p&gt;“回來？你怎麼還沒有走就想回來了。”&lt;&#x2F;p&gt;
&lt;p&gt;“可是，水生約我到他家玩去咧……”他睜著大的黑眼睛，癡癡的想。&lt;&#x2F;p&gt;
&lt;p&gt;我和母親也都有些惘然，於是又提起閏土來。母親說，那豆腐西施的楊二嫂，自從我家收拾行李以來，本是每日必到的，前天伊在灰堆裡，掏出十多個碗碟來，議論之後，便定說是閏土埋著的，他可以在運灰的時候，一齊搬回家裡去；楊二嫂發見了這件事，自己很以為功，便拿了那狗氣殺（這是我們這裡養雞的器具，木盤上面有著柵欄，內盛食料，雞可以伸進頸子去啄，狗卻不能，只能看著氣死），飛也似的跑了，虧伊裝著這麼高低的小腳，竟跑得這樣快。&lt;&#x2F;p&gt;
&lt;p&gt;老屋離我愈遠了；故鄉的山水也都漸漸遠離了我，但我卻並不感到怎樣的留戀。我只覺得我四面有看不見的高牆，將我隔成孤身，使我非常氣悶；那西瓜地上的銀項圈的小英雄的影像，我本來十分清楚，現在卻忽地模糊了，又使我非常的悲哀。&lt;&#x2F;p&gt;
&lt;p&gt;母親和宏兒都睡著了。&lt;&#x2F;p&gt;
&lt;p&gt;我躺著，聽船底潺潺的水聲，知道我在走我的路。我想：我竟與閏土隔絕到這地步了，但我們的後輩還是一氣，宏兒不是正在想念水生麽。我希望他們不再像我，又大家隔膜起來……然而我又不願意他們因為要一氣，都如我的辛苦展轉而生活，也不願意他們都如閏土的辛苦麻木而生活，也不願意都如別人的辛苦恣睢而生活。他們應該有新的生活，為我們所未經生活過的。&lt;&#x2F;p&gt;
&lt;p&gt;我想到希望，忽然害怕起來了。閏土要香爐和燭臺的時候，我還暗地裡笑他，以為他總是崇拜偶像，什麼時候都不忘卻。現在我所謂希望，不也是我自己手製的偶像麽？只是他的願望切近，我的願望茫遠罷了。&lt;&#x2F;p&gt;
&lt;p&gt;我在朦朧中，眼前展開一片海邊碧綠的沙地來，上面深藍的天空中掛著一輪金黃的圓月。我想：希望本是無所謂有，無所謂無的。這正如地上的路；其實地上本沒有路，走的人多了，也便成了路。&lt;&#x2F;p&gt;
&lt;p&gt;一九二一年一月&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>羅生門 - 芥川龍之介</title>
		<published>2021-05-11T00:00:00+00:00</published>
		<updated>2021-05-11T00:00:00+00:00</updated>
		<link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/serene/posts/example2/"/>
		<id>https://salif.github.io/zola-themes-collection/demo/serene/posts/example2/</id>
    
		<content type="html" xml:base="https://salif.github.io/zola-themes-collection/demo/serene/posts/example2/">&lt;p&gt;ある日の暮方の事である。一人の下人げにんが、羅生門らしょうもんの下で雨やみを待っていた。&lt;&#x2F;p&gt;
&lt;p&gt;広い門の下には、この男のほかに誰もいない。ただ、所々丹塗にぬりの剥はげた、大きな円柱まるばしらに、蟋蟀きりぎりすが一匹とまっている。羅生門が、朱雀大路すざくおおじにある以上は、この男のほかにも、雨やみをする市女笠いちめがさや揉烏帽子もみえぼしが、もう二三人はありそうなものである。それが、この男のほかには誰もいない。&lt;&#x2F;p&gt;
&lt;p&gt;何故かと云うと、この二三年、京都には、地震とか辻風つじかぜとか火事とか饑饉とか云う災わざわいがつづいて起った。そこで洛中らくちゅうのさびれ方は一通りではない。旧記によると、仏像や仏具を打砕いて、その丹にがついたり、金銀の箔はくがついたりした木を、路ばたにつみ重ねて、薪たきぎの料しろに売っていたと云う事である。洛中がその始末であるから、羅生門の修理などは、元より誰も捨てて顧る者がなかった。するとその荒れ果てたのをよい事にして、狐狸こりが棲すむ。盗人ぬすびとが棲む。とうとうしまいには、引取り手のない死人を、この門へ持って来て、棄てて行くと云う習慣さえ出来た。そこで、日の目が見えなくなると、誰でも気味を悪るがって、この門の近所へは足ぶみをしない事になってしまったのである。&lt;&#x2F;p&gt;
&lt;p&gt;その代りまた鴉からすがどこからか、たくさん集って来た。昼間見ると、その鴉が何羽となく輪を描いて、高い鴟尾しびのまわりを啼きながら、飛びまわっている。ことに門の上の空が、夕焼けであかくなる時には、それが胡麻ごまをまいたようにはっきり見えた。鴉は、勿論、門の上にある死人の肉を、啄ついばみに来るのである。――もっとも今日は、刻限こくげんが遅いせいか、一羽も見えない。ただ、所々、崩れかかった、そうしてその崩れ目に長い草のはえた石段の上に、鴉の糞ふんが、点々と白くこびりついているのが見える。下人は七段ある石段の一番上の段に、洗いざらした紺の襖あおの尻を据えて、右の頬に出来た、大きな面皰にきびを気にしながら、ぼんやり、雨のふるのを眺めていた。&lt;&#x2F;p&gt;
&lt;p&gt;作者はさっき、「下人が雨やみを待っていた」と書いた。しかし、下人は雨がやんでも、格別どうしようと云う当てはない。ふだんなら、勿論、主人の家へ帰る可き筈である。所がその主人からは、四五日前に暇を出された。前にも書いたように、当時京都の町は一通りならず衰微すいびしていた。今この下人が、永年、使われていた主人から、暇を出されたのも、実はこの衰微の小さな余波にほかならない。だから「下人が雨やみを待っていた」と云うよりも「雨にふりこめられた下人が、行き所がなくて、途方にくれていた」と云う方が、適当である。その上、今日の空模様も少からず、この平安朝の下人の Sentimentalisme に影響した。申さるの刻こく下さがりからふり出した雨は、いまだに上るけしきがない。そこで、下人は、何をおいても差当り明日あすの暮しをどうにかしようとして――云わばどうにもならない事を、どうにかしようとして、とりとめもない考えをたどりながら、さっきから朱雀大路にふる雨の音を、聞くともなく聞いていたのである。&lt;&#x2F;p&gt;
&lt;p&gt;雨は、羅生門をつつんで、遠くから、ざあっと云う音をあつめて来る。夕闇は次第に空を低くして、見上げると、門の屋根が、斜につき出した甍いらかの先に、重たくうす暗い雲を支えている。&lt;&#x2F;p&gt;
&lt;p&gt;どうにもならない事を、どうにかするためには、手段を選んでいる遑いとまはない。選んでいれば、築土ついじの下か、道ばたの土の上で、饑死うえじにをするばかりである。そうして、この門の上へ持って来て、犬のように棄てられてしまうばかりである。選ばないとすれば――下人の考えは、何度も同じ道を低徊ていかいした揚句あげくに、やっとこの局所へ逢着ほうちゃくした。しかしこの「すれば」は、いつまでたっても、結局「すれば」であった。下人は、手段を選ばないという事を肯定しながらも、この「すれば」のかたをつけるために、当然、その後に来る可き「盗人ぬすびとになるよりほかに仕方がない」と云う事を、積極的に肯定するだけの、勇気が出ずにいたのである。&lt;&#x2F;p&gt;
&lt;p&gt;下人は、大きな嚔くさめをして、それから、大儀たいぎそうに立上った。夕冷えのする京都は、もう火桶ひおけが欲しいほどの寒さである。風は門の柱と柱との間を、夕闇と共に遠慮なく、吹きぬける。丹塗にぬりの柱にとまっていた蟋蟀きりぎりすも、もうどこかへ行ってしまった。&lt;&#x2F;p&gt;
&lt;p&gt;下人は、頸くびをちぢめながら、山吹やまぶきの汗袗かざみに重ねた、紺の襖あおの肩を高くして門のまわりを見まわした。雨風の患うれえのない、人目にかかる惧おそれのない、一晩楽にねられそうな所があれば、そこでともかくも、夜を明かそうと思ったからである。すると、幸い門の上の楼へ上る、幅の広い、これも丹を塗った梯子はしごが眼についた。上なら、人がいたにしても、どうせ死人ばかりである。下人はそこで、腰にさげた聖柄ひじりづかの太刀たちが鞘走さやばしらないように気をつけながら、藁草履わらぞうりをはいた足を、その梯子の一番下の段へふみかけた。&lt;&#x2F;p&gt;
&lt;p&gt;それから、何分かの後である。羅生門の楼の上へ出る、幅の広い梯子の中段に、一人の男が、猫のように身をちぢめて、息を殺しながら、上の容子ようすを窺っていた。楼の上からさす火の光が、かすかに、その男の右の頬をぬらしている。短い鬚の中に、赤く膿うみを持った面皰にきびのある頬である。下人は、始めから、この上にいる者は、死人ばかりだと高を括くくっていた。それが、梯子を二三段上って見ると、上では誰か火をとぼして、しかもその火をそこここと動かしているらしい。これは、その濁った、黄いろい光が、隅々に蜘蛛くもの巣をかけた天井裏に、揺れながら映ったので、すぐにそれと知れたのである。この雨の夜に、この羅生門の上で、火をともしているからは、どうせただの者ではない。&lt;&#x2F;p&gt;
&lt;p&gt;下人は、守宮やもりのように足音をぬすんで、やっと急な梯子を、一番上の段まで這うようにして上りつめた。そうして体を出来るだけ、平たいらにしながら、頸を出来るだけ、前へ出して、恐る恐る、楼の内を覗のぞいて見た。&lt;&#x2F;p&gt;
&lt;p&gt;見ると、楼の内には、噂に聞いた通り、幾つかの死骸しがいが、無造作に棄ててあるが、火の光の及ぶ範囲が、思ったより狭いので、数は幾つともわからない。ただ、おぼろげながら、知れるのは、その中に裸の死骸と、着物を着た死骸とがあるという事である。勿論、中には女も男もまじっているらしい。そうして、その死骸は皆、それが、かつて、生きていた人間だと云う事実さえ疑われるほど、土を捏こねて造った人形のように、口を開あいたり手を延ばしたりして、ごろごろ床の上にころがっていた。しかも、肩とか胸とかの高くなっている部分に、ぼんやりした火の光をうけて、低くなっている部分の影を一層暗くしながら、永久に唖おしの如く黙っていた。&lt;&#x2F;p&gt;
&lt;p&gt;下人げにんは、それらの死骸の腐爛ふらんした臭気に思わず、鼻を掩おおった。しかし、その手は、次の瞬間には、もう鼻を掩う事を忘れていた。ある強い感情が、ほとんどことごとくこの男の嗅覚を奪ってしまったからだ。&lt;&#x2F;p&gt;
&lt;p&gt;下人の眼は、その時、はじめてその死骸の中に蹲うずくまっている人間を見た。檜皮色ひわだいろの着物を着た、背の低い、痩やせた、白髪頭しらがあたまの、猿のような老婆である。その老婆は、右の手に火をともした松の木片きぎれを持って、その死骸の一つの顔を覗きこむように眺めていた。髪の毛の長い所を見ると、多分女の死骸であろう。&lt;&#x2F;p&gt;
&lt;p&gt;下人は、六分の恐怖と四分の好奇心とに動かされて、暫時ざんじは呼吸いきをするのさえ忘れていた。旧記の記者の語を借りれば、「頭身とうしんの毛も太る」ように感じたのである。すると老婆は、松の木片を、床板の間に挿して、それから、今まで眺めていた死骸の首に両手をかけると、丁度、猿の親が猿の子の虱しらみをとるように、その長い髪の毛を一本ずつ抜きはじめた。髪は手に従って抜けるらしい。&lt;&#x2F;p&gt;
&lt;p&gt;その髪の毛が、一本ずつ抜けるのに従って、下人の心からは、恐怖が少しずつ消えて行った。そうして、それと同時に、この老婆に対するはげしい憎悪が、少しずつ動いて来た。――いや、この老婆に対すると云っては、語弊ごへいがあるかも知れない。むしろ、あらゆる悪に対する反感が、一分毎に強さを増して来たのである。この時、誰かがこの下人に、さっき門の下でこの男が考えていた、饑死うえじにをするか盗人ぬすびとになるかと云う問題を、改めて持出したら、恐らく下人は、何の未練もなく、饑死を選んだ事であろう。それほど、この男の悪を憎む心は、老婆の床に挿した松の木片きぎれのように、勢いよく燃え上り出していたのである。&lt;&#x2F;p&gt;
&lt;p&gt;下人には、勿論、何故老婆が死人の髪の毛を抜くかわからなかった。従って、合理的には、それを善悪のいずれに片づけてよいか知らなかった。しかし下人にとっては、この雨の夜に、この羅生門の上で、死人の髪の毛を抜くと云う事が、それだけで既に許すべからざる悪であった。勿論、下人は、さっきまで自分が、盗人になる気でいた事なぞは、とうに忘れていたのである。&lt;&#x2F;p&gt;
&lt;p&gt;そこで、下人は、両足に力を入れて、いきなり、梯子から上へ飛び上った。そうして聖柄ひじりづかの太刀に手をかけながら、大股に老婆の前へ歩みよった。老婆が驚いたのは云うまでもない。&lt;&#x2F;p&gt;
&lt;p&gt;老婆は、一目下人を見ると、まるで弩いしゆみにでも弾はじかれたように、飛び上った。&lt;&#x2F;p&gt;
&lt;p&gt;「おのれ、どこへ行く。」&lt;&#x2F;p&gt;
&lt;p&gt;下人は、老婆が死骸につまずきながら、慌てふためいて逃げようとする行手を塞ふさいで、こう罵ののしった。老婆は、それでも下人をつきのけて行こうとする。下人はまた、それを行かすまいとして、押しもどす。二人は死骸の中で、しばらく、無言のまま、つかみ合った。しかし勝敗は、はじめからわかっている。下人はとうとう、老婆の腕をつかんで、無理にそこへ※(「てへん＋丑」、第4水準2-12-93)ねじ倒した。丁度、鶏にわとりの脚のような、骨と皮ばかりの腕である。&lt;&#x2F;p&gt;
&lt;p&gt;「何をしていた。云え。云わぬと、これだぞよ。」&lt;&#x2F;p&gt;
&lt;p&gt;下人は、老婆をつき放すと、いきなり、太刀の鞘さやを払って、白い鋼はがねの色をその眼の前へつきつけた。けれども、老婆は黙っている。両手をわなわなふるわせて、肩で息を切りながら、眼を、眼球めだまが※(「目＋匡」、第3水準1-88-81)まぶたの外へ出そうになるほど、見開いて、唖のように執拗しゅうねく黙っている。これを見ると、下人は始めて明白にこの老婆の生死が、全然、自分の意志に支配されていると云う事を意識した。そうしてこの意識は、今までけわしく燃えていた憎悪の心を、いつの間にか冷ましてしまった。後あとに残ったのは、ただ、ある仕事をして、それが円満に成就した時の、安らかな得意と満足とがあるばかりである。そこで、下人は、老婆を見下しながら、少し声を柔らげてこう云った。&lt;&#x2F;p&gt;
&lt;p&gt;「己おれは検非違使けびいしの庁の役人などではない。今し方この門の下を通りかかった旅の者だ。だからお前に縄なわをかけて、どうしようと云うような事はない。ただ、今時分この門の上で、何をして居たのだか、それを己に話しさえすればいいのだ。」&lt;&#x2F;p&gt;
&lt;p&gt;すると、老婆は、見開いていた眼を、一層大きくして、じっとその下人の顔を見守った。※(「目＋匡」、第3水準1-88-81)まぶたの赤くなった、肉食鳥のような、鋭い眼で見たのである。それから、皺で、ほとんど、鼻と一つになった唇を、何か物でも噛んでいるように動かした。細い喉で、尖った喉仏のどぼとけの動いているのが見える。その時、その喉から、鴉からすの啼くような声が、喘あえぎ喘ぎ、下人の耳へ伝わって来た。&lt;&#x2F;p&gt;
&lt;p&gt;「この髪を抜いてな、この髪を抜いてな、鬘かずらにしようと思うたのじゃ。」&lt;&#x2F;p&gt;
&lt;p&gt;下人は、老婆の答が存外、平凡なのに失望した。そうして失望すると同時に、また前の憎悪が、冷やかな侮蔑ぶべつと一しょに、心の中へはいって来た。すると、その気色けしきが、先方へも通じたのであろう。老婆は、片手に、まだ死骸の頭から奪った長い抜け毛を持ったなり、蟇ひきのつぶやくような声で、口ごもりながら、こんな事を云った。&lt;&#x2F;p&gt;
&lt;p&gt;「成程な、死人しびとの髪の毛を抜くと云う事は、何ぼう悪い事かも知れぬ。じゃが、ここにいる死人どもは、皆、そのくらいな事を、されてもいい人間ばかりだぞよ。現在、わしが今、髪を抜いた女などはな、蛇を四寸しすんばかりずつに切って干したのを、干魚ほしうおだと云うて、太刀帯たてわきの陣へ売りに往いんだわ。疫病えやみにかかって死ななんだら、今でも売りに往んでいた事であろ。それもよ、この女の売る干魚は、味がよいと云うて、太刀帯どもが、欠かさず菜料さいりように買っていたそうな。わしは、この女のした事が悪いとは思うていぬ。せねば、饑死をするのじゃて、仕方がなくした事であろ。されば、今また、わしのしていた事も悪い事とは思わぬぞよ。これとてもやはりせねば、饑死をするじゃて、仕方がなくする事じゃわいの。じゃて、その仕方がない事を、よく知っていたこの女は、大方わしのする事も大目に見てくれるであろ。」&lt;&#x2F;p&gt;
&lt;p&gt;老婆は、大体こんな意味の事を云った。&lt;&#x2F;p&gt;
&lt;p&gt;下人は、太刀を鞘さやにおさめて、その太刀の柄つかを左の手でおさえながら、冷然として、この話を聞いていた。勿論、右の手では、赤く頬に膿を持った大きな面皰にきびを気にしながら、聞いているのである。しかし、これを聞いている中に、下人の心には、ある勇気が生まれて来た。それは、さっき門の下で、この男には欠けていた勇気である。そうして、またさっきこの門の上へ上って、この老婆を捕えた時の勇気とは、全然、反対な方向に動こうとする勇気である。下人は、饑死をするか盗人になるかに、迷わなかったばかりではない。その時のこの男の心もちから云えば、饑死などと云う事は、ほとんど、考える事さえ出来ないほど、意識の外に追い出されていた。&lt;&#x2F;p&gt;
&lt;p&gt;「きっと、そうか。」&lt;&#x2F;p&gt;
&lt;p&gt;老婆の話が完おわると、下人は嘲あざけるような声で念を押した。そうして、一足前へ出ると、不意に右の手を面皰にきびから離して、老婆の襟上えりがみをつかみながら、噛みつくようにこう云った。&lt;&#x2F;p&gt;
&lt;p&gt;「では、己おれが引剥ひはぎをしようと恨むまいな。己もそうしなければ、饑死をする体なのだ。」&lt;&#x2F;p&gt;
&lt;p&gt;下人は、すばやく、老婆の着物を剥ぎとった。それから、足にしがみつこうとする老婆を、手荒く死骸の上へ蹴倒した。梯子の口までは、僅に五歩を数えるばかりである。下人は、剥ぎとった檜皮色ひわだいろの着物をわきにかかえて、またたく間に急な梯子を夜の底へかけ下りた。&lt;&#x2F;p&gt;
&lt;p&gt;しばらく、死んだように倒れていた老婆が、死骸の中から、その裸の体を起したのは、それから間もなくの事である。老婆はつぶやくような、うめくような声を立てながら、まだ燃えている火の光をたよりに、梯子の口まで、這って行った。そうして、そこから、短い白髪しらがを倒さかさまにして、門の下を覗きこんだ。外には、ただ、黒洞々こくとうとうたる夜があるばかりである。&lt;&#x2F;p&gt;
&lt;p&gt;下人の行方ゆくえは、誰も知らない。&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
