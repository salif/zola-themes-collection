<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>mo8it-mod - database</title>
    <subtitle>mo8it&#x27;s personal website with a technical blog about Rust, Linux, FOSS and Self-Hosting</subtitle>
    <link rel="self" type="application/atom+xml" href="https://salif.github.io/zola-themes-collection/demo/mo8it-mod/tags/database/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/mo8it-mod/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-02-19T00:00:00+00:00</updated>
    <id>https://salif.github.io/zola-themes-collection/demo/mo8it-mod/tags/database/atom.xml</id>
    <entry xml:lang="en">
        <title>SQLx integration in Axum</title>
        <published>2023-05-29T00:00:00+00:00</published>
        <updated>2023-05-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/sqlx-integration-in-axum/"/>
        <id>https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/sqlx-integration-in-axum/</id>
        
        <summary type="html">&lt;p&gt;SQLx is an awesome crate for interacting with databases in Rust with compile time checks.
In this blog post, we will learn how to use it in an Axum backend to store and retrieve data from a database.&lt;&#x2F;p&gt;
&lt;p&gt;The example will be storing submitted contact forms from the &lt;a href=&quot;https:&#x2F;&#x2F;salif.github.io&#x2F;zola-themes-collection&#x2F;demo&#x2F;mo8it-mod&#x2F;blog&#x2F;getting-started-with-rust-backends&#x2F;&quot;&gt;previous post about Axum&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;During the SQLx integration, we will learn about states and returning JSON in Axum.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>SQLx - Interacting with databases in Rust</title>
        <published>2023-04-11T00:00:00+00:00</published>
        <updated>2023-04-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/sqlx-interacting-with-databases-in-rust/"/>
        <id>https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/sqlx-interacting-with-databases-in-rust/</id>
        
        <summary type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;launchbadge&#x2F;sqlx&quot;&gt;SQLx&lt;&#x2F;a&gt; is an async Rust crate that let&#x27;s us interact with a database with compile-time checked queries üß∞&lt;&#x2F;p&gt;
&lt;p&gt;This post will be a short introduction to SQLx with PostgreSQL, but SQLx also supports MySQL, SQLite, and MSSQL.&lt;&#x2F;p&gt;
&lt;p&gt;The example will be a todo list in a database. &lt;em&gt;A classical programming example&lt;&#x2F;em&gt;, I know üòÖ&lt;&#x2F;p&gt;
&lt;p&gt;We will also see if SQLx protects us against SQL injections üíâ&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Containerized PostgreSQL with rootless Podman</title>
        <published>2023-04-04T00:00:00+00:00</published>
        <updated>2024-02-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              mo8it
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/containerized-postgresql-with-rootless-podman/"/>
        <id>https://salif.github.io/zola-themes-collection/demo/mo8it-mod/blog/containerized-postgresql-with-rootless-podman/</id>
        
        <summary type="html">&lt;p&gt;This post is about running rootless Podman containers with &lt;a href=&quot;https:&#x2F;&#x2F;www.postgresql.org&quot;&gt;PostgreSQL&lt;&#x2F;a&gt; as a central example üì¶Ô∏è&lt;&#x2F;p&gt;
&lt;p&gt;The post serves as an optional preparation for the next post about interacting with databases with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;launchbadge&#x2F;sqlx&quot;&gt;SQLx&lt;&#x2F;a&gt; in Rust ü¶Ä&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
